-- MySQL dump 10.13  Distrib 5.1.72, for unknown-linux-gnu (x86_64)
--
-- Host: localhost    Database: thejsj_processing
-- ------------------------------------------------------
-- Server version	5.1.72-cll

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
INSERT INTO `wp_links` (`link_id`, `link_url`, `link_name`, `link_image`, `link_target`, `link_description`, `link_visible`, `link_owner`, `link_rating`, `link_updated`, `link_rel`, `link_notes`, `link_rss`) VALUES (1,'http://codex.wordpress.org/','Documentation','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(2,'http://wordpress.org/news/','WordPress Blog','','','','Y',1,0,'0000-00-00 00:00:00','','','http://wordpress.org/news/feed/'),(3,'http://wordpress.org/support/','Support Forums','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(4,'http://wordpress.org/extend/plugins/','Plugins','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(5,'http://wordpress.org/extend/themes/','Themes','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(6,'http://wordpress.org/support/forum/requests-and-feedback','Feedback','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(7,'http://planet.wordpress.org/','WordPress Planet','','','','Y',1,0,'0000-00-00 00:00:00','','','');
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_login_security_solution_fail`
--

DROP TABLE IF EXISTS `wp_login_security_solution_fail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_login_security_solution_fail` (
  `fail_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `ip` varchar(39) NOT NULL DEFAULT '',
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `pass_md5` varchar(64) NOT NULL DEFAULT '',
  `date_failed` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`fail_id`),
  KEY `ip` (`ip`(9)),
  KEY `user_login` (`user_login`(5)),
  KEY `pass_md5` (`pass_md5`(10))
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_login_security_solution_fail`
--

LOCK TABLES `wp_login_security_solution_fail` WRITE;
/*!40000 ALTER TABLE `wp_login_security_solution_fail` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_login_security_solution_fail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=MyISAM AUTO_INCREMENT=1886 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES (1,'siteurl','http://thejsj.com/processing','yes'),(2,'blogname','Processsing Course / KI','yes'),(3,'blogdescription','','yes'),(4,'users_can_register','0','yes'),(5,'admin_email','silvajr@vcu.edu','yes'),(6,'start_of_week','1','yes'),(7,'use_balanceTags','','yes'),(8,'use_smilies','','yes'),(9,'require_name_email','1','yes'),(10,'comments_notify','1','yes'),(11,'posts_per_rss','10','yes'),(12,'rss_use_excerpt','0','yes'),(13,'mailserver_url','mail.example.com','yes'),(14,'mailserver_login','login@example.com','yes'),(15,'mailserver_pass','password','yes'),(16,'mailserver_port','110','yes'),(17,'default_category','1','yes'),(18,'default_comment_status','open','yes'),(19,'default_ping_status','open','yes'),(20,'default_pingback_flag','1','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','F j, Y','yes'),(24,'time_format','g:i a','yes'),(25,'links_updated_date_format','F j, Y g:i a','yes'),(26,'links_recently_updated_prepend','<em>','yes'),(27,'links_recently_updated_append','</em>','yes'),(28,'links_recently_updated_time','120','yes'),(29,'comment_moderation','0','yes'),(30,'moderation_notify','1','yes'),(31,'permalink_structure','/%year%/%monthnum%/%day%/%postname%/','yes'),(32,'gzipcompression','0','yes'),(33,'hack_file','0','yes'),(34,'blog_charset','UTF-8','yes'),(35,'moderation_keys','','no'),(36,'active_plugins','a:6:{i:0;s:47:\"another-processing-java-applet-plugin/APJAP.php\";i:1;s:27:\"codecolorer/codecolorer.php\";i:2;s:32:\"disqus-comment-system/disqus.php\";i:3;s:31:\"inline-javascript/inline-js.php\";i:4;s:51:\"login-security-solution/login-security-solution.php\";i:5;s:31:\"processing-js/processing-js.php\";}','yes'),(37,'home','http://thejsj.com/processing','yes'),(38,'category_base','','yes'),(39,'ping_sites','http://rpc.pingomatic.com/','yes'),(40,'advanced_edit','0','yes'),(41,'comment_max_links','2','yes'),(42,'gmt_offset','0','yes'),(43,'default_email_category','1','yes'),(44,'recently_edited','','no'),(45,'template','geex3m','yes'),(46,'stylesheet','geex3m','yes'),(47,'comment_whitelist','1','yes'),(48,'blacklist_keys','','no'),(49,'comment_registration','0','yes'),(50,'html_type','text/html','yes'),(51,'use_trackback','0','yes'),(52,'default_role','subscriber','yes'),(53,'db_version','22441','yes'),(54,'uploads_use_yearmonth_folders','1','yes'),(55,'upload_path','','yes'),(56,'blog_public','1','yes'),(57,'default_link_category','2','yes'),(58,'show_on_front','posts','yes'),(59,'tag_base','','yes'),(60,'show_avatars','1','yes'),(61,'avatar_rating','G','yes'),(62,'upload_url_path','','yes'),(63,'thumbnail_size_w','150','yes'),(64,'thumbnail_size_h','150','yes'),(65,'thumbnail_crop','1','yes'),(66,'medium_size_w','300','yes'),(67,'medium_size_h','300','yes'),(68,'avatar_default','mystery','yes'),(71,'large_size_w','1024','yes'),(72,'large_size_h','1024','yes'),(73,'image_default_link_type','file','yes'),(74,'image_default_size','','yes'),(75,'image_default_align','','yes'),(76,'close_comments_for_old_posts','0','yes'),(77,'close_comments_days_old','14','yes'),(78,'thread_comments','1','yes'),(79,'thread_comments_depth','5','yes'),(80,'page_comments','0','yes'),(81,'comments_per_page','50','yes'),(82,'default_comments_page','newest','yes'),(83,'comment_order','asc','yes'),(84,'sticky_posts','a:0:{}','yes'),(85,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:10:\"Categories\";s:5:\"count\";i:1;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(86,'widget_text','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(87,'widget_rss','a:0:{}','yes'),(88,'uninstall_plugins','a:0:{}','no'),(89,'timezone_string','','yes'),(90,'embed_autourls','1','yes'),(91,'embed_size_w','','yes'),(92,'embed_size_h','600','yes'),(93,'page_for_posts','0','yes'),(94,'page_on_front','0','yes'),(95,'default_post_format','','yes'),(96,'initial_db_version','21115','yes'),(97,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:62:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:9:\"add_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(98,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:6:\"Search\";}s:12:\"_multiwidget\";i:1;}','yes'),(99,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:5:\"Posts\";s:6:\"number\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(100,'widget_recent-comments','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(101,'widget_archives','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(102,'widget_meta','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(103,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:4:{i:0;s:7:\"pages-2\";i:1;s:14:\"recent-posts-2\";i:2;s:12:\"categories-2\";i:3;s:8:\"search-2\";}s:13:\"array_version\";i:3;}','yes'),(228,'widget_pages','a:2:{i:2;a:3:{s:5:\"title\";s:9:\"Resources\";s:6:\"sortby\";s:10:\"post_title\";s:7:\"exclude\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(104,'cron','a:4:{i:1384924532;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1384967738;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1384968603;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(1864,'link_manager_enabled','1','yes'),(1867,'can_compress_scripts','1','yes'),(1865,'rewrite_rules','a:71:{s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:29:\"comments/page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:58:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:68:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:88:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:85:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&tb=1\";s:77:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:65:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&paged=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&cpage=$matches[5]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)(/[0-9]+)?/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&page=$matches[5]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&cpage=$matches[4]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:20:\"(.?.+?)(/[0-9]+)?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";}','yes'),(1884,'_site_transient_timeout_theme_roots','1384924620','yes'),(1885,'_site_transient_theme_roots','a:4:{s:6:\"geex3m\";s:7:\"/themes\";s:12:\"twentyeleven\";s:7:\"/themes\";s:9:\"twentyten\";s:7:\"/themes\";s:12:\"twentytwelve\";s:7:\"/themes\";}','yes'),(148,'_site_transient_update_themes','O:8:\"stdClass\":3:{s:12:\"last_checked\";i:1384922821;s:7:\"checked\";a:4:{s:6:\"geex3m\";s:3:\"1.0\";s:12:\"twentyeleven\";s:3:\"1.4\";s:9:\"twentyten\";s:3:\"1.4\";s:12:\"twentytwelve\";s:3:\"1.1\";}s:8:\"response\";a:3:{s:12:\"twentyeleven\";a:3:{s:11:\"new_version\";s:3:\"1.7\";s:3:\"url\";s:40:\"http://wordpress.org/themes/twentyeleven\";s:7:\"package\";s:57:\"http://wordpress.org/themes/download/twentyeleven.1.7.zip\";}s:9:\"twentyten\";a:3:{s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:37:\"http://wordpress.org/themes/twentyten\";s:7:\"package\";s:54:\"http://wordpress.org/themes/download/twentyten.1.6.zip\";}s:12:\"twentytwelve\";a:3:{s:11:\"new_version\";s:3:\"1.3\";s:3:\"url\";s:40:\"http://wordpress.org/themes/twentytwelve\";s:7:\"package\";s:57:\"http://wordpress.org/themes/download/twentytwelve.1.3.zip\";}}}','yes'),(527,'_site_transient_timeout_browser_9f2ac40b9850c532e3a166e383b5c89f','1346970035','yes'),(528,'_site_transient_browser_9f2ac40b9850c532e3a166e383b5c89f','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"21.0.1180.82\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(113,'dashboard_widget_options','a:4:{s:25:\"dashboard_recent_comments\";a:1:{s:5:\"items\";i:5;}s:24:\"dashboard_incoming_links\";a:5:{s:4:\"home\";s:36:\"http://thejsj.com/classes/processing\";s:4:\"link\";s:112:\"http://blogsearch.google.com/blogsearch?scoring=d&partner=wordpress&q=link:http://thejsj.com/classes/processing/\";s:3:\"url\";s:137:\"http://blogsearch.google.com/blogsearch_feeds?scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://thejsj.com/processing/\";s:5:\"items\";i:10;s:9:\"show_date\";b:0;}s:17:\"dashboard_primary\";a:7:{s:4:\"link\";s:26:\"http://wordpress.org/news/\";s:3:\"url\";s:31:\"http://wordpress.org/news/feed/\";s:5:\"title\";s:14:\"WordPress Blog\";s:5:\"items\";i:2;s:12:\"show_summary\";i:1;s:11:\"show_author\";i:0;s:9:\"show_date\";i:1;}s:19:\"dashboard_secondary\";a:7:{s:4:\"link\";s:28:\"http://planet.wordpress.org/\";s:3:\"url\";s:33:\"http://planet.wordpress.org/feed/\";s:5:\"title\";s:20:\"Other WordPress News\";s:5:\"items\";i:5;s:12:\"show_summary\";i:0;s:11:\"show_author\";i:0;s:9:\"show_date\";i:0;}}','yes'),(1848,'_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c','1366117800','no'),(1849,'_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c','1366074600','no'),(1850,'_transient_timeout_dash_aa95765b5cc111c56d5993d476b1c2f0','1366117800','no'),(1851,'_transient_dash_aa95765b5cc111c56d5993d476b1c2f0','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'http://alexking.org/blog/2013/04/15/16482\' title=\'Any icon artists out there interested in creating an application icon for a free (GPL) WordPress-based app that @crowdfavorite is working on? [&hellip;]\'>Alex King: Any icon artists out there interested in creating …</a></li><li><a class=\'rsswidget\' href=\'http://alexking.org/blog/2013/04/14/backward-compatible-wp-heartbeat-api-usage\' title=\'I wanted to utilize the WP 3.6 heartbeat API in an app I’m working on. I also wanted to include this feature before WordPress 3.6 officially shipped, so that meant it had to be compatible with WordPress 3.5.x as well. Turns out, it’s really easy. The heartbeat API looks excellent. View the code on Gist. [&hellip;]\'>Alex King: Backward Compatible WP Heartbeat API Usage</a></li><li><a class=\'rsswidget\' href=\'http://ma.tt/2013/04/passwords-and-brute-force/\' title=\'Almost 3 years ago we released a version of WordPress (3.0) that allowed you to pick a custom username on installation, which largely ended people using “admin” as their default username. Right now there’s a botnet going around all of the WordPresses it can find trying to login with the “admin” username and a bunch of common passwords, and it has turned into [&hellip;]\'>Matt: Passwords and Brute Force</a></li><li><a class=\'rsswidget\' href=\'http://wordpress.tv/2013/04/12/mel-choyce-design-basics-for-non-designers/\' title=\' [&hellip;]\'>WordPress.tv: Mel Choyce: Design Basics for Non-Designers</a></li><li><a class=\'rsswidget\' href=\'http://wordpress.tv/2013/04/12/tracy-levesque-custom-post-types-for-right-brained-folks/\' title=\' [&hellip;]\'>WordPress.tv: Tracy Levesque: Custom Post Types for Right-Brained Folks</a></li></ul></div>','no'),(1858,'_transient_timeout_feed_mod_57bc725ad6568758915363af670fd8bc','1366117801','no'),(1859,'_transient_feed_mod_57bc725ad6568758915363af670fd8bc','1366074601','no'),(1862,'_transient_timeout_dash_de3249c4736ad3bd2cd29147c4a0d43e','1366117801','no'),(1863,'_transient_dash_de3249c4736ad3bd2cd29147c4a0d43e','<h4>Most Popular</h4>\n<h5><a href=\'http://wordpress.org/extend/plugins/better-wp-security/\'>Better WP Security</a></h5>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=better-wp-security&amp;_wpnonce=ec08dd7721&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'Better WP Security\'>Install</a>)</span>\n<p>The easiest, most effective way to secure WordPress. Improve the security of any WordPress site in seconds.</p>\n<h4>Newest Plugins</h4>\n<h5><a href=\'http://wordpress.org/extend/plugins/evolution-twitter-timeline/\'>Evolution Twitter Timeline</a></h5>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=evolution-twitter-timeline&amp;_wpnonce=045595569d&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'Evolution Twitter Timeline\'>Install</a>)</span>\n<p>Creates a new and simple to use widget that outputs the awesome Twitter Embedded Timeline.</p>\n','no'),(1860,'_transient_timeout_plugin_slugs','1366161001','no'),(1861,'_transient_plugin_slugs','a:9:{i:0;s:19:\"akismet/akismet.php\";i:1;s:47:\"another-processing-java-applet-plugin/APJAP.php\";i:2;s:27:\"codecolorer/codecolorer.php\";i:3;s:32:\"disqus-comment-system/disqus.php\";i:4;s:9:\"hello.php\";i:5;s:47:\"html-javascript-adder/html-javascript-adder.php\";i:6;s:31:\"inline-javascript/inline-js.php\";i:7;s:51:\"login-security-solution/login-security-solution.php\";i:8;s:31:\"processing-js/processing-js.php\";}','no'),(1840,'_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','1366117800','no'),(1841,'_transient_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:50:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://wordpress.org/news\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 13:48:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"http://wordpress.org/?v=3.6-beta1-23970\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Save the Date: May 27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2013/04/save-the-date-may-27/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2013/04/save-the-date-may-27/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 13:48:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Uncategorized\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2555\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:325:\"What&#8217;s on May 27, you ask? May 27, 2013 is the 10th anniversary of the first WordPress release! We think this is worth celebrating, and we want WordPress fans all over the world to celebrate with us by throwing their own parties. We&#8217;re using Meetup Everywhere to coordinate, and will be putting up a website [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jen Mylo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2102:\"<p>What&#8217;s on May 27, you ask?</p>\n<p>May 27, 2013 is the <strong>10th anniversary</strong> of the <a href=\"http://wordpress.org/news/2003/05/wordpress-now-available/\">first WordPress release</a>!</p>\n<p>We think this is worth celebrating, and we want WordPress fans all over the world to celebrate with us by throwing their own parties. <a href=\"http://www.meetup.com/WordPress/\">We&#8217;re using Meetup Everywhere</a> to coordinate, and will be putting up a website just for the 10th Anniversary so that we can collect photos, videos, tweets, and posts from all the parties.</p>\n<p>The rules are very simple:</p>\n<ol>\n<li><span style=\"line-height: 12.997159004211426px\">Pick a place to go where a bunch of people can be merry &#8212; a park, a bar, a backyard, whatever</span></li>\n<li>Spread the word to local meetups, tech groups, press, etc and get people to say they&#8217;ll come to your party</li>\n<li>If 50 or more people RSVP to your party, we&#8217;ll try to send you some WordPress stickers and buttons</li>\n<li>Have party attendees post photos, videos, and the like with the #wp10 hashtag</li>\n</ol>\n<p>We&#8217;ll be using Meetup Everywhere to coordinate parties all over the world, so get your city on the map and <a href=\"http://www.meetup.com/WordPress/\">register your party now</a> !</p>\n<p>We&#8217;ll follow up with registered organizers  over the next few weeks with some tips for how to publicize your party and to get addresses for swag packages. To that end, make sure you check the option that lets WordPress 10th Anniversary know your email, or we won&#8217;t be able to get in touch with you for these things or to give you access to the WP10 blog.</p>\n<p>Whose party will be the biggest? The most fun? The most inventive? Will it be yours?</p>\n<p><em>Note: If you already run a group on meetup.com, making your party an event in your group is great, but you still need to post it and have people RSVP at the <a href=\"http://www.meetup.com/WordPress/\">special party page</a>, because regular groups and Meetup Everywhere groups aren&#8217;t connected yet. </em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2013/04/save-the-date-may-27/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 3.6 Beta 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2013/04/wordpress-3-6-beta-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2013/04/wordpress-3-6-beta-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Apr 2013 17:25:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Uncategorized\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2547\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:377:\"WordPress 3.6 Beta 1 is now available! This is software still in development and we really don’t recommend that you run it on a production site — set up a test site just to play with the new version. To test WordPress 3.6, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can download the beta here (zip). We&#8217;ve [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Mark Jaquith\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4085:\"<p>WordPress 3.6 Beta 1 is now available!</p>\n<p>This is software still in development and <strong>we <em>really</em> don’t recommend that you run it on a production site</strong> — set up a test site just to play with the new version. To test WordPress 3.6, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-3.6-beta1.zip\">download the beta here</a> (zip).</p>\n<p>We&#8217;ve been working for nearly three months and have completed all the features that are slated for this release. This is a bit of a change from the betas of previous release cycles. I felt very strongly that we shouldn&#8217;t release a beta if we were still working on completing the main features. This beta is <strong>actually a beta</strong>, not an alpha that we&#8217;re calling a beta. If you are a WordPress plugin or theme developer, or a WordPress hosting provider, you should absolutely start testing your code against this new version <strong>now</strong>. More bugs will be fixed, and some of the features will get polished, but we&#8217;re not going to shove in some big new feature. We&#8217;re ready for you to test it, so jump in there! The more you test the beta, the more stable our release candidates and our final release will be.</p>\n<p>As always, if you think you’ve found a bug, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a reproducible bug report, <a href=\"http://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/report/5\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=3.6\">everything we&#8217;ve fixed</a> so far.</p>\n<p>Here&#8217;s what&#8217;s new in 3.6:</p>\n<ul>\n<li><strong>Post Formats: </strong> Post Formats now have their own UI, and theme authors have access to templating functions to access the structured data.</li>\n<li><strong>Twenty Thirteen:</strong> We&#8217;re shipping this year&#8217;s default theme in our first release of the year. Twenty Thirteen is an opinionated, color-rich, blog-centric theme that makes full use of the new Post Formats support.</li>\n<li><strong>Audio/Video:</strong> You can embed audio and video files into your posts without relying on a plugin or a third party media hosting service.</li>\n<li><strong>Autosave: </strong> Posts are now autosaved locally. If your browser crashes, your computer dies, or the server goes offline as you&#8217;re saving, you won&#8217;t lose the your post.</li>\n<li><strong>Post Locking: </strong> See when someone is currently editing a post, and kick them out of it if they fall asleep at the keyboard.</li>\n<li><strong>Nav Menus: </strong> Nav menus have been simplified with an accordion-based UI, and a separate tab for  bulk-assigning menus to locations.</li>\n<li><strong>Revisions:</strong> The all-new revisions UI features avatars, a slider that &#8220;scrubs&#8221; through history, and two-slider range comparisons.</li>\n</ul>\n<p><strong>Developers: </strong> You make WordPress awesome(er). One of the things we strive to do with every release is be compatible with existing plugins and themes. But we need your help. <strong>Please test your plugins and themes against 3.6.</strong> If something isn&#8217;t quite right, please let us know. (Chances are, it wasn&#8217;t intentional.) If you&#8217;re a forward-thinking theme developer, you should be looking at implementing the new Post Format support in some of your themes (look to Twenty Thirteen for inspiration).</p>\n<p>We&#8217;re looking forward to your feedback. If you break it (i.e. find a bug), please report it, and if you’re a developer, try to help us fix it. We&#8217;ve already had more than 150 contributors to version 3.6 — it&#8217;s not too late to join the party!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2013/04/wordpress-3-6-beta-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"WordPress 3.5.1 Maintenance and Security Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"http://wordpress.org/news/2013/01/wordpress-3-5-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/news/2013/01/wordpress-3-5-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 24 Jan 2013 22:23:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2531\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:359:\"WordPress 3.5.1 is now available. Version 3.5.1 is the first maintenance release of 3.5, fixing 37 bugs. It is also a security release for all previous WordPress versions. For a full list of changes, consult the list of tickets and the changelog, which include: Editor: Prevent certain HTML elements from being unexpectedly removed or modified in rare [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2499:\"<p>WordPress 3.5.1 is now available. Version 3.5.1 is the first maintenance release of 3.5, <a href=\"http://core.trac.wordpress.org/milestone/3.5.1\">fixing 37 bugs</a>. It is also a security release for all previous WordPress versions. For a full list of changes, consult the <a href=\"http://core.trac.wordpress.org/query?milestone=3.5.1\">list of tickets</a> and the <a href=\"http://core.trac.wordpress.org/log/branches/3.5?rev=23341&amp;stop_rev=23167\">changelog</a>, which include:</p>\n<ul>\n<li>Editor: Prevent certain HTML elements from being unexpectedly removed or modified in rare cases.</li>\n<li>Media: Fix a collection of minor workflow and compatibility issues in the new media manager.</li>\n<li>Networks: Suggest proper rewrite rules when creating a new network.</li>\n<li>Prevent scheduled posts from being stripped of certain HTML, such as video embeds, when they are published.</li>\n<li>Work around some misconfigurations that may have caused some JavaScript in the WordPress admin area to fail.</li>\n<li>Suppress some warnings that could occur when a plugin misused the database or user APIs.</li>\n</ul>\n<p>Additionally, a bug affecting Windows servers running IIS can prevent updating from 3.5 to 3.5.1. If you receive the error &#8220;Destination directory for file streaming does not exist or is not writable,&#8221; you will need to <a href=\"http://codex.wordpress.org/Version_3.5.1\">follow the steps outlined on the Codex</a>.</p>\n<p>WordPress 3.5.1 also addresses the following security issues:</p>\n<ul>\n<li>A server-side request forgery vulnerability and remote port scanning using pingbacks. This vulnerability, which could potentially be used to expose information and compromise a site, affects all previous WordPress versions. This was fixed by the WordPress security team. We&#8217;d like to thank security researchers <a href=\"http://codeseekah.com/\">Gennady Kovshenin</a> and <a href=\"http://www.ethicalhack3r.co.uk/\">Ryan Dewhurst</a> for reviewing our work.</li>\n<li>Two instances of cross-site scripting via shortcodes and post content. These issues were discovered by Jon Cave of the WordPress security team.</li>\n<li>A cross-site scripting vulnerability in the external library Plupload. Thanks to the Moxiecode team for working with us on this, and for releasing Plupload 1.5.5 to address this issue.</li>\n</ul>\n<p><strong><a href=\"http://wordpress.org/download/\">Download 3.5.1</a> or visit Dashboard → Updates in your site admin to update now.</strong></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2013/01/wordpress-3-5-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"2012: A Look Back\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"http://wordpress.org/news/2013/01/2012-a-look-back/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2013/01/2012-a-look-back/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 01 Jan 2013 02:22:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Uncategorized\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2525\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:340:\"Another year is coming to a close, and it&#8217;s time to look back and reflect on what we&#8217;ve accomplished in the past twelve months. The WordPress community is stronger than ever, and some of the accomplishments of the past year are definitely worth remembering. Software Releases We had two major releases of the WordPress web [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jen Mylo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4441:\"<p>Another year is coming to a close, and it&#8217;s time to look back and reflect on what we&#8217;ve accomplished in the past twelve months. The WordPress community is stronger than ever, and some of the accomplishments of the past year are definitely worth remembering.</p>\n<h4>Software Releases</h4>\n<p>We had two major releases of the WordPress web application with versions <a href=\"http://wordpress.org/news/2012/06/green/\">3.4</a> and <a href=\"http://wordpress.org/news/2012/12/elvin/\">3.5</a>, as well as 5 security releases during 2012. 3.4 included the theme customizer, while 3.5 became the long awaited &#8220;media release&#8221; featuring a new uploader and gallery management tool. 3.5 contained code contributions from more people than ever, and we hope to continue growing the contributor ranks in the year ahead. We currently have native apps on 6 mobile platforms &#8212; <a href=\"http://ios.wordpress.org/\">iOS</a>, <a href=\"http://android.wordpress.org/\">Android</a>, <a href=\"http://blackberry.wordpress.org/\">Blackberry</a>, <a href=\"http://wpwindowsphone.wordpress.com/\">Windows Phone</a>, <a href=\"http://nokia.wordpress.org/\">Nokia</a>, and <a href=\"http://webos.wordpress.org/\">WebOS</a> &#8212; and saw several updates there as well.</p>\n<h4>Plugin Directory</h4>\n<p>A number of improvements were made to the Plugin Directory in 2012. More cosmetic  updates, like the introduction of branded plugin page headers, make it a nicer browsing experience, while functional changes like better-integrated support forums, plugin reviews, and a favorites system made the plugin directory even more useful as a resource.</p>\n<h4>The &#8220;Make&#8221; Network and Team Reps</h4>\n<p>2012 was the year that saw the creation of <a href=\"http://make.wordpress.org/\">Make.wordpress.org</a>, a network of sites for the teams of contributors responsible for the different areas of the WordPress project. Now anyone can follow along and get involved with the teams that work on <a href=\"http://make.wordpress.org/core/\">core</a>, <a href=\"http://make.wordpress.org/themes/\">theme review</a>, <a href=\"http://make.wordpress.org/support/\">forum support</a>, <a href=\"http://make.wordpress.org/docs/\">documentation</a>, and more. In 2013 we&#8217;ll work to improve these sites to make it easier to become a contributor. Each team also now has elected Team Reps, a new role that has already led to more cross-team communication. Team reps post each week to the <a href=\"https://make.wordpress.org/updates/\">Updates blog</a> so that the other reps can keep up with what&#8217;s going on in other teams.</p>\n<h4>WordPress Community Summit</h4>\n<p>At the end of October, about 100 of the most influential and respected members of the WordPress community attended an inaugural <a href=\"https://make.wordpress.org/summit\">summit</a> to discuss where we all stand, and to figure out where we go next with WordPress. A &#8220;conference of conversations,&#8221; this unconference made everyone an active participant, and while not every issue brought to the table was solved by the end of the event, the right questions were being asked.</p>\n<h4>Meetup.com</h4>\n<p>The WordPress Foundation now has a central account with Meetup.com. We&#8217;ve brought in a couple dozen existing meetup groups as a pilot to test the system, and are in the process of working with more existing meetups (as well as new ones) to join us so that local organizers won&#8217;t have to pay organizer dues and can get more support from the WordPress project.</p>\n<h4>Internet Blackout Day</h4>\n<p>We participated in the protest against SOPA/PIPA, Internet Blackout Day, on January 18. Though we usually stay out of politics, this campaign was important, and we not only participated in the blackout on WordPress.org, we encouraged our users to do so as well, and recommended plugins to provide blackout functionality. It was deemed the <a href=\"http://sopastrike.com/numbers/\">largest online protest in history</a>.</p>\n<h4>WordCamps</h4>\n<p>And finally, it wouldn&#8217;t be a recap without counting up the <a href=\"http://wordcamp.org\">WordCamps</a>! There were 67 WordCamps around the world in 2012, bringing together WordPress users, developers, and fans. If you didn&#8217;t make it to a WordCamp this year, maybe it can be one of your new year resolutions: <a href=\"http://central.wordcamp.org/schedule/\">check the schedule</a> to find one near you!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/news/2013/01/2012-a-look-back/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 3.5 “Elvin”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/news/2012/12/elvin/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"http://wordpress.org/news/2012/12/elvin/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 11 Dec 2012 16:54:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2517\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:363:\"It&#8217;s the most wonderful time of the year: a new WordPress release is available and chock-full of goodies to delight bloggers and developers alike. We&#8217;re calling this one &#8220;Elvin&#8221; in honor of drummer Elvin Jones, who played with John Coltrane in addition to many others. If you&#8217;ve been around WordPress a while, the most dramatic [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:20083:\"<p>It&#8217;s the most wonderful time of the year: a new WordPress release <a href=\"http://wordpress.org/download/\">is available</a> and chock-full of goodies to delight bloggers and developers alike. We&#8217;re calling this one &#8220;Elvin&#8221; in honor of <a href=\"http://en.wikipedia.org/wiki/Elvin_Jones\">drummer Elvin Jones</a>, who played with John Coltrane in addition to many others.</p>\n<p>If you&#8217;ve been around WordPress a while, the most dramatic new change you&#8217;ll notice is a completely re-imagined flow for uploading photos and creating galleries. Media has long been a friction point and we&#8217;ve listened hard and given a lot of thought into crafting this new system. 3.5 includes a new default theme, Twenty Twelve, which has a very clean mobile-first responsive design and works fantastic as a base for a CMS site. Finally we&#8217;ve spent a lot of time refreshing the styles of the dashboard, updating everything to be Retina-ready with beautiful high resolution graphics, a new color picker, and streamlining a couple of fewer-used sections of the admin.</p>\n<p>Here&#8217;s a quick video overview of everything you can share with your friends:</p>\n<div id=\"v-jQDfEbzZ-1\" class=\"video-player\"><embed id=\"v-jQDfEbzZ-1-video\" src=\"http://s0.videopress.com/player.swf?v=1.03&amp;guid=jQDfEbzZ&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" title=\"Introducing WordPress 3.5\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<h3>For Developers</h3>\n<p>You can now put your (or anyone&#8217;s) WordPress.org username on the plugins page and see your favorite tagged ones, to make it easy to install them again when setting up a new site. There&#8217;s a new Tumblr importer. New installs no longer show the links manager. Finally for multisite developers <code>switch_to_blog()</code> is way faster and you can now install MS in a sub-directory. The <a href=\"http://underscorejs.org/\">Underscore</a> and <a href=\"http://backbonejs.org/\">Backbone</a> JavaScript libraries are now available. <a href=\"http://codex.wordpress.org/Version_3.5\">The Codex has a pretty good summary of the developer features above and beyond this</a>, and you can always <a href=\"http://core.trac.wordpress.org/milestone/3.5\">grab a warm beverage and explore Trac directly</a>.</p>\n<h3>Percussion Section</h3>\n<p>Behind every great release is great contributors. 3.5 had more people involved than any release before it:</p>\n<p><a href=\"http://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"http://profiles.wordpress.org/aaronholbrook\">aaronholbrook</a>, <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/kawauso\">Adam Harley</a>, <a href=\"http://profiles.wordpress.org/alyssonweb\">akbortoli</a>, <a href=\"http://profiles.wordpress.org/alecrust\">alecrust</a>, <a href=\"http://profiles.wordpress.org/xknown\">Alex Concha</a>, <a href=\"http://profiles.wordpress.org/alexkingorg\">Alex King</a>, <a href=\"http://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>, <a href=\"http://profiles.wordpress.org/alexvorn2\">alexvorn2</a>, <a href=\"http://profiles.wordpress.org/ampt\">ampt</a>, <a href=\"http://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"http://profiles.wordpress.org/andrear\">andrea.r</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/andrewryno\">Andrew Ryno</a>, <a href=\"http://profiles.wordpress.org/andrewspittle\">Andrew Spittle</a>, <a href=\"http://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"http://profiles.wordpress.org/apokalyptik\">apokalyptik</a>, <a href=\"http://profiles.wordpress.org/bainternet\">Bainternet</a>, <a href=\"http://profiles.wordpress.org/barrykooij\">Barry Kooij</a>, <a href=\"http://profiles.wordpress.org/bazza\">bazza</a>, <a href=\"http://profiles.wordpress.org/bbrooks\">bbrooks</a>, <a href=\"http://profiles.wordpress.org/casben79\">Ben Casey</a>, <a href=\"http://profiles.wordpress.org/husobj\">Ben Huson</a>, <a href=\"http://profiles.wordpress.org/benkulbertis\">Ben Kulbertis</a>, <a href=\"http://profiles.wordpress.org/bergius\">bergius</a>, <a href=\"http://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>, <a href=\"http://profiles.wordpress.org/betzster\">betzster</a>, <a href=\"http://profiles.wordpress.org/bananastalktome\">Billy (bananastalktome)</a>, <a href=\"http://profiles.wordpress.org/bolo1988\">bolo1988</a>, <a href=\"http://profiles.wordpress.org/bradparbs\">bradparbs</a>, <a href=\"http://profiles.wordpress.org/bradthomas127\">bradthomas127</a>, <a href=\"http://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"http://profiles.wordpress.org/brandondove\">Brandon Dove</a>, <a href=\"http://profiles.wordpress.org/brianlayman\">Brian Layman</a>, <a href=\"http://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"http://profiles.wordpress.org/sennza\">Bronson Quick</a>, <a href=\"http://profiles.wordpress.org/bpetty\">Bryan Petty</a>, <a href=\"http://profiles.wordpress.org/cannona\">cannona</a>, <a href=\"http://profiles.wordpress.org/sixhours\">Caroline Moore</a>, <a href=\"http://profiles.wordpress.org/caspie\">Caspie</a>, <a href=\"http://profiles.wordpress.org/cdog\">cdog</a>, <a href=\"http://profiles.wordpress.org/thee17\">Charles Frees-Melvin</a>, <a href=\"http://profiles.wordpress.org/chellycat\">chellycat</a>, <a href=\"http://profiles.wordpress.org/chexee\">Chelsea Otakan</a>, <a href=\"http://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"http://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"http://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"http://profiles.wordpress.org/chriswallace\">Chris Wallace</a>, <a href=\"http://profiles.wordpress.org/corvannoorloos\">Cor van Noorloos</a>, <a href=\"http://profiles.wordpress.org/scribu\">Cristi Burc&#259;</a>, <a href=\"http://profiles.wordpress.org/mrroundhill\">Dan</a>, <a href=\"http://profiles.wordpress.org/dan-rivera\">Dan Rivera</a>, <a href=\"http://profiles.wordpress.org/koopersmith\">Daryl Koopersmith</a>, <a href=\"http://profiles.wordpress.org/lessbloat\">Dave Martin</a>, <a href=\"http://profiles.wordpress.org/deltafactory\">deltafactory</a>, <a href=\"http://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"http://profiles.wordpress.org/djzone\">DjZoNe</a>, <a href=\"http://profiles.wordpress.org/dllh\">dllh</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/doublesharp\">doublesharp</a>, <a href=\"http://profiles.wordpress.org/drewapicture\">Drew Jaynes (DrewAPicture)</a>, <a href=\"http://profiles.wordpress.org/drewstrojny\">Drew Strojny</a>, <a href=\"http://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>, <a href=\"http://profiles.wordpress.org/elyobo\">elyobo</a>, <a href=\"http://profiles.wordpress.org/emiluzelac\">Emil Uzelac</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">Empireoflight</a>, <a href=\"http://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>, <a href=\"http://profiles.wordpress.org/ethitter\">Erick Hitter</a>, <a href=\"http://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"http://profiles.wordpress.org/ericwahlforss\">ericwahlforss</a>, <a href=\"http://profiles.wordpress.org/evansolomon\">Evan Solomon</a>, <a href=\"http://profiles.wordpress.org/fadingdust\">fadingdust</a>, <a href=\"http://profiles.wordpress.org/f-j-kaiser\">F J Kaiser</a>, <a href=\"http://profiles.wordpress.org/foxinni\">foxinni</a>, <a href=\"http://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"http://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"http://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"http://profiles.wordpress.org/geertdd\">GeertDD</a>, <a href=\"http://profiles.wordpress.org/mamaduka\">George Mamadashvili</a>, <a href=\"http://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"http://profiles.wordpress.org/ghosttoast\">GhostToast</a>, <a href=\"http://profiles.wordpress.org/gnarf\">gnarf</a>, <a href=\"http://profiles.wordpress.org/goldenapples\">goldenapples</a>, <a href=\"http://profiles.wordpress.org/webord\">Gustavo Bordoni</a>, <a href=\"http://profiles.wordpress.org/hakre\">hakre</a>, <a href=\"http://profiles.wordpress.org/hanni\">hanni</a>, <a href=\"http://profiles.wordpress.org/hardy101\">hardy101</a>, <a href=\"http://profiles.wordpress.org/hebbet\">hebbet</a>, <a href=\"http://profiles.wordpress.org/helenyhou\">Helen Hou-Sandi</a>, <a href=\"http://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>, <a href=\"http://profiles.wordpress.org/iamfriendly\">iamfriendly</a>, <a href=\"http://profiles.wordpress.org/iandstewart\">Ian Stewart</a>, <a href=\"http://profiles.wordpress.org/ikailo\">ikailo</a>, <a href=\"http://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"http://profiles.wordpress.org/itworx\">itworx</a>, <a href=\"http://profiles.wordpress.org/j-idris\">j-idris</a>, <a href=\"http://profiles.wordpress.org/jakemgold\">Jake Goldman</a>, <a href=\"http://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>, <a href=\"http://profiles.wordpress.org/jamescollins\">James Collins</a>, <a href=\"http://profiles.wordpress.org/jammitch\">jammitch</a>, <a href=\"http://profiles.wordpress.org/jane\">Jane Wells</a>, <a href=\"http://profiles.wordpress.org/japh\">Japh</a>, <a href=\"http://profiles.wordpress.org/jarretc\">JarretC</a>, <a href=\"http://profiles.wordpress.org/madtownlems\">Jason Lemahieu (MadtownLems)</a>, <a href=\"http://profiles.wordpress.org/javert03\">javert03</a>, <a href=\"http://profiles.wordpress.org/jbrinley\">jbrinley</a>, <a href=\"http://profiles.wordpress.org/jcakec\">jcakec</a>, <a href=\"http://profiles.wordpress.org/jblz\">Jeff Bowen</a>, <a href=\"http://profiles.wordpress.org/jeffsebring\">Jeff Sebring</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/hd-j\">Jeremy Herve</a>, <a href=\"http://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (JerrySarcastic)</a>, <a href=\"http://profiles.wordpress.org/jayjdk\">Jesper Johansen (Jayjdk)</a>, <a href=\"http://profiles.wordpress.org/jndetlefsen\">jndetlefsen</a>, <a href=\"http://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"http://profiles.wordpress.org/joelhardi\">joelhardi</a>, <a href=\"http://profiles.wordpress.org/jkudish\">Joey Kudish</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn (johnbillion)</a>, <a href=\"http://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"http://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>, <a href=\"http://profiles.wordpress.org/jond3r\">Jonas Bolinder</a>, <a href=\"http://profiles.wordpress.org/jondavidjohn\">Jonathan D. Johnson</a>, <a href=\"http://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"http://profiles.wordpress.org/joostdekeijzer\">joostdekeijzer</a>, <a href=\"http://profiles.wordpress.org/koke\">Jorge Bernal</a>, <a href=\"http://profiles.wordpress.org/josephscott\">Joseph Scott</a>, <a href=\"http://profiles.wordpress.org/pottersys\">Juan</a>, <a href=\"http://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"http://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>, <a href=\"http://profiles.wordpress.org/greenshady\">Justin Tadlock</a>, <a href=\"http://profiles.wordpress.org/trepmal\">Kailey Lampert (trepmal)</a>, <a href=\"http://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"http://profiles.wordpress.org/keruspe\">Keruspe</a>, <a href=\"http://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"http://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"http://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/kopepasah\">Kopepasah</a>, <a href=\"http://profiles.wordpress.org/klagraff\">Kristopher Lagraff</a>, <a href=\"http://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>, <a href=\"http://profiles.wordpress.org/kyrylo\">Kyrylo</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/larysa\">Larysa Mykhas</a>, <a href=\"http://profiles.wordpress.org/leogermani\">leogermani</a>, <a href=\"http://profiles.wordpress.org/lesteph\">lesteph</a>, <a href=\"http://profiles.wordpress.org/linuxologos\">linuxologos</a>, <a href=\"http://profiles.wordpress.org/ldebrouwer\">Luc De Brouwer</a>, <a href=\"http://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>, <a href=\"http://profiles.wordpress.org/latz\">Lutz Schroer</a>, <a href=\"http://profiles.wordpress.org/mailnew2ster\">mailnew2ster</a>, <a href=\"http://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>, <a href=\"http://profiles.wordpress.org/maor\">Maor Chasen</a>, <a href=\"http://profiles.wordpress.org/mimecine\">Marco</a>, <a href=\"http://profiles.wordpress.org/marcuspope\">MarcusPope</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"http://profiles.wordpress.org/martythornley\">MartyThornley</a>, <a href=\"http://profiles.wordpress.org/mattdanner\">mattdanner</a>, <a href=\"http://profiles.wordpress.org/bigdawggi\">Matthew Richmond</a>, <a href=\"http://profiles.wordpress.org/sivel\">Matt Martz</a>, <a href=\"http://profiles.wordpress.org/iammattthomas\">Matt Thomas</a>, <a href=\"http://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>, <a href=\"http://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"http://profiles.wordpress.org/maxcutler\">Max Cutler</a>, <a href=\"http://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"http://profiles.wordpress.org/merty\">Mert Yazicioglu</a>, <a href=\"http://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"http://profiles.wordpress.org/mfields\">Michael Fields</a>, <a href=\"http://profiles.wordpress.org/mbijon\">Mike Bijon</a>, <a href=\"http://profiles.wordpress.org/mdgl\">Mike Glendinning</a>, <a href=\"http://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"http://profiles.wordpress.org/mikelittle\">Mike Little</a>, <a href=\"http://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>, <a href=\"http://profiles.wordpress.org/DH-Shredder\">Mike Schroder</a>, <a href=\"http://profiles.wordpress.org/toppa\">Mike Toppa</a>, <a href=\"http://profiles.wordpress.org/dimadin\">Milan Dinic</a>, <a href=\"http://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>, <a href=\"http://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>, <a href=\"http://profiles.wordpress.org/mohanjith\">mohanjith</a>, <a href=\"http://profiles.wordpress.org/mpvanwinkle77\">mpvanwinkle77</a>, <a href=\"http://profiles.wordpress.org/usermrpapa\">Mr Papa</a>, <a href=\"http://profiles.wordpress.org/murky\">murky</a>, <a href=\"http://profiles.wordpress.org/Nao\">Naoko Takano</a>, <a href=\"http://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"http://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>, <a href=\"http://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"http://profiles.wordpress.org/ntm\">ntm</a>, <a href=\"http://profiles.wordpress.org/nvartolomei\">nvartolomei</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/pdclark\">pdclark</a>, <a href=\"http://profiles.wordpress.org/petemall\">Pete Mall</a>, <a href=\"http://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"http://profiles.wordpress.org/pas5027\">Pete Schuster</a>, <a href=\"http://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"http://profiles.wordpress.org/phill_brown\">Phill Brown</a>, <a href=\"http://profiles.wordpress.org/picklepete\">picklepete</a>, <a href=\"http://profiles.wordpress.org/picklewagon\">Picklewagon</a>, <a href=\"http://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>, <a href=\"http://profiles.wordpress.org/r-a-y\">r-a-y</a>, <a href=\"http://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>, <a href=\"http://profiles.wordpress.org/moraleidame\">Ricardo Moraleida</a>, <a href=\"http://profiles.wordpress.org/miqrogroove\">Robert Chapin (miqrogroove)</a>, <a href=\"http://profiles.wordpress.org/wet\">Robert Wetzlmayr</a>, <a href=\"http://profiles.wordpress.org/wpmuguru\">Ron Rennick</a>, <a href=\"http://profiles.wordpress.org/rstern\">rstern</a>, <a href=\"http://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"http://profiles.wordpress.org/ryanimel\">Ryan Imel</a>, <a href=\"http://profiles.wordpress.org/ryanjkoehler\">Ryan Koehler</a>, <a href=\"http://profiles.wordpress.org/markel\">Ryan Markel</a>, <a href=\"http://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"http://profiles.wordpress.org/zeo\">Safirul Alredha</a>, <a href=\"http://profiles.wordpress.org/solarissmoke\">Samir Shah</a>, <a href=\"http://profiles.wordpress.org/gluten\">Sam Margulies</a>, <a href=\"http://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"http://profiles.wordpress.org/saracannon\">sara cannon</a>, <a href=\"http://profiles.wordpress.org/gandham\">Satish Gandham</a>, <a href=\"http://profiles.wordpress.org/scottgonzalez\">scott.gonzalez</a>, <a href=\"http://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>, <a href=\"http://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"http://profiles.wordpress.org/sergeysbetkenovgaroru\">sergey.s.betke</a>, <a href=\"http://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"http://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"http://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"http://profiles.wordpress.org/sirzooro\">sirzooro</a>, <a href=\"http://profiles.wordpress.org/ssamture\">ssamture</a>, <a href=\"http://profiles.wordpress.org/sterlo\">sterlo</a>, <a href=\"http://profiles.wordpress.org/sumindmitriy\">sumindmitriy</a>, <a href=\"http://profiles.wordpress.org/sushkov\">sushkov</a>, <a href=\"http://profiles.wordpress.org/swekitsune\">swekitsune</a>, <a href=\"http://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>, <a href=\"http://profiles.wordpress.org/taylorde\">Taylor Dewey</a>, <a href=\"http://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>, <a href=\"http://profiles.wordpress.org/saltcod\">Terry Sutton</a>, <a href=\"http://profiles.wordpress.org/griffinjt\">Thomas Griffin</a>, <a href=\"http://profiles.wordpress.org/tott\">Thorsten Ott</a>, <a href=\"http://profiles.wordpress.org/timbeks\">timbeks</a>, <a href=\"http://profiles.wordpress.org/timfs\">timfs</a>, <a href=\"http://profiles.wordpress.org/tmoorewp\">Tim Moore</a>, <a href=\"http://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"http://profiles.wordpress.org/tomasm\">TomasM</a>, <a href=\"http://profiles.wordpress.org/tomauger\">Tom Auger</a>, <a href=\"http://profiles.wordpress.org/tommcfarlin\">tommcfarlin</a>, <a href=\"http://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"http://profiles.wordpress.org/toscho\">toscho</a>, <a href=\"http://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"http://profiles.wordpress.org/vhauri\">Vasken Hauri</a>, <a href=\"http://profiles.wordpress.org/viniciusmassuchetto\">Vinicius Massuchetto</a>, <a href=\"http://profiles.wordpress.org/lightningspirit\">Vitor Carvalho</a>, <a href=\"http://profiles.wordpress.org/waclawjacek\">Waclaw</a>, <a href=\"http://profiles.wordpress.org/waldojaquith\">WaldoJaquith</a>, <a href=\"http://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>, <a href=\"http://profiles.wordpress.org/xibe\">Xavier Borderie</a>, <a href=\"http://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"http://profiles.wordpress.org/yogi-t\">Yogi T</a>, <a href=\"http://profiles.wordpress.org/tollmanz\">Zack Tollman</a>, and <a href=\"http://profiles.wordpress.org/zamoose\">ZaMoose</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://wordpress.org/news/2012/12/elvin/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress 3.5 Release Candidate 3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/news/2012/12/wordpress-3-5-release-candidate-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://wordpress.org/news/2012/12/wordpress-3-5-release-candidate-3/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 04 Dec 2012 08:37:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/news/2012/12/wordpress-3-5-release-candidate-3/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:339:\"The third release candidate for WordPress 3.5 is now available. We&#8217;ve made a number of changes over the last week since RC2 that we can&#8217;t wait to get into your hands. Hope you&#8217;re ready to do some testing! Final UI improvements for the new media manager, based on lots of great feedback. Show more information about [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1950:\"<p>The third release candidate for WordPress 3.5 is now available. We&#8217;ve made a number of changes over the last week since <a title=\"WordPress 3.5 Release Candidate 2\" href=\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate-2/\">RC2</a> that we can&#8217;t wait to get into your hands. Hope you&#8217;re ready to do some testing!</p>\n<ul>\n<li><span style=\"line-height: 13px\">Final UI improvements for the new media manager, based on lots of great feedback.</span></li>\n<li>Show more information about uploading errors when they occur.</li>\n<li>When inserting an image into a post, don&#8217;t forget the alternative text.</li>\n<li>Fixes for the new admin button styles.</li>\n<li>Improvements for mobile devices, Internet Explorer, and right-to-left languages.</li>\n<li>Fix cookies for subdomain installs when multisite is installed in a subdirectory.</li>\n<li>Fix ms-files.php rewriting for very old multisite installs.</li>\n</ul>\n<p>At this point, we only have a <a href=\"http://core.trac.wordpress.org/report/5\">few minor issues</a> left. If all goes well, you will see WordPress 3.5 very soon. If you run into any issues, please post to the <a href=\"http://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>.</p>\n<p>If you&#8217;d like to know what to test, visit the About page (<strong><img style=\"vertical-align: middle\" alt=\"\" src=\"http://wordpress.org/wp-content/themes/twentyten/images/wordpress.png\" /> → About</strong> in the toolbar) and check out the list of features. This is still development software, so your boss may get mad if you install this on a live site. To test WordPress 3.5, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you&#8217;ll want &#8220;bleeding edge nightlies&#8221;). Or you can <a href=\"http://wordpress.org/wordpress-3.5-RC3.zip\">download the release candidate here (zip)</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/news/2012/12/wordpress-3-5-release-candidate-3/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress 3.5 Release Candidate 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 29 Nov 2012 19:55:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2494\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:339:\"The second release candidate for WordPress 3.5 is now available for download and testing. We&#8217;re still working on about a dozen remaining issues, but we hope to deliver WordPress 3.5 to your hands as early as next week. If you&#8217;d like to know what to test, visit the About page ( → About in the toolbar) and check out [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1509:\"<p>The second release candidate for WordPress 3.5 is now available for download and testing.</p>\n<p>We&#8217;re still working on about a dozen remaining issues, but we hope to deliver WordPress 3.5 to your hands as early as next week. If you&#8217;d like to know what to test, visit the About page (<strong><img alt=\"\" src=\"http://wordpress.org/wp-content/themes/twentyten/images/wordpress.png\" /> → About</strong> in the toolbar) and check out the list of features! As usual, this is still development software and we suggest you do not install this on a live site unless you are adventurous.</p>\n<p><strong>Think you&#8217;ve found a bug?</strong> Please post to the <a href=\"http://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>.</p>\n<p><strong>Developers,</strong> please continue to test your plugins and themes, so that if there is a compatibility issue, we can figure it out before the final release. You can find our <a href=\"http://core.trac.wordpress.org/report/6\">list of known issues here</a>.</p>\n<p>To test WordPress 3.5, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you&#8217;ll want &#8220;bleeding edge nightlies&#8221;). Or you can <a href=\"http://wordpress.org/wordpress-3.5-RC2.zip\">download the release candidate here (zip)</a>.</p>\n<p><em>&#8211;<br />\n</em><em>We are getting close<br />\n</em><em>Should have asked for haiku help<br />\n</em><em>Please test RC2</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress 3.5 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 22 Nov 2012 13:35:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2479\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:341:\"The first release candidate for WordPress 3.5 is now available. We hope to ship WordPress 3.5 in two weeks. But to do that, we need your help! If you haven&#8217;t tested 3.5 yet, there&#8217;s no time like the present. (The oft-repeated warning: Please, not on a live site, unless you&#8217;re adventurous.) Think you&#8217;ve found a [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1545:\"<p>The first release candidate for WordPress 3.5 is now available.</p>\n<p>We hope to ship WordPress 3.5 in <em>two weeks</em>. But to do that, we need your help! If you haven&#8217;t tested 3.5 yet, there&#8217;s no time like the present. (The oft-repeated warning: Please, not on a live site, unless you&#8217;re adventurous.)</p>\n<p><strong>Think you&#8217;ve found a bug?</strong> Please post to the <a href=\"http://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>. If any known issues come up, you’ll be able to <a href=\"http://core.trac.wordpress.org/report/6\">find them here</a>. <strong>Developers,</strong> please test your plugins and themes, so that if there is a compatibility issue, we can figure it out before the final release.</p>\n<p>To test WordPress 3.5, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you&#8217;ll want &#8220;bleeding edge nightlies&#8221;). Or you can <a href=\"http://wordpress.org/wordpress-3.5-RC1.zip\">download the release candidate here (zip)</a>.</p>\n<p>If you&#8217;d like to know what to <del>break</del> test, visit the About page (<strong><img style=\"vertical-align: text-top\" alt=\"\" src=\"http://wordpress.org/wp-content/themes/twentyten/images/wordpress.png\" /> → About</strong> in the toolbar) and check out the list of features! Trust me, you want to try out media.</p>\n<p><em>Release candidate</em><br />\n<em>Three point five in two weeks time</em><br />\n<em>Please test all the things</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wordpress.org/news/2012/11/wordpress-3-5-release-candidate/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:48:\"\n		\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 3.5 Beta 3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2012/11/wordpress-3-5-beta-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2012/11/wordpress-3-5-beta-3/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 13 Nov 2012 04:26:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2467\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:341:\"The third beta release of WordPress 3.5 is now available for download and testing. Hey, developers! We expect to WordPress 3.5 to be ready in just a few short weeks. Please, please test your plugins and themes against beta 3. Media management has been rewritten, and we&#8217;ve taken great pains to ensure most plugins will work the [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2677:\"<p>The third beta release of WordPress 3.5 is now available for download and testing.</p>\n<p><strong>Hey, developers!</strong> We expect to WordPress 3.5 to be ready in just a few short weeks. <em>Please, please</em> test your plugins and themes against beta 3. Media management has been rewritten, and we&#8217;ve taken great pains to ensure most plugins will work the same as before, but we&#8217;re not perfect. We would like to hear about any incompatibilities we&#8217;ve caused so we can work with you to address them <em>before</em> release, rather than after. I think you&#8217;ll agree it&#8217;s much better that way. <img src=\'http://wordpress.org/news/wp-includes/images/smilies/icon_smile.gif\' alt=\':-)\' class=\'wp-smiley\' /> </p>\n<p>To test WordPress 3.5, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-3.5-beta3.zip\">download the beta here</a> (zip). For more on 3.5, <a title=\"WordPress 3.5 Beta 1\" href=\"http://wordpress.org/news/2012/09/wordpress-3-5-beta-1/\">check out the extensive Beta 1 blog post</a>, which covers what’s new in version 3.5 and how you can help. We made <a href=\"http://core.trac.wordpress.org/log/trunk?action=stop_on_copy&amp;mode=stop_on_copy&amp;rev=22557&amp;stop_rev=22224&amp;limit=400\">more than 300 changes</a> since <a href=\"http://wordpress.org/news/2012/10/wordpress-3-5-beta-2/\">beta 2</a>. <span style=\"line-height: 13px\">At this point, the Add Media dialog is complete, and we&#8217;re now just working on fixing up inserting images into the editor. We&#8217;ve also u</span>pdated to jQuery UI 1.9.1, SimplePie 1.3.1, and TinyMCE 3.5.7.</p>\n<p>The usual warnings apply: We can see the light at the end of the tunnel, but this is software still in development, so we don’t recommend that you run it on a production site. Set up a test site to play with the new version.</p>\n<p>As always, if you think you’ve found a bug, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a reproducible bug report, <a href=\"http://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/report/5\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=3.5\">everything we’ve fixed</a> so far.</p>\n<p><em>Beta three is out</em><br />\n<em>Soon, a release candidate</em><br />\n<em>Three point five is near</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2012/11/wordpress-3-5-beta-3/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 3.5 Beta 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2012/10/wordpress-3-5-beta-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2012/10/wordpress-3-5-beta-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 13 Oct 2012 00:02:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2458\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:342:\"Two weeks after the first beta, WordPress 3.5 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. Set up a test site to play with the new version. To test WordPress 3.5, try the WordPress Beta Tester plugin (you’ll want “bleeding [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1856:\"<p>Two weeks after the first beta, WordPress 3.5 Beta 2 is now available for download and testing.</p>\n<p>This is software still in development, so we don’t recommend that you run it on a production site. Set up a test site to play with the new version. To test WordPress 3.5, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-3.5-beta2.zip\">download the beta here</a> (zip).</p>\n<p>For more, <a title=\"WordPress 3.5 Beta 1\" href=\"http://wordpress.org/news/2012/09/wordpress-3-5-beta-1/\"><strong>check out the extensive Beta 1 blog post</strong></a>, which covers what&#8217;s new in version 3.5 and how you can help. What&#8217;s new since beta 1? I&#8217;m glad you asked:</p>\n<ul>\n<li>New workflow for working with image galleries, including drag-and-drop reordering and quick caption editing.</li>\n<li>New image editing API. (<a title=\"Ticket 6821\" href=\"http://core.trac.wordpress.org/ticket/6821\">#6821</a>)</li>\n<li><del>New user interface for setting static front pages for the Reading Settings screen. (<a title=\"Ticket 16379\" href=\"http://core.trac.wordpress.org/ticket/16379\">#16379</a>)</del></li>\n</ul>\n<p>As always, if you think you’ve found a bug, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a reproducible bug report, <a href=\"http://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/report/5\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=3.5\">everything we’ve fixed</a> so far. Happy testing!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2012/10/wordpress-3-5-beta-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:31:\"http://wordpress.org/news/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 16 Apr 2013 01:09:59 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:10:\"x-pingback\";s:36:\"http://wordpress.org/news/xmlrpc.php\";s:13:\"last-modified\";s:29:\"Thu, 11 Apr 2013 13:48:42 GMT\";s:4:\"x-nc\";s:11:\"HIT luv 139\";}s:5:\"build\";s:14:\"20111015034325\";}','no'),(1842,'_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1366117800','no'),(1843,'_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1366074600','no'),(1844,'_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51','1366117800','no'),(1845,'_transient_dash_4077549d03da2e451c8b5f002294ff51','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'http://wordpress.org/news/2013/04/save-the-date-may-27/\' title=\'What’s on May 27, you ask? May 27, 2013 is the 10th anniversary of the first WordPress release! We think this is worth celebrating, and we want WordPress fans all over the world to celebrate with us by throwing their own parties. We’re using Meetup Everywhere to coordinate, and will be putting up a website [&hellip;]\'>Save the Date: May 27</a> <span class=\"rss-date\">April 11, 2013</span><div class=\'rssSummary\'>What’s on May 27, you ask? May 27, 2013 is the 10th anniversary of the first WordPress release! We think this is worth celebrating, and we want WordPress fans all over the world to celebrate with us by throwing their own parties. We’re using Meetup Everywhere to coordinate, and will be putting up a website [&hellip;]</div></li><li><a class=\'rsswidget\' href=\'http://wordpress.org/news/2013/04/wordpress-3-6-beta-1/\' title=\'WordPress 3.6 Beta 1 is now available! This is software still in development and we really don’t recommend that you run it on a production site — set up a test site just to play with the new version. To test WordPress 3.6, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can download the beta here (zip). We’ve [&hellip;]\'>WordPress 3.6 Beta 1</a> <span class=\"rss-date\">April 4, 2013</span><div class=\'rssSummary\'>WordPress 3.6 Beta 1 is now available! This is software still in development and we really don’t recommend that you run it on a production site — set up a test site just to play with the new version. To test WordPress 3.6, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can download the beta here (zip). We’ve [&hellip;]</div></li></ul></div>','no'),(1835,'_transient_feed_6c80350e4015795c848343cdb5a1f8f9','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:4:\"\n  \n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:33:\"\n    \n    \n    \n    \n    \n    \n  \";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:3:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"link:http://thejsj.com/processing/ - Google Blog Search\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"http://www.google.com/search?ie=utf-8&q=link:http://thejsj.com/processing/&tbm=blg&tbs=sbd:1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:86:\"Your search - <b>link:http://thejsj.com/processing/</b> - did not match any documents.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://a9.com/-/spec/opensearch/1.1/\";a:3:{s:12:\"totalResults\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:10:\"startIndex\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:12:\"itemsPerPage\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"10\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:9:{s:12:\"content-type\";s:28:\"text/xml; charset=ISO-8859-1\";s:4:\"date\";s:29:\"Tue, 16 Apr 2013 01:09:59 GMT\";s:7:\"expires\";s:2:\"-1\";s:13:\"cache-control\";s:18:\"private, max-age=0\";s:10:\"set-cookie\";a:2:{i:0;s:143:\"PREF=ID=0388fba4143972c2:FF=0:TM=1366074599:LM=1366074599:S=6MJrOzGzKtPVCObL; expires=Thu, 16-Apr-2015 01:09:59 GMT; path=/; domain=.google.com\";i:1;s:212:\"NID=67=mi0oZMDXjt13hA5SZ747XZZdAt4NDw8eu1I5AidHh74S7c8uckSG9i1JCaHizQs0V2K5P-erupCt7HgHPOJUU-D5XNmiEn0RFfrbHuZmzb2MYgH9D_MWqUdnR75zWBlH; expires=Wed, 16-Oct-2013 01:09:59 GMT; path=/; domain=.google.com; HttpOnly\";}s:3:\"p3p\";s:122:\"CP=\"This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657 for more info.\"\";s:6:\"server\";s:3:\"gws\";s:16:\"x-xss-protection\";s:13:\"1; mode=block\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";}s:5:\"build\";s:14:\"20111015034325\";}','no'),(1834,'_transient_timeout_feed_6c80350e4015795c848343cdb5a1f8f9','1366117799','no'),(649,'_site_transient_timeout_browser_b62142a48ed49005fd38a0d2344d0a8a','1347380014','yes'),(650,'_site_transient_browser_b62142a48ed49005fd38a0d2344d0a8a','a:9:{s:8:\"platform\";s:7:\"Windows\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"21.0.1180.83\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(764,'db_upgraded','','yes'),(146,'_site_transient_timeout_wporg_theme_feature_list','1345666886','yes'),(147,'_site_transient_wporg_theme_feature_list','a:5:{s:6:\"Colors\";a:15:{i:0;s:5:\"black\";i:1;s:4:\"blue\";i:2;s:5:\"brown\";i:3;s:4:\"gray\";i:4;s:5:\"green\";i:5;s:6:\"orange\";i:6;s:4:\"pink\";i:7;s:6:\"purple\";i:8;s:3:\"red\";i:9;s:6:\"silver\";i:10;s:3:\"tan\";i:11;s:5:\"white\";i:12;s:6:\"yellow\";i:13;s:4:\"dark\";i:14;s:5:\"light\";}s:7:\"Columns\";a:6:{i:0;s:10:\"one-column\";i:1;s:11:\"two-columns\";i:2;s:13:\"three-columns\";i:3;s:12:\"four-columns\";i:4;s:12:\"left-sidebar\";i:5;s:13:\"right-sidebar\";}s:5:\"Width\";a:2:{i:0;s:11:\"fixed-width\";i:1;s:14:\"flexible-width\";}s:8:\"Features\";a:18:{i:0;s:8:\"blavatar\";i:1;s:10:\"buddypress\";i:2;s:17:\"custom-background\";i:3;s:13:\"custom-colors\";i:4;s:13:\"custom-header\";i:5;s:11:\"custom-menu\";i:6;s:12:\"editor-style\";i:7;s:21:\"featured-image-header\";i:8;s:15:\"featured-images\";i:9;s:20:\"front-page-post-form\";i:10;s:19:\"full-width-template\";i:11;s:12:\"microformats\";i:12;s:12:\"post-formats\";i:13;s:20:\"rtl-language-support\";i:14;s:11:\"sticky-post\";i:15;s:13:\"theme-options\";i:16;s:17:\"threaded-comments\";i:17;s:17:\"translation-ready\";}s:7:\"Subject\";a:3:{i:0;s:7:\"holiday\";i:1;s:13:\"photoblogging\";i:2;s:8:\"seasonal\";}}','yes'),(478,'_site_transient_browser_a1763c1d3f1a246337ad029237cf9976','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"21.0.1180.82\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(149,'theme_mods_twentyeleven','a:1:{s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1345656085;s:4:\"data\";a:6:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}s:9:\"sidebar-4\";a:0:{}s:9:\"sidebar-5\";a:0:{}}}}','yes'),(150,'current_theme','GEEX3M','yes'),(151,'theme_mods_geex3m','a:1:{i:0;b:0;}','yes'),(152,'theme_switched','','yes'),(214,'disqus_forum_url','processingkicourse','yes'),(215,'disqus_api_key','MYhaNFkEJDmhyRfo8PPREADaQYXk2uF3otkjAjw3W8vaBac0gSS7jVuFI0DZJQ1M','yes'),(157,'recently_activated','a:0:{}','yes'),(1821,'_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a','1365987032','yes'),(1822,'_site_transient_poptags_40cd750bba9870f18aada2478b24840a','a:40:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";s:4:\"3406\";}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"Post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";s:4:\"2207\";}s:6:\"plugin\";a:3:{s:4:\"name\";s:6:\"plugin\";s:4:\"slug\";s:6:\"plugin\";s:5:\"count\";s:4:\"2091\";}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";s:4:\"1732\";}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";s:4:\"1645\";}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";s:4:\"1450\";}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";s:4:\"1165\";}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";s:4:\"1161\";}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";s:4:\"1153\";}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";s:4:\"1119\";}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";s:4:\"1066\";}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";s:3:\"983\";}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";s:3:\"892\";}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";s:3:\"836\";}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"Facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";s:3:\"826\";}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";s:3:\"767\";}s:9:\"wordpress\";a:3:{s:4:\"name\";s:9:\"wordpress\";s:4:\"slug\";s:9:\"wordpress\";s:5:\"count\";s:3:\"724\";}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";s:3:\"719\";}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";s:3:\"665\";}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";s:3:\"664\";}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";s:3:\"617\";}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";s:3:\"613\";}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";s:3:\"593\";}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"AJAX\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";s:3:\"573\";}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";s:3:\"524\";}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";s:3:\"503\";}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";s:3:\"498\";}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";s:3:\"496\";}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";s:3:\"490\";}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";s:3:\"471\";}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";s:3:\"466\";}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";s:3:\"444\";}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";s:3:\"441\";}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";s:3:\"432\";}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";s:3:\"404\";}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";s:3:\"401\";}s:5:\"stats\";a:3:{s:4:\"name\";s:5:\"stats\";s:4:\"slug\";s:5:\"stats\";s:5:\"count\";s:3:\"399\";}s:5:\"flash\";a:3:{s:4:\"name\";s:5:\"flash\";s:4:\"slug\";s:5:\"flash\";s:5:\"count\";s:3:\"383\";}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";s:3:\"382\";}s:7:\"comment\";a:3:{s:4:\"name\";s:7:\"comment\";s:4:\"slug\";s:7:\"comment\";s:5:\"count\";s:3:\"378\";}}','yes'),(163,'codecolorer_css_style','','yes'),(164,'codecolorer_css_class','','yes'),(165,'codecolorer_lines_to_scroll','30','yes'),(166,'codecolorer_width','435','yes'),(167,'codecolorer_height','300','yes'),(168,'codecolorer_rss_width','435','yes'),(169,'codecolorer_line_numbers','1','yes'),(170,'codecolorer_disable_keyword_linking','','yes'),(171,'codecolorer_tab_size','4','yes'),(172,'codecolorer_theme','railscasts','yes'),(173,'codecolorer_inline_theme','railscasts','yes'),(174,'codecolorer_language_notification','1','yes'),(175,'codecolorer_concurrent_notification','1','yes'),(216,'disqus_user_api_key','rlqO9ZvRpJbzbv5MraU0twzyxAThqvvbIW5n9X9t1qaCz7WhKkrC8moEOMZkc0Ls','yes'),(217,'disqus_replace','all','yes'),(443,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(477,'_site_transient_timeout_browser_a1763c1d3f1a246337ad029237cf9976','1346966575','yes'),(1866,'_site_transient_update_core','O:8:\"stdClass\":3:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":9:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:40:\"http://wordpress.org/wordpress-3.7.1.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":4:{s:4:\"full\";s:40:\"http://wordpress.org/wordpress-3.7.1.zip\";s:10:\"no_content\";s:51:\"http://wordpress.org/wordpress-3.7.1-no-content.zip\";s:11:\"new_bundled\";s:52:\"http://wordpress.org/wordpress-3.7.1-new-bundled.zip\";s:7:\"partial\";b:0;}s:7:\"current\";s:5:\"3.7.1\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"3.6\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1384922819;s:15:\"version_checked\";s:5:\"3.5.1\";}','yes'),(1854,'_transient_timeout_feed_mod_a5420c83891a9c88ad2a4f04584a5efc','1366117801','no'),(592,'_transient_random_seed','dc97078b303afea584ac309ac6d6d6b5','yes'),(1836,'_transient_timeout_feed_mod_6c80350e4015795c848343cdb5a1f8f9','1366117799','no'),(1837,'_transient_feed_mod_6c80350e4015795c848343cdb5a1f8f9','1366074599','no'),(1838,'_transient_timeout_dash_20494a3d90a6669585674ed0eb8dcd8f','1366117799','no'),(619,'category_children','a:0:{}','yes'),(1031,'_site_transient_timeout_browser_3727c359bbc4495d8837bdcdb3089d9f','1348437270','yes'),(1032,'_site_transient_browser_3727c359bbc4495d8837bdcdb3089d9f','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"21.0.1180.89\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1091,'_site_transient_timeout_browser_4a94daffa9075a6711b8391a3a4020d4','1348596179','yes'),(1092,'_site_transient_browser_4a94daffa9075a6711b8391a3a4020d4','a:9:{s:8:\"platform\";s:7:\"Windows\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"21.0.1180.89\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1007,'_site_transient_timeout_browser_91cbf21adeffd72d263249ea59846357','1348172706','yes'),(1008,'_site_transient_browser_91cbf21adeffd72d263249ea59846357','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"21.0.1180.89\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1831,'_site_transient_update_plugins','O:8:\"stdClass\":2:{s:12:\"last_checked\";i:1384922820;s:8:\"response\";a:2:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":5:{s:2:\"id\";s:2:\"15\";s:4:\"slug\";s:7:\"akismet\";s:11:\"new_version\";s:5:\"2.5.9\";s:3:\"url\";s:37:\"http://wordpress.org/plugins/akismet/\";s:7:\"package\";s:55:\"http://downloads.wordpress.org/plugin/akismet.2.5.9.zip\";}s:47:\"html-javascript-adder/html-javascript-adder.php\";O:8:\"stdClass\":5:{s:2:\"id\";s:4:\"7460\";s:4:\"slug\";s:21:\"html-javascript-adder\";s:11:\"new_version\";s:3:\"3.8\";s:3:\"url\";s:51:\"http://wordpress.org/plugins/html-javascript-adder/\";s:7:\"package\";s:67:\"http://downloads.wordpress.org/plugin/html-javascript-adder.3.8.zip\";}}}','yes'),(1239,'_site_transient_browser_ee5294ee7f9472671bd9978f6f18679d','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"22.0.1229.79\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1238,'_site_transient_timeout_browser_ee5294ee7f9472671bd9978f6f18679d','1349828865','yes'),(1790,'_site_transient_browser_2c50b618556b7aa74bce152b248ccc2c','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"26.0.1410.65\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1789,'_site_transient_timeout_browser_2c50b618556b7aa74bce152b248ccc2c','1366581027','yes'),(1846,'_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c','1366117800','no'),(1847,'_transient_feed_867bd5c64f85878d03a060509cd2f92c','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"Alex King: Any icon artists out there interested in creating …\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://alexking.org/?p=16482\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://alexking.org/blog/2013/04/15/16482\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:161:\"<div>\n<p>Any icon artists out there interested in creating an application icon for a free (GPL) WordPress-based app that @crowdfavorite is working on?</p>\n</div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Apr 2013 17:27:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"Alex King: Backward Compatible WP Heartbeat API Usage\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://alexking.org/?p=16470\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://alexking.org/blog/2013/04/14/backward-compatible-wp-heartbeat-api-usage\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:448:\"<p>I wanted to utilize the <a href=\"http://core.trac.wordpress.org/ticket/23216\">WP 3.6 heartbeat API</a> in an app I&#8217;m working on. I also wanted to include this feature before WordPress 3.6 officially shipped, so that meant it had to be compatible with WordPress 3.5.x as well.</p>\n<p>Turns out, it&#8217;s really easy. The heartbeat API looks excellent.</p>\n<p><p>View the code on <a href=\"https://gist.github.com/5381074\">Gist</a>.</p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 14 Apr 2013 17:52:49 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Matt: Passwords and Brute Force\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=42342\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://ma.tt/2013/04/passwords-and-brute-force/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1404:\"<p>Almost 3 years ago we released a version of WordPress (<a href=\"http://wordpress.org/news/2010/06/thelonious/\">3.0</a>) that allowed you to pick a custom username on installation, which largely ended people using &#8220;admin&#8221; as their default username. Right now there&#8217;s a botnet going around all of the WordPresses it can find trying to login with the &#8220;admin&#8221; username and a bunch of common passwords, and it has turned into a news story (especially from companies that sell &#8220;solutions&#8221; to the problem).</p>\n<p>Here&#8217;s what I would recommend: If you still use &#8220;admin&#8221; as a username on your blog, <a href=\"http://www.digitalkonline.com/blog/change-your-wordpress-admin-username/\">change it</a>, use a <a href=\"http://en.support.wordpress.com/selecting-a-strong-password/\">strong password</a>, if you&#8217;re on WP.com <a href=\"http://en.blog.wordpress.com/2013/04/05/two-step-authentication/\">turn on two-factor authentication</a>, and of course make sure you&#8217;re up-to-date on the latest version of WordPress. Do this and you&#8217;ll be ahead of 99% of sites out there and probably never have a problem. Most other advice isn&#8217;t great &#8212; supposedly this botnet has over 90,000 IP addresses, so an IP limiting or login throttling plugin isn&#8217;t going to be great (they could try from a different IP a second for 24 hours).</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 23:55:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"WordPress.tv: Mel Choyce: Design Basics for Non-Designers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18626\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"http://wordpress.tv/2013/04/12/mel-choyce-design-basics-for-non-designers/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:664:\"<div id=\"v-9ujSwIjD-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18626/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18626/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18626&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/04/12/mel-choyce-design-basics-for-non-designers/\"><img alt=\"Mel Choyce: Design Basics for Non-Designers\" src=\"http://videos.videopress.com/9ujSwIjD/mel_choyce_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 18:50:49 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"WordPress.tv: Tracy Levesque: Custom Post Types for Right-Brained Folks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18630\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"http://wordpress.tv/2013/04/12/tracy-levesque-custom-post-types-for-right-brained-folks/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:690:\"<div id=\"v-s94zl0hm-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18630/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18630/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18630&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/04/12/tracy-levesque-custom-post-types-for-right-brained-folks/\"><img alt=\"Tracy Levesque: Custom Post Types for Right-Brained Folks\" src=\"http://videos.videopress.com/s94zl0hm/tracy_levesque_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 17:49:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"WordPress.tv: Jayvie Canono: Designing for Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18642\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wordpress.tv/2013/04/12/jayvie-canono-designing-for-development/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:661:\"<div id=\"v-CNvoz0Ym-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18642/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18642/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18642&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/04/12/jayvie-canono-designing-for-development/\"><img alt=\"Jayvie Canono: Designing for Development\" src=\"http://videos.videopress.com/CNvoz0Ym/jayvie_canono_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 14:45:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"WordPress.tv: Jeremy Pry: An Introduction to WordPress Multisite\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18636\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"http://wordpress.tv/2013/04/12/jeremy-pry-an-introduction-to-wordpress-multisite/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:678:\"<div id=\"v-gM1IUiuf-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18636/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18636/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18636&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/04/12/jeremy-pry-an-introduction-to-wordpress-multisite/\"><img alt=\"Jeremy Pry: An Introduction to WordPress Multisite\" src=\"http://videos.videopress.com/gM1IUiuf/jeremy_pry_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 12:44:10 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"BuddyPress: It’s time to update your BuddyPress installation\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://buddypress.org/?p=161349\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://buddypress.org/2013/04/its-time-to-update-your-buddypress-installation/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3149:\"<p>With the release of BuddyPress 1.7 just a few days ago, and with almost 1.5 million downloads behind us, I wanted to take the time to remind everyone about what&#8217;s gone into improving BuddyPress recently, and to reassure everyone that it&#8217;s okay to update.</p>\n<p>In the early days of BuddyPress, things were in flux. Andy and I were furiously building components and features, deprecating code, refactoring the way things worked, and generally tearing up the codebase over and over again. It helped us build a great foundation, but it made updating to the next version a scary and frustrating experience. To those that remember those days, I apologize; to everyone else, I&#8217;m sorry you missed out on the fun. <img src=\"http://buddypress.org/wp-includes/images/smilies/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" /> </p>\n<p>Whenever your WordPress installation checks to see if BuddyPress needs an update, the WordPress.org Extend API remembers the current version of BuddyPress that you&#8217;re running. This is how we know (with relative accuracy) approximately how many of what versions are out in the wild, and it&#8217;s also how we generated the pinwheel below, taken from the Stats page from WordPress.org Extend:</p>\n<div id=\"attachment_161350\" class=\"wp-caption aligncenter\"><img class=\" wp-image-161350   \" alt=\"Active BuddyPress Versions\" src=\"http://buddypress.org/wp-content/uploads/1/2013/04/Screen-Shot-2013-04-11-at-3.18.43-PM.png\" width=\"576\" height=\"283\" /><p class=\"wp-caption-text\">Every color of the rainbow is clearly represented</p></div>\n<p>Despite the pretty colors, this pie chart is actually a little scary. There are so many old and outdated installations of BuddyPress out there, not taking advantage of the neat new features, and not running the most stable and secure code available. The irony is, this is largely our fault.</p>\n<p>These days, BuddyPress is a 1 click update in your WordPress dashboard, and we&#8217;ve built a bunch of API&#8217;s that allow third party plugin developers to write plugins that won&#8217;t break when BuddyPress needs an update. We&#8217;ve spent a large part of the past 2 years reinforcing the foundation we invested in, so that no one needs to be afraid to update BuddyPress ever again.</p>\n<p>Starting with BuddyPress 1.8, the core team will be focusing our efforts on including automated tests with each enhancement and critical bug fix, to help ensure that each future release gets more stable than the release before it. Boone Gorges and Paul Gibbs both donated huge amounts of labor building a test suite that is already committed into our development branch, just days after BuddyPress 1.7 was packaged up. Their dedication towards making BuddyPress stable and amazing for everyone is unwavering, and their contributions are truly awesome.</p>\n<p>If you&#8217;re running an old version of BuddyPress, I urge you to check out and update to BuddyPress 1.7. It&#8217;s the culmination of thousands of hours of effort, and is the most stable, secure, and performant version of BuddyPress yet. Help us change that pinwheel into more of a Pac-Man or a circle.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 21:02:25 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"John James Jacoby\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"Andrew Nacin: Keynoting php[tek] in Chicago, May 14-17\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"http://nacin.com/?p=4090\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"http://nacin.com/2013/04/11/tek13-php-conference-keynote/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3466:\"<p>I&#8217;m excited to announce <strong>I&#8217;m giving a keynote address at <a href=\"http://tek.phparch.com/\">php[tek] 2013</a></strong>. It&#8217;s a fantastic PHP conference put on by the folks behind <a href=\"http://www.phparch.com/\">php|architect</a>. &#8220;The premier professional PHP conference with a community flair,&#8221; #tek13 has a rockstar <a href=\"http://tek.phparch.com/speakers/\">speaker line-up</a>, four tracks of content, and a day of training. I&#8217;m thrilled to be attending the conference &#8212; I also attended #tek11 &#8212; let alone speaking.</p>\n<p>Last night I tested a few ideas at the <a href=\"http://meetup.com/dc-php\">DC PHP meetup</a> and got some great feedback from the attendees. Some early reviews:</p>\n<blockquote class=\"twitter-tweet\"><p><a href=\"https://twitter.com/wardnetinc/status/322140560523673601\"></a></p></blockquote>\n<p></p>\n<blockquote class=\"twitter-tweet\"><p><a href=\"https://twitter.com/kingkool68/status/322151835756544000\"></a></p></blockquote>\n<p></p>\n<blockquote class=\"twitter-tweet\"><p><a href=\"https://twitter.com/openwestconf/status/322393612249886720\"></a></p></blockquote>\n<p></p>\n<p>I&#8217;m continuing to conduct a <em>lot</em> of research for this talk. There&#8217;s a lot WordPress has learned over the years, so I&#8217;ve been searching through the codebase and old commit messages, as well as compiling a ton of data and statistics. If you have anything you think might help, please <a href=\"http://gravatar.com/nacin\">contact me</a>. Here&#8217;s the full talk description:</p>\n<blockquote><p>\n<strong>WordPress is Everywhere: Extreme Portability as a Double-Edged Sword</strong></p>\n<p>WordPress has tens of millions of users worldwide and powers over a fifth of new sites. But such a large and diverse user base presents unique challenges, and as it approaches its tenth birthday, the WordPress codebase is showing its age. So why is it so ubiquitous?</p>\n<p>The answer lies not in its UI, UX, ecosystem, or community, though those are certainly among its strengths. The answer lies instead in a core philosophy that holds the user above all else.</p>\n<p>This user-centric design starts not with the interface, but rather with the code itself. Developers should approach software development with an unwavering promise they will deal with the nonsense instead of passing it off to the user.</p>\n<p>Some WordPress positions might seem draconian and inflexible. Backwards compatibility is almost never broken. The technical requirements appeal to lowest common denominators. But because the project maintainers deal with all the pain — technical debt, difficulties with PHP, working on as many server configurations (and misconfigurations) as possible — its users don’t have to. Thanks to the WordPress project’s portability efforts, you can pick a web host or a PHP configuration at random and WordPress will run on it. Because of this, adoption has soared.</p>\n<p>The way WordPress operates is not for everyone. But whether your projects are used by 10 users, or 10 million, it may help you to see your code in an entirely new light.</p></blockquote>\n<p>Tickets are <a href=\"http://tek.phparch.com/\">still available</a>. Hope to see you there!</p>\n<p class=\"share-sfc-stc\"><a href=\"http://twitter.com/share?url=http%3A%2F%2Fwp.me%2FpQEdq-13Y&count=horizontal&related=nacin&text=Keynoting%20php%5Btek%5D%20in%20Chicago%2C%20May%2014-17\" class=\"twitter-share-button\"></a></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 17:33:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Dev Blog: Save the Date: May 27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2555\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2013/04/save-the-date-may-27/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2059:\"<p>What&#8217;s on May 27, you ask?</p>\n<p>May 27, 2013 is the <strong>10th anniversary</strong> of the <a href=\"http://wordpress.org/news/2003/05/wordpress-now-available/\">first WordPress release</a>!</p>\n<p>We think this is worth celebrating, and we want WordPress fans all over the world to celebrate with us by throwing their own parties. <a href=\"http://www.meetup.com/WordPress/\">We&#8217;re using Meetup Everywhere</a> to coordinate, and will be putting up a website just for the 10th Anniversary so that we can collect photos, videos, tweets, and posts from all the parties.</p>\n<p>The rules are very simple:</p>\n<ol>\n<li><span>Pick a place to go where a bunch of people can be merry &#8212; a park, a bar, a backyard, whatever</span></li>\n<li>Spread the word to local meetups, tech groups, press, etc and get people to say they&#8217;ll come to your party</li>\n<li>If 50 or more people RSVP to your party, we&#8217;ll try to send you some WordPress stickers and buttons</li>\n<li>Have party attendees post photos, videos, and the like with the #wp10 hashtag</li>\n</ol>\n<p>We&#8217;ll be using Meetup Everywhere to coordinate parties all over the world, so get your city on the map and <a href=\"http://www.meetup.com/WordPress/\">register your party now</a> !</p>\n<p>We&#8217;ll follow up with registered organizers  over the next few weeks with some tips for how to publicize your party and to get addresses for swag packages. To that end, make sure you check the option that lets WordPress 10th Anniversary know your email, or we won&#8217;t be able to get in touch with you for these things or to give you access to the WP10 blog.</p>\n<p>Whose party will be the biggest? The most fun? The most inventive? Will it be yours?</p>\n<p><em>Note: If you already run a group on meetup.com, making your party an event in your group is great, but you still need to post it and have people RSVP at the <a href=\"http://www.meetup.com/WordPress/\">special party page</a>, because regular groups and Meetup Everywhere groups aren&#8217;t connected yet. </em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 13:48:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jen Mylo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"WP Windows Phone 7: Push Notifications and a Rich Text Editor: Version 2.1 Is Available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://wpwindowsphone.wordpress.com/?p=429\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wpwindowsphone.wordpress.com/2013/04/11/version-2-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3905:\"<p><a href=\"http://wpwindowsphone.files.wordpress.com/2013/04/wpwindowsphone-2-0-comment-push-notifications-and-rich-text-editor.png\"><img class=\"alignright size-large wp-image-453\" alt=\"Screenshot of Version 2.1 of WordPress for Windows Phone: Rich Text Editor and Comment Push Notifications\" src=\"http://wpwindowsphone.files.wordpress.com/2013/04/wpwindowsphone-2-0-comment-push-notifications-and-rich-text-editor.png?w=300&h=560\" width=\"300\" height=\"560\" /></a>It’s that time again. Version 2.1 of WordPress for Windows Phone is out and adds some exciting new features.</p>\n<p>We’re happy to announce that you can now get comment push notifications on your Windows Phone (OS 7.5+) which enables you to moderate comments from wherever you happen to be at the time. With 2.1 you also get a rich text editor, making it much easier to write longer posts having to deal with any HTML code.</p>\n<p>Read on to learn what’s new or update/download version 2.1 from the Windows Phone Store right now by clicking below.</p>\n<p class=\"download\"><a href=\"http://windowsphone.com/s?appid=5f64ad85-f801-e011-9264-00237de2db9e\"><strong>Download App</strong>WordPress for Windows Phone</a><span class=\"download-info\">Supported: WordPress.com or self-hosted WordPress (v. 2.9+)</span></p>\n<h3>Rich Text Editor</h3>\n<p>Now you finally have the ability to use a rich text editor when creating or editing a post or page. The new editor has easy to access styling options beneath the keyboard and in the app menu, these include bulleted/numbered lists, bold, underline, and italic text. You&#8217;ll also find a handy link helper among the text editing tools.</p>\n<h3>Comment Push Notifications</h3>\n<p>If you have a WordPress.com blog (or a self-hosted blog with the <a href=\"http://jetpack.me/\">Jetpack plugin</a>) added to the app, you can now opt in to receive push notifications for new comments. This makes it easier than ever to keep up with your readers and moderate comments while on the go. You&#8217;ll get push notifications for new comments only and viewing a notification takes you right to the comment within the app. From there you can easily respond and moderate like usual.</p>\n<h3>Stability Improvements</h3>\n<p>In addition to the new features, we’ve worked hard on making the app even more stable. In total, almost <a href=\"http://windowsphone.trac.wordpress.org/query?status=closed&group=resolution&milestone=Push+Notifications+and+Content+Editor\" target=\"_blank\">40 bugs and crashes</a> have been fixed in this release.</p>\n<h3>Screenshots</h3>\n<a href=\"http://wpwindowsphone.wordpress.com/2013/04/11/version-2-1/#gallery-429-1-slideshow\">Click to view slideshow.</a>\n<h3>Contributors</h3>\n<p>The following contributors have worked on this release of WordPress for Windows Phone:  <a href=\"http://wordpress.org/support/profile/aerych\">aerych</a>, <a href=\"http://wordpress.org/support/profile/isaackeyet\">isaackeyet</a>, and <a href=\"http://wordpress.org/support/profile/daniloercoli\">daniloercoli</a>.</p>\n<h3>Get Involved!</h3>\n<p>We now have a feature-driven release cycle, meaning that updates will come faster and focus on single features and enhancements. This is the perfect time to get involved in the WordPress for Windows Phone project. Check out <a href=\"http://make.wordpress.org/mobile\">make.wordpress.org/mobile</a> and the <a href=\"http://windowsphonedev.wordpress.org/\" target=\"_blank\">WordPress for Windows Phone dev blog</a> to see how you can get involved!</p>\n<p>If you’d like to help us translate the app into your native language, check out the <a href=\"http://translate.wordpress.org/projects/wordpress-for-windows-phone/development\" target=\"_blank\">translation project</a>.</p>\n<br />  <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wpwindowsphone.wordpress.com&blog=16495748&post=429&subd=wpwindowsphone&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 07:14:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Danilo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"BuddyPress: BuddyPress 1.7 is now available!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://buddypress.org/?p=160310\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://buddypress.org/2013/04/buddypress-1-7-is-now-available/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8955:\"<p>BuddyPress 1.7 &#8220;Totonno&#8221; has arrived, and it&#8217;s our best version yet!</p>\n<h3>What&#8217;s New in 1.7</h3>\n<p>BuddyPress 1.7 is a major feature release, containing hundreds of bugfixes and dozens of new features. We&#8217;ll show off a few of our favorites below. Want to see a full changelog for 1.7? Check it out <a href=\"http://codex.buddypress.org/developer/releases/version-1-7/\">on the Codex</a>.</p>\n<p><em>Theme Compatibility</em></p>\n<p>BuddyPress&#8217;s social features add new kinds of content to your WordPress site: groups, profiles, and so on. Until now, displaying that content has required building or finding a BP-compatible theme &#8211; one of the biggest hurdles to using BuddyPress. Version 1.7 makes this a thing of the past. Using a feature we call &#8220;theme compatibility&#8221;, BuddyPress can display its content within the context of any WordPress theme &#8211; no modifications required. Here are a few screenshots showing BP running on a few popular themes:</p>\n<p><div id=\"attachment_160342\" class=\"wp-caption alignleft\"><a href=\"http://buddypress.org/wp-content/uploads/1/2013/04/bp-twentytwelve.png\"><img src=\"http://buddypress.org/wp-content/uploads/1/2013/04/bp-twentytwelve-150x150.png\" alt=\"Twenty Twelve\" width=\"150\" height=\"150\" class=\"size-thumbnail wp-image-160342\" /></a><p class=\"wp-caption-text\">Twenty Twelve</p></div> <div id=\"attachment_160343\" class=\"wp-caption alignleft\"><a href=\"http://buddypress.org/wp-content/uploads/1/2013/04/bp-coraline.png\"><img src=\"http://buddypress.org/wp-content/uploads/1/2013/04/bp-coraline-150x150.png\" alt=\"Coraline\" width=\"150\" height=\"150\" class=\"size-thumbnail wp-image-160343\" /></a><p class=\"wp-caption-text\">Coraline</p></div> <div id=\"attachment_160344\" class=\"wp-caption alignleft\"><a href=\"http://buddypress.org/wp-content/uploads/1/2013/04/bp-superstore.png\"><img src=\"http://buddypress.org/wp-content/uploads/1/2013/04/bp-superstore-150x150.png\" alt=\"Woo Superstore\" width=\"150\" height=\"150\" class=\"size-thumbnail wp-image-160344\" /></a><p class=\"wp-caption-text\">Woo Superstore</p></div></p>\n<div> </div>\n<p>Not satisfied with the way it looks out of the box? Not a problem. BuddyPress still provides a sophisticated, modular templating system, which you can easily customize in your own theme. Theme developers and designers can learn much more about theme compat on <a href=\"http://codex.buddypress.org/developer/theme-development/a-quick-look-at-1-7-theme-compatibility/\">the BuddyPress codex</a>.</p>\n<div> </div>\n<p><em>Group Administration</em></p>\n<div id=\"attachment_160321\" class=\"wp-caption alignright\"><a href=\"http://buddypress.org/wp-content/uploads/1/2013/04/dashboard.png\"><img src=\"http://buddypress.org/wp-content/uploads/1/2013/04/dashboard-300x216.png\" alt=\"Group Administration in BuddyPress 1.7\" width=\"150\" class=\"size-medium wp-image-160321\" /></a><p class=\"wp-caption-text\">Group Administration in BP 1.7</p></div>\n<p>If you&#8217;ve run a BuddyPress-powered community site, you know that groups are a powerful way for members to connect. But there&#8217;s been no way for site administrators to manage groups. BP 1.7 introduces a brand new set of Group Administration panels on your WordPress Dashboard. Now BP admins can bulk-delete groups, edit group settings, and manage group membership without ever leaving wp-admin.</p>\n<div> </div>\n<p><em>A Better Installation Experience</em></p>\n<div id=\"attachment_160328\" class=\"wp-caption alignright\"><a href=\"http://buddypress.org/wp-content/uploads/1/2013/04/about.png\"><img src=\"http://buddypress.org/wp-content/uploads/1/2013/04/about-150x150.png\" alt=\"About Screen\" width=\"150\" height=\"150\" class=\"size-thumbnail wp-image-160328\" /></a><p class=\"wp-caption-text\">About Screen</p></div>\n<p>BuddyPress makes it easy to add social features to your site, and BP 1.7 streamlines the process more than ever. We&#8217;ve removed the installation wizard in favor of a totally automated setup &#8211; just hit Activate, and we&#8217;ll handle the rest. On new installations, only the Activity and Extended Profiles components are activated, helping you to start small and grow your community features bit by bit. And, following in WordPress&#8217;s footsteps, we&#8217;ve added About and Credits screens, helping you to get up to date on the BuddyPress project.</p>\n<div> </div>\n<h3>Springtime Goodies</h3>\n<p>BuddyPress 1.7 is codenamed &#8220;Totonno&#8221;, after <a href=\"https://en.wikipedia.org/wiki/Totonno%27s\">the legendary Brooklyn pizza joint</a>. Totonno&#8217;s is just a few blocks from <a href=\"https://en.wikipedia.org/wiki/Coney_Island_Cyclone\">the Cyclone</a> and the Coney Island boardwalk, and there&#8217;s no better end to a lovely spring day than to indulge in what may be the world&#8217;s greatest pepperoni pie. With spring finally coming to Brooklyn, we think it&#8217;s appropriate to honor a pizza institution with what we think will be a watershed BuddyPress release.</p>\n<div> </div>\n<h3>The BuddyPress Community Rocks</h3>\n<p>Hundreds of developers, designers, and community volunteers have put thousands of hours into this version of BuddyPress. When you use BP, you&#8217;re standing on their shoulders. The following individuals contributed patches during the 1.7 release cycle: </p>\n<p>			<a href=\"http://profiles.wordpress.org/aesqe\">aesqe</a>, <a href=\"http://profiles.wordpress.org/apeatling\">apeatling</a>, <a href=\"http://profiles.wordpress.org/borkweb\">borkweb</a>, <a href=\"http://profiles.wordpress.org/calin\">calin</a>, <a href=\"http://profiles.wordpress.org/chouf1\">chouf1</a>, <a href=\"http://profiles.wordpress.org/chrisclayton\">chrisclayton</a>, <a href=\"http://profiles.wordpress.org/cnorris23\">cnorris23</a>, <a href=\"http://profiles.wordpress.org/ddean\">ddean</a>, <a href=\"http://profiles.wordpress.org/DennisSmolek\">DennisSmolek</a>, <a href=\"http://profiles.wordpress.org/Dianakc\">Dianakc</a>, <a href=\"http://profiles.wordpress.org/dontdream\">dontdream</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">empireoflight</a>, <a href=\"http://profiles.wordpress.org/enej\">enej</a>, <a href=\"http://profiles.wordpress.org/ethitter\">ethitter</a>, <a href=\"http://profiles.wordpress.org/fanquake\">fanquake</a>, <a href=\"http://profiles.wordpress.org/gmax21\">gmax21</a>, <a href=\"http://profiles.wordpress.org/hnla\">hnla</a>, <a href=\"http://profiles.wordpress.org/humanshell\">humanshell</a>, <a href=\"http://profiles.wordpress.org/imath\">imath</a>, <a href=\"http://profiles.wordpress.org/Jacek\">Jacek</a>, <a href=\"http://profiles.wordpress.org/jag1989\">jag1989</a>, <a href=\"http://profiles.wordpress.org/jbobich\">jbobich</a>, <a href=\"http://profiles.wordpress.org/jkudish\">jkudish</a>, <a href=\"http://profiles.wordpress.org/jpsb\">jpsb</a>, <a href=\"http://profiles.wordpress.org/karmatosed\">karmatosed</a>, <a href=\"http://profiles.wordpress.org/MacPresss\">MacPresss</a>, <a href=\"http://profiles.wordpress.org/magnus78\">magnus78</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">markjaquith</a>, <a href=\"http://profiles.wordpress.org/Maty\">Maty</a>, <a href=\"http://profiles.wordpress.org/mercime\">mercime</a>, <a href=\"http://profiles.wordpress.org/michael.ecklund\">michael.ecklund</a>, <a href=\"http://profiles.wordpress.org/modemlooper\">modemlooper</a>, <a href=\"http://profiles.wordpress.org/nacin\">nacin</a>, <a href=\"http://profiles.wordpress.org/netweb\">netweb</a>, <a href=\"http://profiles.wordpress.org/rogercoathup\">rogercoathup</a>, <a href=\"http://profiles.wordpress.org/sboisvert\">sboisvert</a>, <a href=\"http://profiles.wordpress.org/sbrajesh\">sbrajesh</a>, <a href=\"http://profiles.wordpress.org/slaFFik\">slaFFik</a>, <a href=\"http://profiles.wordpress.org/steve7777\">steve7777</a>, <a href=\"http://profiles.wordpress.org/tiraeth\">tiraeth</a>, <a href=\"http://profiles.wordpress.org/will_c\">will_c</a>, <a href=\"http://profiles.wordpress.org/wpdennis\">wpdennis</a>, <a href=\"http://profiles.wordpress.org/xt4v\">xt4v</a>.</p>\n<div> </div>\n<h3>Enjoy!</h3>\n<p>Do you have questions about the latest BuddyPress release? Check out the <a href=\"http://codex.buddypress.org\">BuddyPress Codex</a> &#8211; our growing collection of official documentation &#8211; and especially the pages in <a href=\"http://codex.buddypress.org/version/1-7/\">the 1.7 category</a>. Volunteers are also standing by in our active <a href=\"http://buddypress.org/support\">support and discussion forums</a>. If you&#8217;ve found a bug in BuddyPress, or if you want to contribute code to the next release, our development home is <a href=\"http://buddypress.trac.wordpress.org\">buddypress.trac.wordpress.org</a></p>\n<p>You might not be able to make it to Coney Island this summer, but we think that BuddyPress 1.7 &#8220;Totonno&#8221; is (almost) just as good. Download it today from the <a href=\"http://wordpress.org/extend/plugins/buddypress\">wordpress.org plugin repository</a>, or from your WordPress Dashboard.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Apr 2013 18:51:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Boone Gorges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"WordPress.tv: Understanding the WordPress Dashboard\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18552\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"http://wordpress.tv/2013/04/07/understanding-the-wordpress-dashboard/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:631:\"<div id=\"v-HSaaObvw-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18552/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18552/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18552&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/04/07/understanding-the-wordpress-dashboard/\"><img alt=\"wpdashboard.mp4\" src=\"http://videos.videopress.com/HSaaObvw/video-fba8d875a3_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Apr 2013 06:42:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"Mark Jaquith: WordPress 3.6: shortcode_atts_{$shortcode} filter\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://markjaquith.wordpress.com/?p=3975\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"http://markjaquith.wordpress.com/2013/04/04/wordpress-36-shortcode-attribute-filter/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2282:\"<p>Since WordPress 3.6 is in beta, I thought I&#8217;d use this nearly-abandoned blog (hey, been busy working on WordPress!) to talk about some of the cool stuff for developers. For the first installment, check out the new <code>shortcode_atts_{$shortcode}</code> filter. The <code>shortcode_atts()</code> function now accepts a third parameter — the name of the shortcode — which enables the running of this filter. All of the core shortcodes now pass this parameter.</p>\n<p>This filter passes three things:</p>\n<ol>\n<li><code>$out</code> — the output array of shortcode attributes</li>\n<li><code>$pairs</code> — the array of accepted parameters and their defaults.</li>\n<li><code>$atts</code> — the input array of shortcode attributes</li>\n</ol>\n<p>Let&#8217;s look at what we can do with this. One thing is that you can dynamically set or override shortcode values. You an also define new ones, and transpose them into accepted ones. Let&#8217;s look at the &#8220;gallery&#8221; shortcode for example. What if there was a gallery of images that you would reuse. Instead of picking the images each time, you could have a plugin that gives that set of attachment IDs a shortcut name. Then you could do <code>[gallery foo=my-gallery-name]</code>, which the plugin would convert to a list of IDs. Or, you could enforce a certain number of gallery columns on the fly. Let someone set it theme-wide, without having them go back and change their shortcodes.</p>\n<p>What other uses can you think of?</p>\n<p>Now, if you&#8217;re a plugin or theme author who provides their own shortcodes, you should immediately start providing this third parameter to your <code>shortcode_atts()</code> calls (since it is an extra parameter, you can do this without a WordPress version check). Maybe it&#8217;ll reduce the number of times people need to fork your code just to add an option to your shortcode!</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/markjaquith.wordpress.com/3975/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/markjaquith.wordpress.com/3975/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=markjaquith.wordpress.com&blog=316&post=3975&subd=markjaquith&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Apr 2013 03:12:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Mark Jaquith\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Dev Blog: WordPress 3.6 Beta 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=2547\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2013/04/wordpress-3-6-beta-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4076:\"<p>WordPress 3.6 Beta 1 is now available!</p>\n<p>This is software still in development and <strong>we <em>really</em> don’t recommend that you run it on a production site</strong> — set up a test site just to play with the new version. To test WordPress 3.6, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-3.6-beta1.zip\">download the beta here</a> (zip).</p>\n<p>We&#8217;ve been working for nearly three months and have completed all the features that are slated for this release. This is a bit of a change from the betas of previous release cycles. I felt very strongly that we shouldn&#8217;t release a beta if we were still working on completing the main features. This beta is <strong>actually a beta</strong>, not an alpha that we&#8217;re calling a beta. If you are a WordPress plugin or theme developer, or a WordPress hosting provider, you should absolutely start testing your code against this new version <strong>now</strong>. More bugs will be fixed, and some of the features will get polished, but we&#8217;re not going to shove in some big new feature. We&#8217;re ready for you to test it, so jump in there! The more you test the beta, the more stable our release candidates and our final release will be.</p>\n<p>As always, if you think you’ve found a bug, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a reproducible bug report, <a href=\"http://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/report/5\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&group=component&milestone=3.6\">everything we&#8217;ve fixed</a> so far.</p>\n<p>Here&#8217;s what&#8217;s new in 3.6:</p>\n<ul>\n<li><strong>Post Formats: </strong> Post Formats now have their own UI, and theme authors have access to templating functions to access the structured data.</li>\n<li><strong>Twenty Thirteen:</strong> We&#8217;re shipping this year&#8217;s default theme in our first release of the year. Twenty Thirteen is an opinionated, color-rich, blog-centric theme that makes full use of the new Post Formats support.</li>\n<li><strong>Audio/Video:</strong> You can embed audio and video files into your posts without relying on a plugin or a third party media hosting service.</li>\n<li><strong>Autosave: </strong> Posts are now autosaved locally. If your browser crashes, your computer dies, or the server goes offline as you&#8217;re saving, you won&#8217;t lose the your post.</li>\n<li><strong>Post Locking: </strong> See when someone is currently editing a post, and kick them out of it if they fall asleep at the keyboard.</li>\n<li><strong>Nav Menus: </strong> Nav menus have been simplified with an accordion-based UI, and a separate tab for  bulk-assigning menus to locations.</li>\n<li><strong>Revisions:</strong> The all-new revisions UI features avatars, a slider that &#8220;scrubs&#8221; through history, and two-slider range comparisons.</li>\n</ul>\n<p><strong>Developers: </strong> You make WordPress awesome(er). One of the things we strive to do with every release is be compatible with existing plugins and themes. But we need your help. <strong>Please test your plugins and themes against 3.6.</strong> If something isn&#8217;t quite right, please let us know. (Chances are, it wasn&#8217;t intentional.) If you&#8217;re a forward-thinking theme developer, you should be looking at implementing the new Post Format support in some of your themes (look to Twenty Thirteen for inspiration).</p>\n<p>We&#8217;re looking forward to your feedback. If you break it (i.e. find a bug), please report it, and if you’re a developer, try to help us fix it. We&#8217;ve already had more than 150 contributors to version 3.6 — it&#8217;s not too late to join the party!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Apr 2013 17:25:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Mark Jaquith\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"Dougal Campbell: CodePoet Interview\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"http://dougal.gunters.org/?p=72513\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://dougal.gunters.org/blog/2013/04/04/dougal-campbell-codepoet-interview/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1589:\"<div class=\"featured-image align-right\"><img width=\"164\" height=\"52\" src=\"http://geekramblings.gunters.netdna-cdn.com/wordpress/wp-content/uploads/2013/04/codepoet-logo.png?9bb111\" class=\"attachment-post-thumbnail wp-post-image\" alt=\"CodePoet Logo\" /></div><!--\narticle.tag-codepoet div.featured-image img{background-color: #333;}\n-->\n<p>I was honored to be chosen for an <a title=\"It\'s me!\" href=\"http://build.codepoet.com/2013/04/04/dougal-campbell-interview/\">interview on CodePoet</a>. Though I haven&#8217;t been able to stay as involved with WordPress as much lately as I&#8217;d like, due to job and family, I guess I&#8217;m of &#8220;historical interest&#8221; because of my involvement as a core developer back in the first couple of years. (I jest &#8212; a little)</p>\n<p>We discuss how I came to web development and from there to WordPress, my more recent activity as a speaker at WordCamp Atlanta on the topic of security, the community and why someone should become involved, and the differences between web development as a job versus as a hobby, among other things.</p>\n<p>I enjoyed answering the questions, and I hope you all will enjoy reading the interview!</p>\n<p>&nbsp;</p>\n<p>Original Article: <a href=\"http://dougal.gunters.org/blog/2013/04/04/dougal-campbell-codepoet-interview/\">CodePoet Interview</a>\n<a href=\"http://dougal.gunters.org\">Dougal Campbell&#039;s geek ramblings - WordPress, web development, and world domination.</a></p><div class=\"yarpp-related-rss yarpp-related-none\">\n<img src=\"http://yarpp.org/pixels/5db43ee24c4f1e1d0e45d08cc91b0130\" />\n</div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Apr 2013 16:03:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Dougal Campbell\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Gravatar: Gravatar and WordPress.com, Together Forever\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.gravatar.com/?p=437\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"http://blog.gravatar.com/2013/04/03/gravatar-and-wordpress-com-together-forever/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3493:\"<p>Did you know that your Gravatar.com account has always been a WordPress.com account? It&#8217;s true.</p>\n<p>Back in 2007 we (<a href=\"http://automattic.com\">Automattic</a>) acquired Gravatar. Heading into 2008 we <a href=\"http://blog.gravatar.com/2008/03/14/big-changes-afoot/\">rewrote it in PHP</a>, and ever since then, it&#8217;s been using the same integrated user system as WordPress.com for accounts. Previously we handled that &#8220;behind the scenes,&#8221; but we found that it made things pretty confusing for everyone. We&#8217;ve now switched over to using <a href=\"http://en.support.wordpress.com/wpcc-faq/\">WordPress.com Connect</a> exclusively, which allows you to explicitly connect Gravatar and WordPress.com, and to use your WordPress.com credentials to log into Gravatar. That&#8217;s one less set of login credentials to worry about!</p>\n<div id=\"attachment_438\" class=\"wp-caption aligncenter\"><img class=\"size-full wp-image-438\" alt=\"wpcc-button\" src=\"http://gravatar.files.wordpress.com/2013/04/wpcc-button.png?w=258&h=65\" width=\"258\" height=\"65\" /><p class=\"wp-caption-text\">This is not a real button <img src=\"http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" /></p></div>\n<ol>\n<li><span>If you had a Gravatar account before, it&#8217;s actually always been a WordPress.com account!</span></li>\n<li>When you try to log in at Gravatar.com now, you will be asked to do so using WordPress.com Connect.</li>\n<li>Once you&#8217;re logged into WordPress.com, you then grant Gravatar access to use your WordPress.com account.</li>\n<li>After that, you&#8217;ll use your WordPress.com username and password to log in to Gravatar, for evermore.</li>\n</ol>\n<p>You might be wondering about existing accounts and creating new accounts, and what your options are:</p>\n<ul>\n<li><span>If you have a Gravatar account, it&#8217;s actually also a WordPress.com account. You can use those details to log into WordPress.com, then grant access to Gravatar.</span></li>\n<li>If you already have a WordPress.com account, then you can use that to log into Gravatar.com now.</li>\n<li>If you don&#8217;t have a WordPress.com (or Gravatar) account, you can create one for free (no need for a blog, although you can do that also if you like!) and then you can grant access to Gravatar to get started.</li>\n</ul>\n<p>The beauty of switching to WordPress.com Connect is that it means your account information is all managed in one, super-secure place (WordPress.com), and it avoids all sorts of complexity and potential for problems with password resets, account activations, and more. We&#8217;re in the process of switching all of our services to using WordPress.com Connect, so you can use the same account to log into our other nifty products, including <a href=\"http://vaultpress.com\">VaultPress</a>, <a href=\"http://akismet.com\">Akismet</a> and <a href=\"http://polldaddy.com\">Polldaddy</a>.</p>\n<p>There&#8217;s a bunch more info on the <a href=\"http://en.support.wordpress.com/wpcc-faq/\">WordPress.com Connect FAQ</a>, which will hopefully help clear up any other questions you have.</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/gravatar.wordpress.com/437/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/gravatar.wordpress.com/437/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=blog.gravatar.com&blog=1886259&post=437&subd=gravatar&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Apr 2013 18:33:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Beau Lebens\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WordPress.tv: Understanding the WordPress Add New User Screen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18463\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"http://wordpress.tv/2013/03/31/understanding-the-wordpress-add-new-user-screen/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:642:\"<div id=\"v-pjAMiXtc-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18463/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18463/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18463&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/31/understanding-the-wordpress-add-new-user-screen/\"><img alt=\"wpaddnewuser.mp4\" src=\"http://videos.videopress.com/pjAMiXtc/video-5b0b00cf6d_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Apr 2013 04:45:10 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"WordPress.tv: Understanding WordPress Discussion Settings\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18455\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"http://wordpress.tv/2013/03/31/understanding-wordpress-discussion-settings/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:644:\"<div id=\"v-QKczX0JE-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18455/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18455/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18455&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/31/understanding-wordpress-discussion-settings/\"><img alt=\"wpdiscussion.mp4\" src=\"http://videos.videopress.com/QKczX0JE/video-5280873d59_scruberthumbnail_2.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Apr 2013 04:30:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"WordPress.tv: Phil Erb: WordPress is Installed… Now What?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18452\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"http://wordpress.tv/2013/03/28/phil-erb-wordpress-is-installed-now-what/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:674:\"<div id=\"v-f6li6sy6-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18452/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18452/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18452&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/28/phil-erb-wordpress-is-installed-now-what/\"><img alt=\"Phil Erb: WordPress is Installed&#8230; Now What?\" src=\"http://videos.videopress.com/f6li6sy6/video-50494d19a5_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Apr 2013 04:30:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"Weblog Tools Collection: I am taking my leave of Weblog Tools Collection, and thanks for everything!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12845\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/NRKA8GMV-fA/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4720:\"<p>Not many of the present readers might know me very well, and that in part, is the reason that I have made the decision to transfer WLTC to more willing and presently capable hands. I am a stranger on my blog and the time has come for me to make sure that this blog, its contents and its knowledge are archived and preserved and maybe rejuvenated at a later time.</p>\n<p>I delved into blogging tools back in 2004 when I started my Masters degree in CS. I wanted some code to mess around with in my free time and everyone was talking about blogging. I looked into a variety of tools, built a small Linux server for myself at home, and installed a few of the tools that were freely available at that time. I had a heck of a time getting a hold of MT (Moveable Type, the most well-known name) and then found b2 by sheer luck. I loved the cool look of Michael&#8217;s blog and the people involved in the tool seemed to be open to comments and replied warmly to my emails and questions. Through the b2 forums I heard about WordPress and proceeded to install it on my own. To my astonishment, it worked without a hitch and I was blogging away in no time. I started looking through the code to understand how it worked and it drew me in every step of the way.</p>\n<p>Within a few months of installing WordPress, I started to take part in the forums and wrote a few plugins and created some &#8220;hacks&#8221; for the tool. I even gained some notoriety with my MT VS WP post and that&#8217;s when the WordPress ecosphere started to look very attractive to me. I did not do this to seek attention, but I was getting a lot of attention and I was loving it. I believe that was when Matt first noticed me and we exchanged some emails and chatted with each other. With every month and with every release of WordPress I was getting more involved. At some point I realized that I could not do it alone and hired a few interested people to help me write posts and the blog started to get popular. I brought on some advertisers to help me offset costs. Matt gave me and my blog the highest honor of being included in the WordPress Planet and that&#8217;s when things really started to happen for this blog. I also started a WordPress Job blog (http://jobs.wordpress.net) which I still curate and I got involved in WordPress evangelism. Somewhere within this time, Matt had asked me to work for him at the new company he was starting and I had to turn him down because of visa restrictions and because I wanted to finish school (I kick myself every time I think about that).</p>\n<p>WordPress started to mature and WordCamps started to happen. I graduated from school with a Master&#8217;s Degree in Computer Science and found a job. I wanted to stay involved but it was getting bigger than I could handle. I could either dive in and get into WordPress and the blogging world, or I could focus on my job, career and family. I decided to choose the latter. I still wanted to loosely be involved with WordPress and things went well for a couple of years with me being casually involved. I even visited and spoke at a couple of WordCamps.</p>\n<p>When my son Lucien was born, all my time and attention was exhausted on him. I could not spend any time with WordPress or blogging at all. In addition to my growing family, I was diagnosed with a serious health condition just as I was starting a new job and moving to a new city. Needless to say, the blog was the last thing on my mind. James, who has been the sole author and curator for a long time, was my winning hand and just a fantastic helper and well wisher. He has kept things running for a long time and I have had no complaints.</p>\n<p>But I have found very little time to come back and spend with my old friends, Weblog Tools Collection and WordPress. I do not want this blog&#8217;s content and conversations to be lost or forgotten because of my neglect. I am hoping this move will help it live on as an archive, or find new lifeblood in another form. I know that it is in the right hands.</p>\n<p>So Adios and Gracias. I hope to see you in another blog, and take part in another conversation with you someday. It has been a wonderful journey and I appreciate everything that has taken place because of WordPress and every bit of help and encouragement that has been provided to me by so many of you. So thank to my wonderful audience of many years, thanks to my advertisers, thanks to my authors and finally thanks to Matt and to WordPress for making my life so much more fulfilling and successful.</p>\n<p>Peace on Earth, Goodwill to All, And to All a Goodnight!</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/NRKA8GMV-fA\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 31 Mar 2013 13:41:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Mark Ghosh\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"Weblog Tools Collection: Where to Find WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12846\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/ah3QRPNnlhs/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2837:\"<p>The landscape of news has changed so much over the last few years that news about a particular topic or platform is readily available to anyone within an instant. With <a href=\"http://wordpress.org\">WordPress</a>, I imagine that could be one of the perks of <a href=\"http://weblogtoolscollection.com/archives/2012/08/08/the-state-of-the-word-in-2012/\">powering over 16% of the web</a>, but it&#8217;s true that news is becoming incredibly accessible. In short, news is everywhere.</p>\n<p>Speaking of WordPress in general, you can of course acquire official direct news from <a href=\"http://wordpress.org/news/\">WordPress News</a>, but you can also take a peak behind the curtain and follow news in the making at <a href=\"http://make.wordpress.org\">Make WordPress.org</a>. Though it&#8217;s only specific to the <a href=\"http://wordpress.com\">WordPress.com</a> blogging platform, <a href=\"http://en.blog.wordpress.com\">WordPress.com News</a> is also worth watching for WordPress development news, as WordPress.com users often get access to new WordPress features before they&#8217;re released, so you&#8217;ll be able to try new features rather than just read about them.</p>\n<p>There&#8217;s more news than just direct official news, like I said earlier, it&#8217;s everywhere. You could subscribe to every general news site, every core developer&#8217;s personal blog, every premium theme shop, and every plugin developer, but why not subscribe to a few curated news sources instead? I guess you could call <a href=\"http://planet.wordpress.org\">WordPress Planet</a> the official curated news source, but it&#8217;s really just a collection of all news items from a particular set of curated blogs. For specific news items curated from sources through the entire WordPress community, subscribe to <a href=\"http://poststat.us\">Post Status</a>, and don&#8217;t neglect the power of allowing the folks you follow on <a href=\"http://twitter.com\">Twitter</a>, <a href=\"http://plus.google.com\">Google+</a>, and/or <a href=\"http://www.facebook.com\">Facebook</a> to curate news for you.</p>\n<p>Speaking of the WordPress community, you should <a href=\"http://codex.wordpress.org/Contributing_to_WordPress\">get involved</a> if you aren&#8217;t already. If you don&#8217;t even use WordPress yet, it&#8217;s time to get started <a href=\"http://codex.wordpress.org/Getting_Started_with_WordPress\">with either WordPress.org</a> or <a href=\"http://learn.wordpress.com/get-started/\">with WordPress.com</a>, share your thoughts with the world, and maybe spread some WordPress news on your blog too.</p>\n<p>The news is out there, and it&#8217;s well within your reach. If you can&#8217;t find the news, it&#8217;s time to make your own.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/ah3QRPNnlhs\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 31 Mar 2013 00:05:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Weblog Tools Collection: WordPress Plugin Releases for 3/30\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12837\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/-vmyakR-BnA/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1089:\"<h3>New plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/gc-message-box/\"><strong>GC Message Box</strong></a> allows you to highlight your key message(s) in smart ways within articles and blog posts.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/simple-social-icons/\"><strong>Simple Social Icons</strong></a> allows you to insert social icons in any widget area.</p>\n<p><a href=\"http://askwebexpert.com/stick-it/\"><strong>Stick It</strong></a> allows you to stick the navigation menu in any theme to the top of browser window.</p>\n<h3>Updated plugins</h3>\n<p><a href=\"http://jetpack.me/\"><strong>Jetpack</strong></a> allows you to supercharge your WordPress site with powerful features previously only available to <a href=\"http://wordpress.com/\">WordPress.com</a> users.</p>\n<p><a href=\"http://blog.milandinic.com/wordpress/plugins/nav-menu-images/\"><strong>Nav Menu Images</strong></a> enables uploading of images for nav menu items on the menu edit screen.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/-vmyakR-BnA\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 30 Mar 2013 14:00:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Matt: (Un)organized Consumption\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=42334\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://ma.tt/2013/03/unorganized-consumption/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:387:\"<p><a href=\"http://writingthroughthefog.com/2013/03/09/on-unorganized-consumption/\">On (Un)organized Consumption</a> by Automattician Cheri Lucas. &#8220;I stopped using Instapaper. Early on, I relied on it as a space to store ideas and information I could draw from, but it quickly became my intellectual limbo: the unfortunate vault of forgotten stories and Twitter residue.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Mar 2013 14:20:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"Matt: Evolution of San Francisco\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=42333\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"http://ma.tt/2013/03/evolution-of-san-francisco/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2968:\"<p>There have been three excellent writings on the effects and consequences of the latest boom on the Bay Area, each long but worth reading.</p>\n<p>The East Bay Express, with a permalink I&#8217;m sure won&#8217;t work a decade from now, brings us <a href=\"http://www.eastbayexpress.com/oakland/the-bacon-wrapped-economy/Content?oid=3494301&showFullText=true\">The Bacon-Wrapped Economy</a>:</p>\n<div class=\"blockquote\">\n<blockquote>The arts economy, already unstable, has been forced to contend with the twin challenges of changing tastes and new funding models. Entire industries that didn&#8217;t exist ten years ago are either thriving on venture capital, or thriving on companies that are thriving on it. It is now possible to find a $6 bottle of Miller High Life, a $48 plate of fried chicken, or a $20 BLT in parts of the city that used to be known for their dive bars and taco stands. If, after all, money has always been a means of effecting the world we want to bring about, when a region is flooded with uncommonly rich and uncommonly young people, that world begins to look very different. And we&#8217;re all living in it, whether we like it or not.</p></blockquote>\n</div>\n<p>SFGate has <a href=\"http://www.sfgate.com/technology/dotcommentary/article/Innovation-and-the-face-of-capitalism-4342160.php\">The hypocrisy in Silicon Valley&#8217;s big talk on innovation</a>:</p>\n<div class=\"blockquote\">\n<blockquote>&#8220;[I]nnovation&#8221; is something of a magic word around here, shape-shifting to fit the speaker&#8217;s immediate needs. So long as semiconductors and coding are involved, people will staple it to anything from flying cars to the iFart app.</p>\n<p>Other times it&#8217;s just code for &#8220;jobs,&#8221; used to justify asking for government favors one day and scolding them for meddling in the free market the next.</p>\n<p>&#8220;Lower our payroll taxes because &#8230; innovation.&#8221;<br />\n&#8220;Drop that antitrust inquiry because &#8230; innovation.&#8221;</p>\n<p>But for all the funding announcements, product launches, media attention and wealth creation, most of Silicon Valley doesn&#8217;t concern itself with aiming &#8220;almost ridiculously high.&#8221; It concerns itself primarily with getting people to click on ads or buy slightly better gadgets than the ones they got last year.</p></blockquote>\n</div>\n<p>The final comes from Rebecca Solnit, <a href=\"http://ma.tt/2011/07/on-blue/\">who I&#8217;ve quoted before</a>, writes <a href=\"http://www.lrb.co.uk/v35/n03/rebecca-solnit/diary\">a diary for the London Review of Books</a>.</p>\n<div class=\"blockquote\">\n<blockquote>I weathered the dot-com boom of the late 1990s as an observer, but I sold my apartment to a Google engineer last year and ventured out into both the rental market (for the short term) and home buying market (for the long term) with confidence that my long standing in this city and respectable finances would open a path.</p></blockquote>\n</div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Mar 2013 15:49:52 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Weblog Tools Collection: WordPress Theme Releases for 3/28\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12825\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/gKIU6AevNTQ/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1374:\"<p><a href=\"http://emptynestthemes.com/2013/03/26/airtime-wordpress-blog-theme\"><img class=\"alignnone size-thumbnail wp-image-12826\" alt=\"screenshot2\" src=\"http://i1.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot21.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://emptynestthemes.com/2013/03/26/airtime-wordpress-blog-theme/\"><strong>AirTime</strong></a> is a subtle and simple theme.</p>\n<p><a href=\"http://wordpress.org/extend/themes/firmasite\"><img class=\"alignnone size-thumbnail wp-image-12827\" alt=\"screenshot\" src=\"http://i2.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot6.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/firmasite\"><strong>FirmaSite</strong></a> is a responsive theme with <a href=\"http://buddypress.org\">BuddyPress</a> and <a href=\"http://bbpress.org\">bbPress</a> support.</p>\n<p><a href=\"http://wordpress.org/extend/themes/stark-lite\"><img class=\"alignnone size-thumbnail wp-image-12828\" alt=\"screenshot-1\" src=\"http://i2.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot-16.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/stark-lite\"><strong>Stark Lite</strong></a> is a minimalist and simple theme.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/gKIU6AevNTQ\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Mar 2013 14:00:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress.tv: Chris Lema: Execution\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18441\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"http://wordpress.tv/2013/03/27/chris-lema-execution/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:626:\"<div id=\"v-dquuVmAU-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18441/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18441/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18441&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/27/chris-lema-execution/\"><img alt=\"Chris Lema: Execution\" src=\"http://videos.videopress.com/dquuVmAU/video-7a7d3fbf9e_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Mar 2013 00:30:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"bbPress: bbPress 2.3 – Release Candidate 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://bbpress.org/?p=131092\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://bbpress.org/blog/2013/03/bbpress-2-3-release-candidate-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1175:\"<p>Today the bbPress team is happy to announce <a href=\"http://downloads.wordpress.org/plugin/bbpress.zip\">bbPress 2.3, release candidate 1</a>.</p>\n<p>bbPress 2.3 introduces forum-specific search functionality, so that your users are able to search your forum posts without interfering with your blog posts. It simplifies the fancy topic and reply editors, enabling only the functionality your users should see. Lastly, we&#8217;ve included more forum migration tools to help you transition to bbPress from Vanilla, Mingle, and SimplePress.</p>\n<p>With that, we bring you <a href=\"http://downloads.wordpress.org/plugin/bbpress.zip\">bbPress 2.3, Release Candidate 1</a>. Please try it, either on a test site, or wherever you feel comfortable running it, and <a href=\"http://bbpress.trac.wordpress.org\">let us know if you run into any issues</a>.</p>\n<p>Oh yeah&#8230; If you want to stay on the bleeding edge of releases, check out the <a href=\"http://wordpress.org/extend/plugins/bbpress-beta-tester/\">bbPress Beta Tester</a> plugin! It&#8217;s really neat. <img src=\"http://bbpress.org/wordpress/wp-includes/images/smilies/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" /> </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Mar 2013 21:14:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"John James Jacoby\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"WordPress.tv: WordPress General Settings and WordPress Roles\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18439\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://wordpress.tv/2013/03/27/wordpress-general-settings-and-wordpress-roles/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:652:\"<div id=\"v-Pz6kgctM-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18439/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18439/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18439&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/27/wordpress-general-settings-and-wordpress-roles/\"><img alt=\"wpgeneralsettings.mp4\" src=\"http://videos.videopress.com/Pz6kgctM/video-1094a9ccf9_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Mar 2013 20:20:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"BuddyPress: BuddyPress 1.7 – Release Candidate 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://buddypress.org/?p=158776\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://buddypress.org/2013/03/buddypress-1-7-release-candidate-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1388:\"<p>Today the BuddyPress team would like to tell you a bit about <a href=\"http://downloads.wordpress.org/plugin/buddypress.zip\">BuddyPress 1.7, release candidate 1</a>.</p>\n<p>BuddyPress 1.7 is going to be one of our most exciting releases to date. It comes packaged with the same theme compatibility that was introduced in bbPress 2.0, which means that BuddyPress will now work out-of-the-box with a majority of the WordPress themes available today.</p>\n<p>We&#8217;ve also fixed <a href=\"http://buddypress.trac.wordpress.org/milestone/1.7\">a bunch of annoyances</a>, and smoothed out the installation and update experiences, to provide users and site-admins with a less intimidating introduction into building a community with BuddyPress.</p>\n<p>Because of the hugeness of 1.7&#8242;s features and changes, we&#8217;ve spent a little extra time rigorously testing it with various types of themes and installations, to make it a worry-free update from BuddyPress 1.5 or later. The beta-testing phase has gone well, and uncovered only a few loose-ends that needed tying.</p>\n<p>With that, we bring you <a href=\"http://downloads.wordpress.org/plugin/buddypress.zip\">BuddyPress 1.7, Release Candidate 1</a>. Please try it, either on a test site, or wherever you feel comfortable running it, and <a href=\"http://buddypress.trac.wordpress.org/\">let us know if you run into any issues</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Mar 2013 19:47:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"John James Jacoby\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"Matt: Imports Keep Rolling, and Trust\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=42335\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"http://ma.tt/2013/03/imports-and-trust/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:900:\"<p>TechCrunch writes <a href=\"http://techcrunch.com/2013/03/26/wordpress-com-has-imported-15m-posts-in-the-last-30-days-remains-a-top-safe-haven-for-nomad-bloggers/\">WordPress.com Has Imported 15M Posts In The Last 30 Days, Remains A Top Safe Haven For Nomad Bloggers</a>. I&#8217;m very proud of the 8+ years we&#8217;ve been a home for, and protected, our users blogs. Protection covers many aspects: backups, scalability, security, speed, permalinks, mobile versions, forward-compatible markup, clean exports&#8230; the list goes on. We&#8217;ve done the same with other internet-scale services, like <a href=\"http://akismet.com/\">Akismet</a>, <a href=\"http://gravatar.com/\">Gravatar</a>, and <a href=\"http://jetpack.me/\">Jetpack</a>, and I hope to earn the same trust in the coming decade with <a href=\"http://vaultpress.com/\">VaultPress</a> and <a href=\"http://simperium.com/\">Simperium</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Mar 2013 14:07:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Matt: No to NoUI\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=42332\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"http://ma.tt/2013/03/no-to-noui/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:231:\"<p><a href=\"http://www.elasticspace.com/2013/03/no-to-no-ui\">No to NoUI</a> by Timo Arnall is one of the better pieces I&#8217;ve read on design and interfaces, and is also chock-full of links that will keep you busy for hours.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 26 Mar 2013 14:12:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"WordPress.tv: Understanding WordPress Permalinks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18376\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.tv/2013/03/25/understanding-wordpress-permalinks/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:633:\"<div id=\"v-kEYdKErG-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18376/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18376/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18376&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/25/understanding-wordpress-permalinks/\"><img alt=\"permalinks.mp4\" src=\"http://videos.videopress.com/kEYdKErG/video-f10e063f57_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 25 Mar 2013 20:02:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"WP iPhone: Version 3.5 is Here: Draft Previews, Autosave, and More\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"http://ios.wordpress.org/?p=1376\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"http://ios.wordpress.org/2013/02/22/version-3-5-is-here-draft-previews-autosave-and-more/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3713:\"<p><a href=\"http://wpiphone.files.wordpress.com/2013/02/wpios-3-5-draft-previews-plus-autosave.png\"><img src=\"http://wpiphone.files.wordpress.com/2013/02/wpios-3-5-draft-previews-plus-autosave.png?w=240&h=517\" alt=\"Version 3.5 of WordPress for iOS: Draft Previews + Autosave\" width=\"240\" height=\"517\" class=\"alignright size-medium wp-image-1402\" /></a>We&#8217;re pleased as punch to announce that WordPress for iOS 3.5 is now available in the <a href=\"https://itunes.apple.com/us/app/wordpress/id335703880?ls=1&mt=8\">App Store</a>. The dev team focused on the content editor for this release, which adds some very handy new features:</p>\n<h3>Draft previews</h3>\n<p>We know that publishing your very best stuff is important, and you should be able to see what your post or page will look like <em>before</em> you publish. Now, in version 3.5 of WordPress for iOS, you can preview your drafts! Just tap the preview &#8220;eye&#8221; tab while drafting your post or page to see the post as it will appear on your WordPress site after you hit publish.</p>\n<p>If you have a <a href=\"http://en.wikipedia.org/wiki/Responsive_web_design\">responsive</a> WordPress theme the preview will show what your post looks like on a mobile device.</p>\n<h3>Autosave</h3>\n<p>Thanks to a new Autosave feature, your site&#8217;s content is safer than ever before. Now, when you edit a draft in the app, you&#8217;ll notice a small &#8220;Autosaved ✓&#8221; message appear as you type. The draft is instantly saved locally, and if you have a reliable Internet connection at the time, it will autosave online to your WordPress site, too.</p>\n<p><img src=\"http://wpiphone.files.wordpress.com/2013/02/wpios-3-5-autosave1.jpg?w=420&h=188\" alt=\"Version 3.5 of WordPress for iOS: Autosave\" width=\"420\" height=\"188\" class=\"aligncenter size-full wp-image-1395\" /></p>\n<h3>More improvements and bug fixes</h3>\n<p>This release also includes improvements for WordPress.com and Jetpack notifications, as well as fixes for crashes and other bugs. You can check out all the changes <a href=\"http://ios.trac.wordpress.org/timeline?from=02%2F11%2F13&daysback=6&authors=&ticket=on&milestone=on&changeset=on&wiki=on&update=Update\">here</a>.</p>\n<p>The crash on launch that some of you were seeing has been fixed in this release.</p>\n<h3>What&#8217;s next?</h3>\n<p>We want to continue making your mobile blogging experience better and better! While the dev team is currently deciding what to work on for version 3.6, these next items are high on our list:</p>\n<ul>\n<li>Rich Text Editor</li>\n<li>Improved media management</li>\n<li>Sharing to the app from third-party apps and services</li>\n</ul>\n<p>Want to keep up with the latest happenings in the WordPress mobile world? Head over to <a href=\"http://make.wordpress.org/mobile\">http://make.wordpress.org/mobile</a>.</p>\n<p>A huge thanks to the contributors that worked on this release: <a href=\"http://wordpress.org/support/profile/beaucollins\">beaucollins</a>, <a href=\"http://wordpress.org/support/profile/daniloercoli\">daniloercoli</a>, <a href=\"http://wordpress.org/support/profile/koke\">koke</a>, and <a href=\"http://wordpress.org/support/profile/mrroundhill\">mrroundhill.</a></p>\n<p>If you have any feedback about the app, please leave a comment below or follow us <a href=\"http://twitter.com/wordpressios\">@WordPressiOS</a>.</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wpiphone.wordpress.com/1376/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wpiphone.wordpress.com/1376/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=ios.wordpress.org&blog=3882653&post=1376&subd=wpiphone&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 25 Mar 2013 18:30:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:3:\"Dan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Weblog Tools Collection: WordPress Plugin Releases for 3/25\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12819\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/J5kgleppg3E/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1264:\"<h3>New plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/easy-watermark/\"><strong>Easy Watermark</strong></a> automatically adds watermark to images when they are uploaded.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/cat-signal/\"><strong>Internet Defense League Cat Signal</strong></a> automatically loads either the modal or the banner Cat Signal when there is an active campaign from <a href=\"http://internetdefenseleague.org\">the Internet Defense League</a>.</p>\n<h3>Updated plugins</h3>\n<p><a href=\"http://calendarscripts.info/autoresponder-wordpress.html\"><strong>BFT Autoresponder</strong></a> allows scheduling of automated autoresponder messages and managing a mailing list.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/google-analytics-dashboard-for-wp/\"><strong>Google Analytics Dashboard for WP</strong></a> will display Google Analytics data and statistics inside your Dashboard.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/wordpress-mu-domain-mapping/\"><strong>WordPress MU Domain Mapping</strong></a> allows users of a WordPress MU site or WordPress 3.0 network to map their blog/site to another domain.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/J5kgleppg3E\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 25 Mar 2013 18:03:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"BuddyPress: BuddyPress 1.6.5\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://buddypress.org/?p=157571\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://buddypress.org/2013/03/buddypress-1-6-5/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:649:\"<p><a href=\"http://wordpress.org/extend/plugins/buddypress/\">BuddyPress 1.6.5</a> is now available. It&#8217;s the fifth minor release to the 1.6 branch, and is a recommended update for all previous versions of BuddyPress.</p>\n<p>1.6.5 fixes 1 security issue potentially allowing access to the &#8216;delete-account&#8217; Settings screen for users that should not normally have that privilege. This bug was reported and researched by Rob Begic, and fixed by the BuddyPress core team.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/buddypress/\">Download 1.6.5</a> or visit Dashboard &rarr; Updates in your administration area to update now.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 23 Mar 2013 20:53:15 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"John James Jacoby\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Weblog Tools Collection: WordPress Theme Releases for 3/23\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12813\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/RRyaMSkB1LI/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1260:\"<p><a href=\"http://wordpress.org/extend/themes/memori-jingga\"><img class=\"alignnone size-thumbnail wp-image-12814\" alt=\"screenshot\" src=\"http://i1.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot5.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/memori-jingga\"><strong>Memori Jingga</strong></a> is a responsive, clean, and simple theme.</p>\n<p><a href=\"http://wordpress.org/extend/themes/rockers\"><img class=\"alignnone size-thumbnail wp-image-12815\" alt=\"screenshot-1\" src=\"http://i0.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot-15.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/rockers\"><strong>Rockers</strong></a> is a responsive theme with a clean design.</p>\n<p><a href=\"http://wordpress.org/extend/themes/satu\"><img class=\"alignnone size-thumbnail wp-image-12816\" alt=\"screenshot-2\" src=\"http://i0.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot-23.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/satu\"><strong>Satu</strong></a> is an elegant single-column responsive theme.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/RRyaMSkB1LI\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 23 Mar 2013 14:00:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"Weblog Tools Collection: WordCamp San Francisco 2013 Dates Announced\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12807\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/tdYxbhgsXyo/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:859:\"<p>The dates <a href=\"http://2013.sf.wordcamp.org/2013/03/22/wordcamp-sf-2013-announcement/\">have been announced</a> for <a href=\"http://2013.sf.wordcamp.org\">WordCamp San Francisco 2013</a>, an event which is often heralded as the annual <a href=\"http://wordpress.org/\">WordPress</a> conference.</p>\n<p>WordCamp San Francisco 2013 will be held on July 26 and 27 at <a href=\"http://goo.gl/maps/rT6ou\">the Mission Bay Conference Center</a> with a Developer Hack Day on July 28. A list of speakers is not yet available, but they would like you to <a href=\"http://wordcampcentral.polldaddy.com/s/best-2012-2013-wordcamp-speakers-so-far\">nominate your favorite past WordCamp speakers</a>.</p>\n<p>Will you be attending WordCamp San Francisco this year?</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/tdYxbhgsXyo\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 23 Mar 2013 00:30:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"WordPress.tv: Chris Lema: Says No Automatically (w/ Gravity Forms)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18041\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"http://wordpress.tv/2013/03/22/chris-lema-says-no-automatically-w-gravity-forms/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:692:\"<div id=\"v-NF4VIeHi-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18041/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18041/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18041&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/22/chris-lema-says-no-automatically-w-gravity-forms/\"><img alt=\"OCWP &#8211; Chris Lema &#8211; Recording on 2013-03-11.mp4\" src=\"http://videos.videopress.com/NF4VIeHi/video-548cfa5139_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 22 Mar 2013 19:45:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Weblog Tools Collection: WordPress Plugin Releases for 3/21\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12802\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/0LUWJ6dWyoE/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1145:\"<h3>New plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/google-adsense-dashboard-for-wp/\"><strong>Google Adsense Dashboard for WP</strong></a> will display your Google Adsense earnings and related reports inside your Dashboard.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/google-analytics-dashboard-for-wp/\"><strong>Google Analytics Dashboard for WP</strong></a> will display Google Analytics data and statistics inside your Dashboard.</p>\n<h3>Updated plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/ad-code-manager/\"><strong>Ad Code Manager</strong></a> allows you to manage your ad codes through the WordPress admin in a safe and easy way.</p>\n<p><a href=\"http://calendarscripts.info/autoresponder-wordpress.html\"><strong>BFT Autoresponder</strong></a> allows scheduling of automated autoresponder messages and managing a mailing list.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/camptix/\"><strong>CampTix Event Ticketing</strong></a> is an easy to use and flexible event ticketing plugin.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/0LUWJ6dWyoE\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Mar 2013 14:00:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"WordPress.tv: Walter Dal Mut: WordPress incontra il Cloud Computing: Scalabilità ed Alta Disponiblità\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=17317\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:117:\"http://wordpress.tv/2013/03/20/walter-dal-mut-wordpress-incontra-il-cloud-computing-scalabilita-ed-alta-disponiblita/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:710:\"<div id=\"v-8DjnnEnW-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/17317/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/17317/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=17317&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/20/walter-dal-mut-wordpress-incontra-il-cloud-computing-scalabilita-ed-alta-disponiblita/\"><img alt=\"02 Gabriele Mittica & Walter Dal Mut.mp4\" src=\"http://videos.videopress.com/8DjnnEnW/video-5d332310a1_scruberthumbnail_2.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Mar 2013 01:20:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"Alex King: WordPress Maturity – An Interview with Me at WP Engine\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://alexking.org/?p=16267\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"http://alexking.org/blog/2013/03/20/wordpress-maturity-an-interview-with-me-at-wp-engine\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:402:\"<p>An <a href=\"http://wpengine.com/2013/03/alex-king-on-the-maturity-of-wordpress/\">interview with me about WordPress&#8217;s maturity</a> is up on the WP Engine blog. It&#8217;s a bit of a long read (~4500 words), but <a href=\"http://www.austingunter.com/\">Austin</a> did a great job asking good questions and follow-ups. I quite enjoyed the discussion and I hope you&#8217;ll find it interesting.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 20 Mar 2013 21:26:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Weblog Tools Collection: WordPress Theme Releases for 3/19\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12792\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/yiyrwU_8gQQ/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1378:\"<p><a href=\"http://wordpress.org/extend/themes/cazuela\"><img class=\"alignnone size-thumbnail wp-image-12793\" alt=\"screenshot\" src=\"http://i2.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot4.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/cazuela\"><strong>Cazuela</strong></a> is a neutral colored theme.</p>\n<p><a href=\"http://wordpress.org/extend/themes/ilisa\"><img class=\"alignnone size-thumbnail wp-image-12795\" alt=\"screenshot-1\" src=\"http://i2.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/screenshot-14.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://wordpress.org/extend/themes/ilisa\"><strong>Ilisa</strong></a> is a clean and minimal theme that can be easily used as a personal portfolio or a business website.</p>\n<p><a href=\"http://emptynestthemes.com/2013/03/18/partition-professional-wordpress-theme/\"><img class=\"alignnone size-thumbnail wp-image-12794\" alt=\"DemoBlog\" src=\"http://i0.wp.com/weblogtoolscollection.com/wp-content/uploads/2013/03/DemoBlog3.png?resize=150%2C150\" /></a></p>\n<p><a href=\"http://emptynestthemes.com/2013/03/18/partition-professional-wordpress-theme/\"><strong>Partition</strong></a> has a light, lively, colorful, yet professional and classic appearance.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/yiyrwU_8gQQ\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 19 Mar 2013 14:00:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress.tv: Noah Dyer: Growth\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18187\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"http://wordpress.tv/2013/03/18/noah-dyer-growth/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:612:\"<div id=\"v-xvr1P7XJ-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18187/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18187/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18187&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/18/noah-dyer-growth/\"><img alt=\"Noah Dyer: Growth\" src=\"http://videos.videopress.com/xvr1P7XJ/video-c774cda819_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 18 Mar 2013 20:29:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"WordPress.tv: How to Install Jetpack Site Stats on your WordPress site\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=17936\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"http://wordpress.tv/2013/03/18/how-to-install-jetpack-site-stats-on-your-wordpress-site/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:664:\"<div id=\"v-0EUXgeTM-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/17936/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/17936/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=17936&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/18/how-to-install-jetpack-site-stats-on-your-wordpress-site/\"><img alt=\"WSC-001-jetpack-analitics.mov\" src=\"http://videos.videopress.com/0EUXgeTM/video-c95e94a6ba_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 18 Mar 2013 15:56:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"WordPress.tv Blog: Get Involved!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://wptvblog.wordpress.com/?p=291\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"http://wptvblog.wordpress.com/2013/03/18/get-involved/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1594:\"<p>WordPress.tv is now open for video submissions from the WordPress community.</p>\n<p>Do you record your WordPress meetup? <a href=\"http://wordpress.tv/submit-video/\">Submit it to WordPress.tv!</a> Do you record WordPress screencast tutorials? <a href=\"http://wordpress.tv/submit-video/\">Submit them to WordPress.tv!</a> Do you create some other form of WP video awesomesauce that would benefit the community? WordPress.tv might be just the place for it.</p>\n<p>Fair warning: Our intrepid group of WordPress.tv event video moderators already works hard to review and publish WordCamp videos, and if WordPress.tv is suddenly flooded with video submissions, they may take a while to get around to reviewing and publishing your video. Please be patient as we iterate toward success&#8230; and if you&#8217;re interested in donating your time toward becoming a WordPress.tv moderator, please apply <a href=\"http://wordpress.tv/apply-to-be-a-wordpress-tv-moderator/\">here</a>. If this takes off like we think it might, we will definitely need some extra eyes!</p>\n<p>Thanks in advance for helping to make WordPress.tv an even more fantastic resource. If you have questions about this, please don&#8217;t hesitate to ask.</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptvblog.wordpress.com/291/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptvblog.wordpress.com/291/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wptvblog.wordpress.com&blog=5310177&post=291&subd=wptvblog&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 18 Mar 2013 08:57:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Andrea Middleton\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Alex King: Announcing Threads\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://alexking.org/?p=16176\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"http://alexking.org/blog/2013/03/17/announcing-threads\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2417:\".threads-post-notice {\n	background: #e8e8e8;\n	padding: 10px;\n}\n.threads-post-notice a {\n	font-weight: bold;\n}\n\n<p><img src=\"http://alexking.org/wp-content/uploads/2013/03/threads-timeline-510x382.jpg\" alt=\"threads-timeline\" width=\"480\" height=\"359\" class=\"aligncenter size-medium-img wp-image-16181\" /></p>\n<p>I&#8217;ve just released an initial beta of <a href=\"http://wordpress.org/extend/plugins/threads/\">Threads</a>, a WordPress plugin I&#8217;ve been working on for about a year. The idea is simple: show posts that comprise a single overall story/topic in a timeline. Then link to that timeline from the posts so that your readers have a chance to get more historical context about a post without you having to link back to 20 previous posts.</p>\n<p>Here are some example threads:</p>\n<ul>\n<li><a href=\"http://alexking.org/blog/thread/social\">Social</a></li>\n<li><a href=\"http://alexking.org/blog/thread/hard-drive-recovery\">My Hard Drive Recovery Saga</a></li>\n<li><a href=\"http://alexking.org/blog/thread/twitter-tools\">Twitter Tools</a></li>\n<li><a href=\"http://alexking.org/blog/thread/passwords\">Passwords</a></li>\n<li><a href=\"http://alexking.org/blog/thread/weight-loss\">Weight Loss</a></li>\n</ul>\n<p>As you can see on this site, the thread timeline is responsive and retina/HiDPI ready. Also included is a sidebar widget to show recently active threads and a shortcode so that you can embed a thread timeline in a page.</p>\n<p>Give it a spin &#8211; I hope it works out well for you!</p>\n<p>A quick note about support: As this is a free plugin released under the GPL I am offering only &#8220;Product Support&#8221; for this plugin. That means I will do my best to fix bugs and usabiity issues that are posted on the <a href=\"http://wordpress.org/support/\">WordPress support forums</a>. Contrast this with &#8220;User Support&#8221; which we offer for all of <a href=\"http://crowdfavorite.com\">Crowd Favorite</a>&#8216;s commercial products. With &#8220;User Support&#8221; we do our best to troubleshoot and address each customer&#8217;s issues.</p>\n<p>Developers, contributions are welcome on <a href=\"https://github.com/crowdfavorite/wp-threads\">GitHub</a>.</p>\n<p class=\"threads-post-notice\">This post is part of the thread: <a href=\"http://alexking.org/blog/thread/content\">Content Presentation</a> &#8211; an ongoing story on this site. View the thread timeline for more context on this post.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 17 Mar 2013 21:35:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Weblog Tools Collection: WordPress Plugin Releases for 3/17\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://weblogtoolscollection.com/?p=12787\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://feedproxy.google.com/~r/weblogtoolscollection/UXMP/~3/iCzrsWmhJSE/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1168:\"<h3>New plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/barc-chat/\"><strong>Barc Chat</strong></a> provides a simple yet feature rich chat room for your whole community to interact in real-time directly on your site.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/get-directions/\"><strong>Get Directions</strong></a> is a flexible and responsive map plugin.</p>\n<p><a href=\"http://namaste-lms.org/\"><strong>Namaste! LMS</strong></a> is a learning management system for WordPress.</p>\n<p><a href=\"http://tutskid.com/pinterest-verify-meta-tag/\"><strong>Pinterest Verify Meta Tag</strong></a> simply inserts the Pinterest meta tag verification code to the correct section of your site.</p>\n<h3>Updated plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/backwpup/\"><strong>BackWPup</strong></a> allows you to backup your WordPress database, files, and more.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/ooyala-video-browser/\"><strong>Ooyala Video</strong></a> allows you to easily embed videos from the Ooyala Video Platform.</p>\n<img src=\"http://feeds.feedburner.com/~r/weblogtoolscollection/UXMP/~4/iCzrsWmhJSE\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 17 Mar 2013 14:00:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"James\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"WordPress.tv: Make Quick Posts to Your WordPress Blog with Press This\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=17934\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"http://wordpress.tv/2013/03/17/make-quick-posts-to-your-wordpress-blog-with-press-this/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:653:\"<div id=\"v-zbaXcN4P-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/17934/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/17934/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=17934&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/17/make-quick-posts-to-your-wordpress-blog-with-press-this/\"><img alt=\"PressThis.mov\" src=\"http://videos.videopress.com/zbaXcN4P/video-b1ff756587_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 17 Mar 2013 07:00:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"WordPress.tv: Chris Lema: Success in Distributed Contexts\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wordpress.tv/?p=18183\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"http://wordpress.tv/2013/03/17/chris-lema-success-in-distributed-contexts/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:670:\"<div id=\"v-1oRdV9R4-1\" class=\"video-player\">\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18183/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18183/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18183&subd=wptv&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://wordpress.tv/2013/03/17/chris-lema-success-in-distributed-contexts/\"><img alt=\"Chris Lema: Success in Distributed Contexts\" src=\"http://videos.videopress.com/1oRdV9R4/video-fd51521a82_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 17 Mar 2013 07:00:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"WordPress.tv\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:9:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 16 Apr 2013 01:10:00 GMT\";s:12:\"content-type\";s:8:\"text/xml\";s:14:\"content-length\";s:6:\"112799\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Tue, 16 Apr 2013 00:45:32 GMT\";s:4:\"x-nc\";s:11:\"HIT luv 139\";s:13:\"accept-ranges\";s:5:\"bytes\";}s:5:\"build\";s:14:\"20111015034325\";}','no'),(1839,'_transient_dash_20494a3d90a6669585674ed0eb8dcd8f','<p>This dashboard widget queries <a href=\"http://blogsearch.google.com/\">Google Blog Search</a> so that when another blog links to your site it will show up here. It has found no incoming links&hellip; yet. It&#8217;s okay &#8212; there is no rush.</p>\n','no'),(1855,'_transient_feed_mod_a5420c83891a9c88ad2a4f04584a5efc','1366074601','no'),(1852,'_transient_timeout_feed_a5420c83891a9c88ad2a4f04584a5efc','1366117801','no'),(1853,'_transient_feed_a5420c83891a9c88ad2a4f04584a5efc','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:72:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins » View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"http://wordpress.org/extend/plugins/browse/popular/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins » View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Apr 2013 00:52:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Contact Form 7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://wordpress.org/extend/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"2141@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"WordPress SEO by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/extend/plugins/wordpress-seo/#post-8321\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Jan 2009 20:34:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"8321@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using the WordPress SEO plugin by Yoast.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Jetpack by WordPress.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/extend/plugins/jetpack/#post-23862\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Jan 2011 02:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"23862@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"Supercharge your WordPress site with powerful features previously only available to WordPress.com users.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Michael Adams (mdawaffe)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WordPress Importer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/extend/plugins/wordpress-importer/#post-18101\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 17:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18101@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Brian Colinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WP Super Cache\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://wordpress.org/extend/plugins/wp-super-cache/#post-2572\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Nov 2007 11:40:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"2572@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"A very fast caching engine for WordPress that produces static html files.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Donncha O Caoimh\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Google Analytics for WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://wordpress.org/extend/plugins/google-analytics-for-wordpress/#post-2316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2007 12:15:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"2316@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:145:\"Track your WordPress site easily and with lots of metadata: views per author &#38; category, automatic tracking of outbound clicks and pageviews.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Akismet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"http://wordpress.org/extend/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"15@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Google XML Sitemaps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"http://wordpress.org/extend/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"132@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"arnee\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Social Media Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/extend/plugins/social-media-widget/#post-18183\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 02:22:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18183@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:129:\"Adds links to all of your social media and sharing site profiles. Tons of icons come in 3 sizes, 4 icon styles, and 4 animations.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Blink Web Effects\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"All in One SEO Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"753@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:86:\"WordPress SEO plugin to automatically optimize your Wordpress blog for Search Engines.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Ultimate TinyMCE\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/extend/plugins/ultimate-tinymce/#post-32088\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 14 Nov 2011 09:06:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"32088@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"Description: Beef up your visual tinymce editor with a plethora of advanced options.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Josh\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WooCommerce - excelling eCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/extend/plugins/woocommerce/#post-29860\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Sep 2011 08:13:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"29860@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"WooThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"NextGEN Gallery\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/nextgen-gallery/#post-1169\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 23 Apr 2007 20:08:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"1169@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:120:\"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 6 million downloads.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Alex Rabe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Better WP Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/extend/plugins/better-wp-security/#post-21738\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 22 Oct 2010 22:06:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"21738@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"The easiest, most effective way to secure WordPress. Improve the security of any WordPress site in seconds.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"ChrisWiegman\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Advanced Custom Fields\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"http://wordpress.org/extend/plugins/advanced-custom-fields/#post-25254\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 17 Mar 2011 04:07:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"25254@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"Fully customise WordPress edit screens with powerful fields. Boasting a professional interface and a powerfull API, it’s a must have for any web dev\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"elliotcondon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:52:\"http://wordpress.org/extend/plugins/rss/view/popular\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:10:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 16 Apr 2013 01:10:01 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:7:\"expires\";s:29:\"Tue, 16 Apr 2013 01:27:30 GMT\";s:13:\"cache-control\";s:0:\"\";s:6:\"pragma\";s:0:\"\";s:13:\"last-modified\";s:31:\"Tue, 16 Apr 2013 00:52:30 +0000\";s:4:\"x-nc\";s:11:\"HIT luv 138\";}s:5:\"build\";s:14:\"20111015034325\";}','no'),(1856,'_transient_timeout_feed_57bc725ad6568758915363af670fd8bc','1366117801','no'),(1857,'_transient_feed_57bc725ad6568758915363af670fd8bc','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:72:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress Plugins » View: Newest\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://wordpress.org/extend/plugins/browse/new/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress Plugins » View: Newest\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Apr 2013 01:01:02 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Zxcvbn\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"http://wordpress.org/extend/plugins/zxcvbn/#post-52087\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Apr 2013 22:13:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52087@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"A Better Password Strength indicator\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Samuel Wood (Otto)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WP Advanced Sticky\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/extend/plugins/wp-advanced-sticky/#post-52021\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 14 Apr 2013 14:02:01 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52021@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:138:\"Permet de mettre en avant un article. Actuellement, une seule présentation disponible mais à venir plusieurs thèmes seront disponibles.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"devock\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Comic Rocket Ad Network Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://wordpress.org/extend/plugins/comic-rocket-ad-network-widget/#post-52072\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Apr 2013 21:02:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52072@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"Easily include Comic Rocket&#039;s network ad box on your webcomic!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"comic-rocket\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"WPKeyMe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/extend/plugins/wpkeyme/#post-50963\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 20 Mar 2013 17:05:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"50963@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:187:\"This plugin allows you to require a secret key that is passed via the URL: <a href=\"http://example.com/post-title/?key=string\" rel=\"nofollow\">http://example.com/post-title/?key=string</a>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:23:\"Aubrey Portwood (hauxh)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Async Vid List\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/async-vid-list/#post-51951\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 17:00:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"51951@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"Lets the user create lists of video embeds that load and play asynchronously in one div\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Thoog_10\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Yahoo! Status Checker\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/extend/plugins/yahoo-status-checker/#post-51985\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 13 Apr 2013 17:46:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"51985@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"Yahoo! Status Checker by Techya.Check any yahoo id to see if he is online or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"codersempire\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Envato Items\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/extend/plugins/envato-items/#post-52049\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Apr 2013 09:22:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52049@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Display your Envato portfolio inside a post or a page.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Ciprian Popescu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Alert Me!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/extend/plugins/alert-me/#post-52045\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Apr 2013 05:44:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52045@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"Alert me with a nice message! Just like that!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Ciprian Popescu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"CsViewer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wordpress.org/extend/plugins/counter-strike-server-viewer/#post-52013\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 14 Apr 2013 09:43:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52013@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"With these Plugin you can display your Counter Strike Server information on your Wordpress-Hompage.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Reto Arnold\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"EasterWebs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"http://wordpress.org/extend/plugins/easterwebs/#post-51651\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 06 Apr 2013 10:21:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"51651@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"Easily add an easter egg hunt to your site. Easy, simple and fun.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"easterwebs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"cool Popular Post\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/cool-popular-post/#post-52011\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 14 Apr 2013 07:03:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52011@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"A very easy to use WordPress function to add popular posts to any WordPress theme.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"culplarry\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"wpCRES (Essay Wizard)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/extend/plugins/essay-wizard-wpcres/#post-51801\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Apr 2013 18:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"51801@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"An open-source WordPress plugin enabling student-led editing of written work.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"wrenchpilot\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"6toyz\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"http://wordpress.org/extend/plugins/6toyz/#post-51944\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 12:25:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"51944@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Affiliation 6toyz\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"roxmedia\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Evolution Twitter Timeline\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"http://wordpress.org/extend/plugins/evolution-twitter-timeline/#post-52024\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 14 Apr 2013 16:40:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"52024@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"Creates a new and simple to use widget that outputs the awesome Twitter Embedded Timeline.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"AndreasHecht\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Twitter Themes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/twitter-themes/#post-51948\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Apr 2013 15:30:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"51948@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:145:\"Show an animation of the timeline of a Twitter account. Add a system template that allows you to customize the plugin with your own theme easily.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"PoseLab\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:48:\"http://wordpress.org/extend/plugins/rss/view/new\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:7:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 16 Apr 2013 01:10:01 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Mon, 15 Apr 2013 22:13:53 GMT\";s:4:\"x-nc\";s:11:\"HIT luv 138\";}s:5:\"build\";s:14:\"20111015034325\";}','no'),(1824,'login-security-solution-options','a:16:{s:11:\"admin_email\";s:28:\"jorge.silva.jetter@gmail.com\";s:23:\"deactivate_deletes_data\";s:1:\"1\";s:14:\"disable_logins\";s:1:\"0\";s:12:\"idle_timeout\";s:2:\"15\";s:18:\"login_fail_minutes\";s:3:\"120\";s:17:\"login_fail_tier_2\";s:1:\"5\";s:17:\"login_fail_tier_3\";s:2:\"10\";s:17:\"login_fail_notify\";s:2:\"50\";s:26:\"login_fail_notify_multiple\";s:1:\"1\";s:24:\"login_fail_breach_notify\";s:1:\"6\";s:33:\"login_fail_breach_pw_force_change\";s:1:\"6\";s:14:\"pw_change_days\";s:1:\"0\";s:30:\"pw_change_grace_period_minutes\";s:2:\"15\";s:30:\"pw_complexity_exemption_length\";s:2:\"20\";s:9:\"pw_length\";s:2:\"10\";s:14:\"pw_reuse_count\";s:1:\"0\";}','yes'),(1825,'login-security-solution-pw-force-change-done','1','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM AUTO_INCREMENT=616 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` (`meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES (1,2,'_wp_page_template','default'),(5,5,'_edit_lock','1346362123:1'),(4,5,'_edit_last','1'),(206,5,'_oembed_c434f4c5755e6de49e3c32e414752173','{{unknown}}'),(205,5,'_oembed_dc10002dd7341f0e733fcfde86f9e81f','{{unknown}}'),(19,9,'_edit_last','1'),(20,9,'_edit_lock','1346362118:1'),(23,9,'enclosure','http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\r\n30363177\r\nvideo/quicktime\r\n'),(24,12,'_edit_last','1'),(45,23,'_edit_lock','1346362084:1'),(27,12,'_edit_lock','1346362089:1'),(44,23,'_edit_last','1'),(65,2,'_edit_lock','1345682879:1'),(53,23,'dsq_thread_id','814964644'),(66,33,'_wp_attached_file','2012/08/Processing-Syllabus.pdf'),(67,33,'_wp_attachment_metadata','a:0:{}'),(68,2,'_edit_last','1'),(70,2,'dsq_thread_id',''),(72,12,'dsq_thread_id','815105736'),(95,43,'_edit_last','1'),(85,5,'dsq_thread_id','816169157'),(96,43,'_edit_lock','1346362077:1'),(102,43,'dsq_thread_id','820746112'),(139,60,'_wp_page_template','default'),(140,60,'_edit_lock','1346181560:1'),(138,60,'_edit_last','1'),(147,65,'_edit_last','1'),(143,9,'dsq_thread_id',''),(148,65,'_wp_page_template','default'),(149,65,'_edit_lock','1346181710:1'),(531,197,'_edit_lock','1349557033:1'),(530,197,'_edit_last','1'),(173,65,'_oembed_dc10002dd7341f0e733fcfde86f9e81f','{{unknown}}'),(542,197,'dsq_thread_id','873094439'),(181,77,'_edit_lock','1346362071:1'),(174,65,'_oembed_c434f4c5755e6de49e3c32e414752173','{{unknown}}'),(175,65,'_oembed_31a75be550dc8bade76ec803a749d866','{{unknown}}'),(180,77,'_edit_last','1'),(185,79,'_edit_lock','1346362065:1'),(184,79,'_edit_last','1'),(208,79,'dsq_thread_id','824781186'),(207,5,'_oembed_31a75be550dc8bade76ec803a749d866','{{unknown}}'),(252,107,'_edit_last','1'),(257,107,'dsq_thread_id','827159886'),(237,77,'dsq_thread_id','827117161'),(255,107,'_edit_lock','1347832488:1'),(524,192,'_edit_last','1'),(541,192,'dsq_thread_id','873094478'),(525,192,'_edit_lock','1349557057:1'),(281,116,'_edit_lock','1346778147:1'),(280,116,'_edit_last','1'),(291,116,'dsq_thread_id','830745434'),(302,123,'_edit_lock','1346812206:1'),(301,123,'_edit_last','1'),(308,123,'dsq_thread_id','831834958'),(317,125,'_edit_lock','1347129817:1'),(316,125,'_edit_last','1'),(318,126,'_wp_attached_file','2012/09/photoExample.zip'),(319,126,'_wp_attachment_metadata','a:0:{}'),(321,130,'_wp_attached_file','2012/09/photoExample-2.zip'),(322,130,'_wp_attachment_metadata','a:0:{}'),(326,134,'_edit_lock','1347149472:1'),(325,134,'_edit_last','1'),(327,136,'_wp_attached_file','2012/09/soundExample.zip'),(328,136,'_wp_attachment_metadata','a:0:{}'),(336,125,'dsq_thread_id','836215451'),(335,134,'dsq_thread_id','836214919'),(347,148,'_edit_lock','1347568043:1'),(346,148,'_edit_last','1'),(348,149,'_wp_attached_file','2012/09/video.zip'),(349,149,'_wp_attachment_metadata','a:0:{}'),(373,160,'_edit_lock','1347560803:1'),(372,160,'_edit_last','1'),(377,162,'_edit_lock','1347387563:1'),(376,162,'_edit_last','1'),(391,148,'dsq_thread_id','840077748'),(394,160,'dsq_thread_id','840088422'),(395,162,'dsq_thread_id','840088610'),(458,180,'_edit_last','1'),(441,174,'_edit_last','1'),(442,174,'_edit_lock','1349557823:1'),(456,174,'dsq_thread_id','848589239'),(459,180,'_edit_lock','1347993600:1'),(470,180,'dsq_thread_id','849525469');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=MyISAM AUTO_INCREMENT=211 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES (2,1,'2012-08-22 17:15:29','2012-08-22 17:15:29','Here is the class syllabus.\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/08/Processing-Syllabus.pdf\">Processing Course Syllabus - Fall 2012</a>','Class Syllabus','','publish','open','closed','','class-syllabus','','','2012-08-23 00:47:59','2012-08-23 00:47:59','',0,'http://thejsj.com/processing/?page_id=2',0,'page','',0),(35,1,'2012-08-23 00:44:33','2012-08-23 00:44:33','Here is the class syllabus.\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/08/Processing-Syllabus.pdf\">Processing Syllabus</a>','Class Syllabus','','inherit','open','open','','2-revision-2','','','2012-08-23 00:44:33','2012-08-23 00:44:33','',2,'http://thejsj.com/processing/?p=35',0,'revision','',0),(36,1,'2012-08-23 00:44:59','2012-08-23 00:44:59','Here is the class syllabus.\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/08/Processing-Syllabus.pdf\">Processing Course Syllabus - Fall 2012</a>','Class Syllabus','','inherit','open','open','','2-revision-3','','','2012-08-23 00:44:59','2012-08-23 00:44:59','',2,'http://thejsj.com/processing/?p=36',0,'revision','',0),(37,1,'2012-08-23 00:46:11','2012-08-23 00:46:11','Here is the class syllabus.\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/08/Processing-Syllabus.pdf\">Processing Course Syllabus - Fall 2012</a>','Class Syllabus','','inherit','open','open','','2-autosave','','','2012-08-23 00:46:11','2012-08-23 00:46:11','',2,'http://thejsj.com/processing/?p=37',0,'revision','',0),(5,1,'2012-08-22 17:41:26','2012-08-22 17:41:26','<h2>Websites:</h2>\r\nhttp://processing.org/\r\n\r\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\r\n<h2>Books on Learning Processing:</h2>\r\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\r\n\r\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\r\n\r\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\r\n<h2>Websites with Work done on Processing:</h2>\r\nhttp://processing.org/exhibition/\r\n\r\nhttp://www.creativeapplications.net/\r\n<h2>Books with Work done with Processing:</h2>\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\r\n\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\r\n\r\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\r\n\r\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art </a>','Recommended Resources for Processing','','publish','open','open','','recommended-resources-about-processing','','','2012-08-30 21:28:42','2012-08-30 21:28:42','',0,'http://thejsj.com/processing/?p=5',0,'post','',0),(6,1,'2012-08-22 17:41:06','2012-08-22 17:41:06','<h3>Websites:</h3>\nhttp://processing.org/\n\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\n<h2>Books on Learning Processing:</h2>\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\n\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\n\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\n<h2>Websites with Work done on Processing:</h2>\nhttp://processing.org/exhibition/\n\nhttp://www.creativeapplications.net/\n<h2>Books with Work done with Processing:</h2>\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\n\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\n\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\n\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art</a>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','Recommended Resources About Processing','','inherit','open','open','','5-revision','','','2012-08-22 17:41:06','2012-08-22 17:41:06','',5,'http://thejsj.com/processing/?p=6',0,'revision','',0),(9,1,'2012-08-22 18:17:22','2012-08-22 18:17:22','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" frameborder=\"0\" width=\"800\" height=\"450\"></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.','Sample Work Realized With Processing','','publish','open','open','','sample-work-realized-with-proccessing','','','2012-08-30 21:28:37','2012-08-30 21:28:37','',0,'http://thejsj.com/processing/?p=9',0,'post','',0),(8,1,'2012-08-22 17:41:26','2012-08-22 17:41:26','<h2>Websites:</h2>\r\nhttp://processing.org/\r\n\r\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\r\n<h2>Books on Learning Processing:</h2>\r\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\r\n\r\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\r\n\r\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\r\n<h2>Websites with Work done on Processing:</h2>\r\nhttp://processing.org/exhibition/\r\n\r\nhttp://www.creativeapplications.net/\r\n<h2>Books with Work done with Processing:</h2>\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\r\n\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\r\n\r\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\r\n\r\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Recommended Resources About Processing','','inherit','open','open','','5-revision-2','','','2012-08-22 17:41:26','2012-08-22 17:41:26','',5,'http://thejsj.com/processing/?p=8',0,'revision','',0),(10,1,'2012-08-22 17:43:23','2012-08-22 17:43:23','','Auto Draft','','inherit','open','open','','9-revision','','','2012-08-22 17:43:23','2012-08-22 17:43:23','',9,'http://thejsj.com/processing/?p=10',0,'revision','',0),(11,1,'2012-08-22 18:15:37','2012-08-22 18:15:37','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\n\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\n<div id=\"header\">\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\n</div>\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\n\n3. Process Compendium - Casey Reas\n\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\n\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\n\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\n\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\n\n4. White Glove Tracking -\n\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\n\n5. Strata #3 - Quayola\n\n&nbsp;<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" width=\"400\" height=\"300\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>\n\n6. Solar Rework - Robert Hodgin\n\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" width=\"800\" height=\"450\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>\n\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" width=\"500\" height=\"281\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>','Sample Work Realized With Proccessing','','inherit','open','open','','9-revision-2','','','2012-08-22 18:15:37','2012-08-22 18:15:37','',9,'http://thejsj.com/processing/?p=11',0,'revision','',0),(63,1,'2012-08-28 19:19:51','2012-08-28 19:19:51','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" frameborder=\"0\" width=\"800\" height=\"450\"></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.','Sample Work Realized With Proccessing','','inherit','open','open','','60-revision-2','','','2012-08-28 19:19:51','2012-08-28 19:19:51','',60,'http://thejsj.com/processing/2012/08/28/60-revision-2/',0,'revision','',0),(12,1,'2012-08-22 18:20:39','2012-08-22 18:20:39','1. Setting Up Processing:\r\n<ol>\r\n	<li>Go to <a href=\"http://processing.org/download/\">http://processing.org/download/</a></li>\r\n	<li>Download the Software</li>\r\n	<li>If on a Mac, put it on your Applications folder</li>\r\n	<li>Choose a Folder where ALL of your sketches (Processing scripts) will be. It is good practice to have them all in the same place, for simplicity and for using Processing libraries.</li>\r\n	<li> Once you choose your sketches folder, go to (on a Mac) Processing -&gt; Preferences  and set this folder as your \"Sketchbook Location\". Again, keep all your sketches in the same place. If you want to do some slight changes on a sketch do a \"Save As\" and change it\'s name.</li>\r\n</ol>\r\n<div>2. Setting Up GitHub</div>\r\n<div>\r\n<ol>\r\n	<li>Go to <a href=\"https://github.com/\">https://github.com/</a> and create your account (you\'re smart, you can do this by yourself).</li>\r\n	<li>Download the GitHub Client (program) for Mac or PC and set up your account accordingly.</li>\r\n	<li>Every time you create a new Sketch on GitHub add as a project... or just have one project on GitHub with all your sketches.</li>\r\n</ol>\r\n</div>\r\n&nbsp;','Class #1.1 - Downloading and Installing Processing / GitHub','','publish','open','open','','12','','','2012-08-30 21:28:09','2012-08-30 21:28:09','',0,'http://thejsj.com/processing/?p=12',0,'post','',0),(13,1,'2012-08-22 18:20:07','2012-08-22 18:20:07','','Auto Draft','','inherit','open','open','','12-revision','','','2012-08-22 18:20:07','2012-08-22 18:20:07','',12,'http://thejsj.com/processing/?p=13',0,'revision','',0),(15,1,'2012-08-22 18:21:20','2012-08-22 18:21:20','<code>\r\n</code>\r\n<div class=\"entry\">\r\n\r\nHere are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\"></div>\r\n</div>','','','inherit','open','open','','12-revision-3','','','2012-08-22 18:21:20','2012-08-22 18:21:20','',12,'http://thejsj.com/processing/?p=15',0,'revision','',0),(16,1,'2012-08-22 18:24:18','2012-08-22 18:24:18','<code>\r\nvoid setup() {\r\n  frameRate(9999);\r\n  size(900,800);\r\n    background(0);\r\n  // Parameters go inside the parentheses when the object is constructed.\r\n  myCar1 = new Car( 0 - (width * 10), width/2 - 136, 0, width/2); \r\n  myCar2 = new Car(  width + (width * 10), width -64, 0, width/2);\r\n  smooth();\r\n}\r\n</code>','','','inherit','open','open','','12-revision-4','','','2012-08-22 18:24:18','2012-08-22 18:24:18','',12,'http://thejsj.com/processing/?p=16',0,'revision','',0),(14,1,'2012-08-22 18:20:39','2012-08-22 18:20:39','<table>\r\n<tbody>\r\n<tr>\r\n<td>&lt;div class=\"entry\"&gt;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>&lt;p&gt;Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.&lt;/p&gt;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>&lt;p&gt;1. unnamed soundsculpture - &lt;a id=\"top\" href=\"<a href=\"http://wearechopchop.com/\" target=\"_blank\">http://wearechopchop.com/</a>\"&gt;We Are Chopchop&lt;/a&gt;&lt;/p&gt;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>&lt;div id=\"header\"&gt;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>&lt;div&gt; &lt;iframe src=\"<a href=\"http://player.vimeo.com/video/38840688?title=0&amp;amp;byline=0&amp;amp;portrait=0&amp;amp;color=ffffff\" target=\"_blank\">http://player.vimeo.com/video/38840688?title=0&amp;amp;byline=0&amp;amp;portrait=0&amp;amp;color=ffffff</a>\" frameborder=\"0\" width=\"400\" height=\"300\"&gt;&lt;/iframe&gt;&lt;/div&gt;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>&lt;/div&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>','','','inherit','open','open','','12-revision-2','','','2012-08-22 18:20:39','2012-08-22 18:20:39','',12,'http://thejsj.com/processing/?p=14',0,'revision','',0),(17,1,'2012-08-22 19:07:33','2012-08-22 19:07:33','1. Setting Up Processing:\n<ol>\n	<li>Go to <a href=\"http://processing.org/download/\">http://processing.org/download/</a></li>\n	<li>Download the Software</li>\n	<li>If on a Mac, put it on your Applications folder</li>\n	<li>Choose a Folder where ALL of your sketches (Processing scripts) will be. It is good practice to have them all in the same place, for simplicity and for using Processing libraries.</li>\n	<li> Once you choose your sketches folder, go to (on a Mac) Processing -&gt; Preferences  and set this folder as your \"Sketchbook Location\". Again, keep all your sketches in the same place. If you want to do some slight changes on a sketch do a \"Save As\" and change it\'s name.</li>\n</ol>\n<div>2. Setting Up GitHub</div>\n<div>\n<ol>\n	<li>Go to <a href=\"https://github.com/\">https://github.com/</a> and create your account (you\'re smart, you can do this by yourself).</li>\n	<li>Download the GitHub Client (program) for Mac or PC and set up your account accordingly.</li>\n	<li>Every time you create a new Sketch on GitHub add as a project... or just have one project on GitHub with all</li>\n</ol>\n</div>\n&nbsp;','Class #1.1 - Downloading and Installing Processing / GitHub','','inherit','open','open','','12-autosave','','','2012-08-22 19:07:33','2012-08-22 19:07:33','',12,'http://thejsj.com/processing/?p=17',0,'revision','',0),(18,1,'2012-08-22 18:28:37','2012-08-22 18:28:37','<code>\r\nvoid setup() {\r\n  frameRate(9999);\r\n  size(900,800);\r\n    background(0);\r\n  // Parameters go inside the parentheses when the object is constructed.\r\n  myCar1 = new Car( 0 - (width * 10), width/2 - 136, 0, width/2); \r\n  myCar2 = new Car(  width + (width * 10), width -64, 0, width/2);\r\n  smooth();\r\n}\r\n</code>\r\n\r\n<code>\r\npublic class HelloWorld {\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, World\");\r\n    }\r\n\r\n}\r\n\r\n</code>','','','inherit','open','open','','12-revision-5','','','2012-08-22 18:28:37','2012-08-22 18:28:37','',12,'http://thejsj.com/processing/?p=18',0,'revision','',0),(21,1,'2012-08-22 18:46:15','2012-08-22 18:46:15','[cc lang=\"java\"]\r\nvoid setup() { frameRate(9999); size(900,800); background(0); // Parameters go inside the parentheses when the object is constructed. myCar1 = new Car( 0 - (width * 10), width/2 - 136, 0, width/2); myCar2 = new Car( width + (width * 10), width -64, 0, width/2); smooth(); }\r\n[/cc]\r\n[cc lang=\"java\"]\r\npublic class HelloWorld {\r\n\r\npublic static void main(String[] args) {\r\nSystem.out.println(\"Hello, World\");\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n','CC Test','','inherit','open','open','','12-revision-8','','','2012-08-22 18:46:15','2012-08-22 18:46:15','',12,'http://thejsj.com/processing/?p=21',0,'revision','',0),(19,1,'2012-08-22 18:45:01','2012-08-22 18:45:01','<pre><code>[cc lang=\"java\"]</code></pre>\r\n<pre><code>void setup() {\r\nframeRate(9999);\r\nsize(900,800);\r\nbackground(0);\r\n// Parameters go inside the parentheses when the object is constructed.\r\nmyCar1 = new Car( 0 - (width * 10), width/2 - 136, 0, width/2);\r\nmyCar2 = new Car( width + (width * 10), width -64, 0, width/2);\r\nsmooth();\r\n}</code></pre>\r\n<pre><code>[/cc]</code></pre>\r\n<pre><code>[cc lang=\"java\"]</code></pre>\r\npublic class HelloWorld {\r\n\r\npublic static void main(String[] args) {\r\nSystem.out.println(\"Hello, World\");\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','','','inherit','open','open','','12-revision-6','','','2012-08-22 18:45:01','2012-08-22 18:45:01','',12,'http://thejsj.com/processing/?p=19',0,'revision','',0),(20,1,'2012-08-22 18:45:28','2012-08-22 18:45:28','<pre><code>[cc lang=\"java\"]</code></pre>\r\n<pre><code>void setup() { frameRate(9999); size(900,800); background(0); // Parameters go inside the parentheses when the object is constructed. myCar1 = new Car( 0 - (width * 10), width/2 - 136, 0, width/2); myCar2 = new Car( width + (width * 10), width -64, 0, width/2); smooth(); }</code></pre>\r\n<pre><code>[/cc]</code></pre>\r\n<pre><code>[cc lang=\"java\"]</code></pre>\r\npublic class HelloWorld {\r\n\r\npublic static void main(String[] args) {\r\nSystem.out.println(\"Hello, World\");\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','','','inherit','open','open','','12-revision-7','','','2012-08-22 18:45:28','2012-08-22 18:45:28','',12,'http://thejsj.com/processing/?p=20',0,'revision','',0),(22,1,'2012-08-22 18:47:31','2012-08-22 18:47:31','[cc lang=\"java\"]\r\nvoid setup() { \r\nframeRate(9999); \r\nsize(900,800); \r\nbackground(0); \r\n// Parameters go inside the parentheses when the object is constructed. \r\nmyCar1 = new Car( 0 - (width * 10), width/2 - 136, 0, width/2); \r\nmyCar2 = new Car( width + (width * 10), width -64, 0, width/2); \r\nsmooth(); \r\n}\r\n[/cc]\r\n[cc lang=\"java\"]\r\npublic class HelloWorld {\r\n\r\npublic static void main(String[] args) {\r\nSystem.out.println(\"Hello, World\");\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n','CC Test','','inherit','open','open','','12-revision-9','','','2012-08-22 18:47:31','2012-08-22 18:47:31','',12,'http://thejsj.com/processing/?p=22',0,'revision','',0),(23,1,'2012-08-22 19:18:30','2012-08-22 19:18:30','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n7. Looping\r\n\r\nIf you would like the piece to reLoop, you might want to do something like this\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint frame = 0;\r\n\r\nvoid draw(){\r\n\r\nframe++;\r\n\r\nif(frame == (height/2)){\r\nframe = 0;\r\n}\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\nint wdth = frame * 2;\r\n\r\nint hght = frame * 2;\r\n\r\n[/cc]\r\n\r\n7. Quick, the class is about to start! Another example!\r\n\r\nYes, there\'s 10 minutes left for class and I want to show you one last example. This one using a \"for\" statement or what is typically called a loop.\r\n\r\nThere are actually two loops here: the how big int that increases every draw() and the for loop inside the \"for\" statement that draws multiple circles at differente x positions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i < 10; i++){\r\n\r\narc(i * howBig, height/2, i * howBig, i * howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','publish','open','open','','class-1-2-basic-geometry-and-animation-in-processing','','','2012-08-30 21:28:03','2012-08-30 21:28:03','',0,'http://thejsj.com/processing/?p=23',0,'post','',0),(24,1,'2012-08-22 19:17:48','2012-08-22 19:17:48','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\n\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\n\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\n\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(1200, 900);\n\nbackground(255,253, 245);\n\nframeRate(60);\n\n}\n\n[/cc]\n\n3. Now, let\'s draw something. Ho','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision','','','2012-08-22 19:17:48','2012-08-22 19:17:48','',23,'http://thejsj.com/processing/?p=24',0,'revision','',0),(25,1,'2012-08-24 18:08:04','2012-08-24 18:08:04','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\n\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\n\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\n\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(1200, 900);\n\nbackground(255,253, 245);\n\nframeRate(60);\n\n}\n\nvoid draw(){\n\n//This will output the number of the current frame in the sketch\nprintln(frameCount);\n}\n\n[/cc]\n\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\n\n[cc lang=\"processing\"]\n\nvoid draw(){\n\nrect(10,10,200,200);\n\nline(0,0,width, height);\n\npoint(width/2, height/2);\n\narc(0,0,300,300, 0, PI*2);\n\n//This will \"Print\" something in the console, for what is called \"debugging\"\n\nprintln(width +\" / \" + height);\n\n}\n\n[/cc]\n\n4. Now you can add some color (fill) and border (stroke) to your geometry.\n\n[cc lang=\"processing\"]\n\nvoid draw(){\n\nstroke(0,255,0);\n\nstrokeWeight(5);\n\nfill(0);\n\nrect(10,10,200,200);\n\nfill(255,0,0);\n\nline(0,0,width, height);\n\npoint(width/2, height/2);\n\nfill(0,0,255);\n\nnoStroke(); //This makes sure that there is no stroke on any object\n\narc(width,height,300,300, 0, PI*2);\n\nprintln(width +\" / \" + height);\n\n}\n\n[/cc]\n\nSo:\n<ul>\n	<li>Fill set the color of the object in RGB</li>\n	<li>noFill() makes the inside of the object be transparent</li>\n	<li>Stroke sets the border of the object in RGB</li>\n	<li>noStroke() remove all borders from the object</li>\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\n</ul>\n5. Intrdocing Variables\n\nThere are 4 main types of variables (for now):\n<ul>\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\n</ul>\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\n[cc lang=\"processing\"]\n\nvoid draw(){\n\nint wdth = 400;\n\nint hght = 400;\n\nstroke(0,255,0);\n\nstrokeWeight(5);\n\nfill(0);\n\nrect(wdth,hght,wdth,hght);\n\nfill(255,0,0);\n\nline(wdth,hght,width, height);\n\npoint(width/2, height/2);\n\nfill(0,0,255);\n\nnoStroke();\n\narc(wdth,hght,wdth,hght, 0, PI*2);\n\nprintln(wdth +\" / \" + hght);\n\nfill(100);\n\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\n\n}\n\n[/cc]\n\n6. Now we can make this a little more interesting! How about we get thing moving.\n\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\n\n[cc lang=\"processing\"]\n\nvoid draw(){\n\nint wdth = frameCount * 2;\n\nint hght = frameCount * 2;\n\nstroke(0,255,0);\n\nstrokeWeight(5);\n\nfill(0);\n\nrect(wdth,hght,wdth,hght);\n\nfill(255,0,0);\n\nline(wdth,hght,width, height);\n\npoint(width/2, height/2);\n\nfill(0,0,255);\n\nnoStroke();\n\narc(wdth,hght,wdth,hght, 0, PI*2);\n\nprintln(wdth +\" / \" + hght);\n\nfill(100);\n\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\n\n}\n\n[/cc]\n\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\n\n[cc lang=\"processing\"]\n\n//After void draw() ...\n\nfill(0, 1);\n\nrect(0,0, width, height);\n\n[/cc]\n\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\n\n7. Looping\n\nIf you would like the piece to reLoop, you might want to do something like this\n\n[cc lang=\"processing\"]\n\nint frame = 0;\n\nvoid draw(){\n\nframe++;\n\nif(frame == (height/2)){\nframe = 0;\n}\n\nfill(0, 1);\n\nrect(0,0, width, height);\n\nint wdth = frame * 2;\n\nint hght = frame * 2;\n\n[/cc]\n\n7. Quick, the class is about to start! Another example!\n\nYes, there\'s 10 minutes left for class and I want to show you one last example. This one using a \"for\" statement or what is typically called a loop.\n\nThere are actually two loops here: the how big int that increases every draw() and the for loop inside the \"for\" statement that draws multiple circles at differente x positions.\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(1000,1000);\n\nbackground(0);\n\n}\n\nint howBig = 0;\n\nvoid draw(){\n\nbackground(0);\n\nfor(int i = 0; i < 10; i++){\n\narc(i * howBig, height/2, i * howBig, i * howBig, 0 , PI*2);\n\n}\n\nhowBig++;\n\nif(howBig == 200){\n\nhowBig = 0;\n}\n\n}\n\n[/cc]\n\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-autosave','','','2012-08-24 18:08:04','2012-08-24 18:08:04','',23,'http://thejsj.com/processing/?p=25',0,'revision','',0),(26,1,'2012-08-22 19:18:30','2012-08-22 19:18:30','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-2','','','2012-08-22 19:18:30','2012-08-22 19:18:30','',23,'http://thejsj.com/processing/?p=26',0,'revision','',0),(27,1,'2012-08-22 19:47:52','2012-08-22 19:47:52','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-3','','','2012-08-22 19:47:52','2012-08-22 19:47:52','',23,'http://thejsj.com/processing/?p=27',0,'revision','',0),(28,1,'2012-08-22 19:48:05','2012-08-22 19:48:05','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-4','','','2012-08-22 19:48:05','2012-08-22 19:48:05','',23,'http://thejsj.com/processing/?p=28',0,'revision','',0),(29,1,'2012-08-22 21:46:43','2012-08-22 21:46:43','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-5','','','2012-08-22 21:46:43','2012-08-22 21:46:43','',23,'http://thejsj.com/processing/?p=29',0,'revision','',0),(30,1,'2012-08-22 22:02:03','2012-08-22 22:02:03','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-6','','','2012-08-22 22:02:03','2012-08-22 22:02:03','',23,'http://thejsj.com/processing/?p=30',0,'revision','',0),(31,1,'2012-08-22 22:02:43','2012-08-22 22:02:43','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-7','','','2012-08-22 22:02:43','2012-08-22 22:02:43','',23,'http://thejsj.com/processing/?p=31',0,'revision','',0),(32,1,'2012-08-22 22:34:49','2012-08-22 22:34:49','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-8','','','2012-08-22 22:34:49','2012-08-22 22:34:49','',23,'http://thejsj.com/processing/?p=32',0,'revision','',0),(33,1,'2012-08-23 00:44:22','2012-08-23 00:44:22','','Processing Syllabus','','inherit','open','open','','processing-syllabus','','','2012-08-23 00:44:22','2012-08-23 00:44:22','',2,'http://thejsj.com/processing/wp-content/uploads/2012/08/Processing-Syllabus.pdf',0,'attachment','application/pdf',0),(34,1,'2012-08-22 17:15:29','2012-08-22 17:15:29','This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\n\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</blockquote>\n\n...or something like this:\n\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickies to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\n\nAs a new WordPress user, you should go to <a href=\"http://thejsj.com/processing/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!','Sample Page','','inherit','open','open','','2-revision','','','2012-08-22 17:15:29','2012-08-22 17:15:29','',2,'http://thejsj.com/processing/?p=34',0,'revision','',0),(38,1,'2012-08-23 00:45:10','2012-08-23 00:45:10','Here is the class syllabus.\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/08/Processing-Syllabus.pdf\">Processing Course Syllabus - Fall 2012</a>','Class Syllabus','','inherit','open','open','','2-revision-4','','','2012-08-23 00:45:10','2012-08-23 00:45:10','',2,'http://thejsj.com/processing/2012/08/23/2-revision-4/',0,'revision','',0),(39,1,'2012-08-22 22:41:32','2012-08-22 22:41:32','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n7. Looping\r\n\r\nIf you would like the piece to reLoop, you might want to do something like this\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint frame = 0;\r\n\r\nvoid draw(){\r\n\r\nframe++;\r\n\r\nif(frame == (height/2)){\r\nframe = 0;\r\n}\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\nint wdth = frame * 2;\r\n\r\nint hght = frame * 2;\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-9','','','2012-08-22 22:41:32','2012-08-22 22:41:32','',23,'http://thejsj.com/processing/2012/08/22/23-revision-9/',0,'revision','',0),(40,1,'2012-08-23 18:49:47','2012-08-23 18:49:47','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n7. Looping\r\n\r\nIf you would like the piece to reLoop, you might want to do something like this\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint frame = 0;\r\n\r\nvoid draw(){\r\n\r\nframe++;\r\n\r\nif(frame == (height/2)){\r\nframe = 0;\r\n}\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\nint wdth = frame * 2;\r\n\r\nint hght = frame * 2;\r\n\r\n[/cc]\r\n\r\n7. Quick, the class is about to start! Another example!\r\n\r\nYes, there\'s 10 minutes left for class and I want to show you one last example. This one using a \"for\" statement or what is typically called a loop.\r\n\r\nThere are actually two loops here: the how big int that increases every draw() and the for loop inside the \"for\" statement that draws multiple circles at differente x positions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * howBig, i * howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-10','','','2012-08-23 18:49:47','2012-08-23 18:49:47','',23,'http://thejsj.com/processing/2012/08/23/23-revision-10/',0,'revision','',0),(41,1,'2012-08-23 18:49:53','2012-08-23 18:49:53','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n7. Looping\r\n\r\nIf you would like the piece to reLoop, you might want to do something like this\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint frame = 0;\r\n\r\nvoid draw(){\r\n\r\nframe++;\r\n\r\nif(frame == (height/2)){\r\nframe = 0;\r\n}\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\nint wdth = frame * 2;\r\n\r\nint hght = frame * 2;\r\n\r\n[/cc]\r\n\r\n7. Quick, the class is about to start! Another example!\r\n\r\nYes, there\'s 10 minutes left for class and I want to show you one last example. This one using a \"for\" statement or what is typically called a loop.\r\n\r\nThere are actually two loops here: the how big int that increases every draw() and the for loop inside the \"for\" statement that draws multiple circles at differente x positions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * howBig, i * howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-11','','','2012-08-23 18:49:53','2012-08-23 18:49:53','',23,'http://thejsj.com/processing/2012/08/23/23-revision-11/',0,'revision','',0),(42,1,'2012-08-23 18:50:13','2012-08-23 18:50:13','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n7. Looping\r\n\r\nIf you would like the piece to reLoop, you might want to do something like this\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint frame = 0;\r\n\r\nvoid draw(){\r\n\r\nframe++;\r\n\r\nif(frame == (height/2)){\r\nframe = 0;\r\n}\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\nint wdth = frame * 2;\r\n\r\nint hght = frame * 2;\r\n\r\n[/cc]\r\n\r\n7. Quick, the class is about to start! Another example!\r\n\r\nYes, there\'s 10 minutes left for class and I want to show you one last example. This one using a \"for\" statement or what is typically called a loop.\r\n\r\nThere are actually two loops here: the how big int that increases every draw() and the for loop inside the \"for\" statement that draws multiple circles at differente x positions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * howBig, i * howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-12','','','2012-08-23 18:50:13','2012-08-23 18:50:13','',23,'http://thejsj.com/processing/2012/08/23/23-revision-12/',0,'revision','',0),(43,1,'2012-08-27 19:48:51','2012-08-27 19:48:51','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is the last example. For this example, we will try to simulate the same behavior as before, but with many different instances of the same object. In a way, repeating the object and generating different instances of the same behavior. In this example, we will use what is called an <strong>array</strong>. I am going to repeat that word because it\'s VERY important: <strong>array</strong>. An array is basically a list ( I will explain arrays and the jump into the example).\r\n\r\nFor example, I need to go to the grocery store and buy:\r\n<ul>\r\n	<li>Milk</li>\r\n	<li>Bread</li>\r\n	<li>Ice Cream</li>\r\n	<li>Microwavable Burritos</li>\r\n	<li>Butter</li>\r\n</ul>\r\nIn code this would look the following way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString[] groceryStoreList = {\r\n\r\n\"Milk\",\r\n\r\n\"Bread\",\r\n\r\n\"Ice Cream\",\r\n\r\n\"Microwavable Burritos\",\r\n\r\n\"Butter\"\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf I was going to do this with X and Y positions  for 4 different points in space, it might look something like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[] positionsX = {\r\n\r\n20, // The X position for point 1\r\n\r\n90, // The X position for point 2\r\n\r\n700, // The X position for point 3\r\n\r\n500\r\n\r\n}\r\n\r\nint[] positionsY = {\r\n\r\n560, // The Y position for point 1\r\n\r\n560, // The Y position for point 2\r\n\r\n340, // The Y position for point 3\r\n\r\n243\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nor you could write them using a multi-dimensional array, which is basically, a list of lists:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[][] Positions = {\r\n\r\n{20,560}, //X and Y positions for point 1\r\n\r\n{90,560}, //X and Y positions for point 2\r\n\r\n{700,340}, //X and Y positions for point 3\r\n\r\n{500,243}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nArrays are not always simple. The can turn very complicated very quickly and this is only an introduction to arrays. So, try to plan out for what exactly you will be using the array and keep to it.\r\n\r\nThe final example, Using arrays to create multiple object simultaneously:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 100;\r\n\r\nfloat[] prevX = new float[instances];\r\n\r\nfloat[] prevY = new float[instances];\r\n\r\nfloat[] prevXsize = new float[instances];\r\n\r\nfloat[] prevYsize = new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nprevXsize[i] = 100 + random(-20,20);\r\n\r\nprevYsize[i] = 100 + random(-20,20);\r\n\r\nprevX[i] = random(0,width);\r\n\r\nprevY[i] = random(0,height);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize[i]++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX[i], prevY[i], prevXsize[i], prevYsize[i]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is another example that explains arrays in a more simple way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 4;\r\n\r\nfloat[] prevX= new float[instances];\r\n\r\nfloat[] prevY= new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(500, 500);\r\n\r\nbackground(255);\r\n\r\nfor(int s = 0; s &lt; instances; s++){\r\n\r\nprevX[s] = random(0,width);\r\n\r\nprevY[s] = random(0,width);\r\n\r\nprintln(\"I\'m setting up \" + s);\r\n\r\nprintln(s + \" / \" + prevX[s] + \" / \" + prevY[s]);\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nprintln(\"-------- DRAW ------\");\r\n\r\nfor(int s = 0; s &lt; instances; s++){\r\n\r\nstroke(0);\r\n\r\nfill(0);\r\n\r\npoint(prevX[s], prevY[s]);\r\n\r\ntext(s + \"-\", prevX[s], prevY[s] + 10, 20, 20);\r\n\r\nprintln(s + \" / \" + prevX[s] + \" / \" + prevY[s]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','publish','open','open','','class-2-randomness','','','2012-08-30 21:27:57','2012-08-30 21:27:57','',0,'http://thejsj.com/processing/?p=43',0,'post','',0),(44,1,'2012-08-27 19:47:09','2012-08-27 19:47:09','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\n\nRandom variables can be used at any point during the sketch and could be as simple as:\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(900,900);\n\nbackground(0);\n\n}\n\nvoid draw(){\n\nbackground(random(0,255));\n\n}\n\n[/cc]\n\nThis could also be used with color:\n\n[cc lang=\"processing\"]\n\nbackground(random(0,255), random(0,255), random(0,255));\n\n[/cc]\n\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(1000,1000);\n\nbackground(0);\n\n}\n\nint howBig = 0;\n\nvoid draw(){\n\nbackground(0);\n\nfor(int i = 0; i &lt; 10; i++){\n\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\n\n}\n\nhowBig++;\n\nif(howBig == 200){\n\nhowBig = 0;\n}\n\n}\n\n[/cc]\n\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\n\n[cc lang=\"processing\"]\n\nfloat randVar = random(0,2);\n\nfill( 255,255,255, random(0,1));\n\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\n\n[/cc]\n\n&nbsp;\n\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision','','','2012-08-27 19:47:09','2012-08-27 19:47:09','',43,'http://thejsj.com/processing/2012/08/27/43-revision/',0,'revision','',0),(45,1,'2012-08-27 19:48:51','2012-08-27 19:48:51','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-2','','','2012-08-27 19:48:51','2012-08-27 19:48:51','',43,'http://thejsj.com/processing/2012/08/27/43-revision-2/',0,'revision','',0),(46,1,'2012-08-28 19:16:41','2012-08-28 19:16:41','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\n\nRandom variables can be used at any point during the sketch and could be as simple as:\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(900,900);\n\nbackground(0);\n\n}\n\nvoid draw(){\n\nbackground(random(0,255));\n\n}\n\n[/cc]\n\nThis could also be used with color:\n\n[cc lang=\"processing\"]\n\nbackground(random(0,255), random(0,255), random(0,255));\n\n[/cc]\n\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(1000,1000);\n\nbackground(0);\n\n}\n\nint howBig = 0;\n\nvoid draw(){\n\nbackground(0);\n\nfor(int i = 0; i &lt; 10; i++){\n\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\n\n}\n\nhowBig++;\n\nif(howBig == 200){\n\nhowBig = 0;\n}\n\n}\n\n[/cc]\n\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\n\n[cc lang=\"processing\"]\n\nfloat randVar = random(0,2);\n\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\n\nnoStroke();\n\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\n\n[/cc]\n\nA good way to check how good is your randomness generate is to do the following:\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nsize(screen.width, screen.height);\n\nbackground(0);\n\n}\n\nvoid draw(){\n\nfor(int i = 0; i &lt; width; i++){\n\nfor(int ii = 0; ii &lt; height; ii++){\n\nfloat randKey = random(0,100);\n\nif(randKey &gt; 50){\n\nstroke(0);\n\n}\n\nelse {\n\nstroke(255);\n\n}\n\npoint(i, ii);\n\n}\n\n}\n\n}\n\n[/cc]\n\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\n\n[cc lang=\"processing\"]\n\nvoid draw(){\n\nint upp = 0;\n\nint downn = 0;\n\n//When setting the stroke to 255\n\ndownn++;\n\n//When setting the stroke to 0\n\nupp++;\n\n//Before ending draw()...\n\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\n\n[/cc]\n\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\n\nYou can use a similar model with bigger circles to make a more interesting pattern:\n\n[cc lang=\"processing\"]\n\nvoid draw(){\n\nfill(0,50);\n\nrect(0,0,width, height);\n\nfor(int i = 0; i &lt;= width / 100; i++){\n\nfor(int ii = 0; ii &lt;= height /100; ii++){\n\nfloat randKey = random(0,frameCount);\n\nstroke(255);\n\nfill(255, 10);\n\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\n\n}\n\n}\n\n}\n\n[/cc]\n\nPositions can also be determine randomly:\n\n[cc lang=\"processing\"]\n\nfloat prevX = width/2;\n\nfloat prevY = height/2;\n\nvoid draw(){\n\nfill(255, 2);\n\nrect(0,0,width, height);\n\nfloat newX = random(0,width);\n\nfloat newY = random(0,height);\n\nstroke(0);\n\nline(prevX, prevY, newX, newY);\n\nprevX = newX;\n\nprevY = newY;\n\n}\n\n[/cc]\n\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\n\n[cc lang=\"processing\"]\n\nfloat prevX;\n\nfloat prevY;\n\nfloat prevXsize;\n\nfloat prevYsize;\n\nvoid setup(){\n\n//size(screen.width, screen.height);\n\nsize(1000, 1000);\n\nbackground(255);\n\nprevXsize = 100;\n\nprevYsize = 100;\n\nprevX = (width/2) - prevXsize/2;\n\nprevY = (height/2) - prevYsize/2;\n\n}\n\nvoid draw(){\n\nprintln(prevX + \" / \" + prevY);\n\nfill(255, 20);\n\nrect(0,0,width, height);\n\nif(random(0,100) &lt; 50){\n\nprevX--;\n\n}\n\nelse {\n\nprevX++;\n\n}\n\nif(random(0,100) &lt; 50){\n\nprevY--;\n\n}\n\nelse {\n\nprevY++;\n\n}\n\nif(random(0,100) &lt; 50){\n\nprevXsize--;\n\n}\nelse {\n\nprevXsize++;\n\n}\n\nif(random(0,100) &lt; 50){\n\nprevYsize--;\n\n}\nelse {\n\nprevYsize++;\n\n}\n\nstroke(0);\n\nrect(prevX, prevY, prevXsize, prevYsize);\n\n}\n\n[/cc]\n\nHere is the last example. For this example, we will try to simulate the same behavior as before, but with many different instances of the same object. In a way, repeating the object and generating different instances of the same behavior. In this example, we will use what is called an <strong>array</strong>. I am going to repeat that word because it\'s VERY important: <strong>array</strong>. An array is basically a list ( I will explain arrays and the jump into the example).\n\nFor example, I need to go to the grocery store and buy:\n<ul>\n	<li>Milk</li>\n	<li>Bread</li>\n	<li>Ice Cream</li>\n	<li>Microwavable Burritos</li>\n	<li>Butter</li>\n</ul>\nIn code this would look the following way:\n\n[cc lang=\"processing\"]\n\nString[] groceryStoreList = {\n\n\"Milk\",\n\n\"Bread\",\n\n\"Ice Cream\",\n\n\"Microwavable Burritos\",\n\n\"Butter\"\n\n}\n\n[/cc]\n\nIf I was going to do this with X and Y positions  for 4 different points in space, it might look something like this:\n\n[cc lang=\"processing\"]\n\nint[] positionsX = {\n\n20, // The X position for point 1\n\n90, // The X position for point 2\n\n700, // The X position for point 3\n\n500\n\n}\n\nint[] positionsY = {\n\n560, // The Y position for point 1\n\n560, // The Y position for point 2\n\n340, // The Y position for point 3\n\n243\n\n}\n\n[/cc]\n\nor you could write them using a multi-dimensional array, which is basically, a list of lists:\n\n[cc lang=\"processing\"]\n\nint[][] Positions = {\n\n{20,560}, //X and Y positions for point 1\n\n{90,560}, //X and Y positions for point 2\n\n{700,340}, //X and Y positions for point 3\n\n{500,243}\n\n}\n\n[/cc]\n\nArrays are not always simple. The can turn very complicated very quickly and this is only an introduction to arrays. So, try to plan out for what exactly you will be using the array and keep to it.\n\nThe final example:','Class #2 - Randomness','','inherit','open','open','','43-autosave','','','2012-08-28 19:16:41','2012-08-28 19:16:41','',43,'http://thejsj.com/processing/2012/08/27/43-autosave/',0,'revision','',0),(47,1,'2012-08-27 19:49:23','2012-08-27 19:49:23','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-3','','','2012-08-27 19:49:23','2012-08-27 19:49:23','',43,'http://thejsj.com/processing/2012/08/27/43-revision-3/',0,'revision','',0),(48,1,'2012-08-27 20:05:23','2012-08-27 20:05:23','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-4','','','2012-08-27 20:05:23','2012-08-27 20:05:23','',43,'http://thejsj.com/processing/2012/08/27/43-revision-4/',0,'revision','',0),(49,1,'2012-08-28 01:42:36','2012-08-28 01:42:36','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-5','','','2012-08-28 01:42:36','2012-08-28 01:42:36','',43,'http://thejsj.com/processing/2012/08/28/43-revision-5/',0,'revision','',0),(50,1,'2012-08-28 01:58:38','2012-08-28 01:58:38','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-6','','','2012-08-28 01:58:38','2012-08-28 01:58:38','',43,'http://thejsj.com/processing/2012/08/28/43-revision-6/',0,'revision','',0),(51,1,'2012-08-28 02:46:18','2012-08-28 02:46:18','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n}\r\n\r\n&nbsp;\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\nprevX--;\r\n}\r\nelse {\r\nprevX++;\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\nprevY--;\r\n}\r\nelse {\r\nprevY++;\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\nprevXsize--;\r\n}\r\nelse {\r\nprevXsize++;\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\nprevYsize--;\r\n}\r\nelse {\r\nprevYsize++;\r\n}\r\nstroke(0);\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-7','','','2012-08-28 02:46:18','2012-08-28 02:46:18','',43,'http://thejsj.com/processing/2012/08/28/43-revision-7/',0,'revision','',0),(52,1,'2012-08-28 02:46:27','2012-08-28 02:46:27','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n}\r\n\r\n&nbsp;\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\nprevX--;\r\n}\r\nelse {\r\nprevX++;\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\nprevY--;\r\n}\r\nelse {\r\nprevY++;\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\nprevXsize--;\r\n}\r\nelse {\r\nprevXsize++;\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\nprevYsize--;\r\n}\r\nelse {\r\nprevYsize++;\r\n}\r\nstroke(0);\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-8','','','2012-08-28 02:46:27','2012-08-28 02:46:27','',43,'http://thejsj.com/processing/2012/08/28/43-revision-8/',0,'revision','',0),(55,1,'2012-08-28 02:53:35','2012-08-28 02:53:35','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-11','','','2012-08-28 02:53:35','2012-08-28 02:53:35','',43,'http://thejsj.com/processing/2012/08/28/43-revision-11/',0,'revision','',0),(53,1,'2012-08-28 02:48:15','2012-08-28 02:48:15','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-9','','','2012-08-28 02:48:15','2012-08-28 02:48:15','',43,'http://thejsj.com/processing/2012/08/28/43-revision-9/',0,'revision','',0),(54,1,'2012-08-28 02:52:58','2012-08-28 02:52:58','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class #2 - Randomness','','inherit','open','open','','43-revision-10','','','2012-08-28 02:52:58','2012-08-28 02:52:58','',43,'http://thejsj.com/processing/2012/08/28/43-revision-10/',0,'revision','',0),(56,1,'2012-08-28 02:54:11','2012-08-28 02:54:11','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-12','','','2012-08-28 02:54:11','2012-08-28 02:54:11','',43,'http://thejsj.com/processing/2012/08/28/43-revision-12/',0,'revision','',0),(57,1,'2012-08-28 02:54:25','2012-08-28 02:54:25','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-13','','','2012-08-28 02:54:25','2012-08-28 02:54:25','',43,'http://thejsj.com/processing/2012/08/28/43-revision-13/',0,'revision','',0),(58,1,'2012-08-28 02:54:26','2012-08-28 02:54:26','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-14','','','2012-08-28 02:54:26','2012-08-28 02:54:26','',43,'http://thejsj.com/processing/2012/08/28/43-revision-14/',0,'revision','',0),(59,1,'2012-08-28 02:54:31','2012-08-28 02:54:31','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-15','','','2012-08-28 02:54:31','2012-08-28 02:54:31','',43,'http://thejsj.com/processing/2012/08/28/43-revision-15/',0,'revision','',0),(60,1,'2012-08-28 19:19:51','2012-08-28 19:19:51','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" frameborder=\"0\" width=\"800\" height=\"450\"></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.','Sample Work Realized With Processing','','publish','open','open','','sample-work-realized-with-proccessing','','','2012-08-28 19:20:09','2012-08-28 19:20:09','',0,'http://thejsj.com/processing/?page_id=60',0,'page','',0),(61,1,'2012-08-28 19:19:19','2012-08-28 19:19:19','','Auto Draft','','inherit','open','open','','60-revision','','','2012-08-28 19:19:19','2012-08-28 19:19:19','',60,'http://thejsj.com/processing/2012/08/28/60-revision/',0,'revision','',0),(62,1,'2012-08-22 18:17:22','2012-08-22 18:17:22','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n&nbsp;<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" width=\"400\" height=\"300\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" width=\"800\" height=\"450\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" width=\"500\" height=\"281\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>','Sample Work Realized With Proccessing','','inherit','open','open','','9-revision-3','','','2012-08-22 18:17:22','2012-08-22 18:17:22','',9,'http://thejsj.com/processing/2012/08/22/9-revision-3/',0,'revision','',0),(64,1,'2012-08-28 19:20:05','2012-08-28 19:20:05','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" frameborder=\"0\" width=\"800\" height=\"450\"></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.','Sample Work Realized With Processing','','inherit','open','open','','9-revision-4','','','2012-08-28 19:20:05','2012-08-28 19:20:05','',9,'http://thejsj.com/processing/2012/08/28/9-revision-4/',0,'revision','',0),(65,1,'2012-08-28 19:20:57','2012-08-28 19:20:57','<h2>Websites:</h2>\r\nhttp://processing.org/\r\n\r\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\r\n<h2>Books on Learning Processing:</h2>\r\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\r\n\r\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\r\n\r\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\r\n<h2>Websites with Work done on Processing:</h2>\r\nhttp://processing.org/exhibition/\r\n\r\nhttp://www.creativeapplications.net/\r\n<h2>Books with Work done with Processing:</h2>\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\r\n\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\r\n\r\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\r\n\r\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art </a>','Recommended Resources for Processing','','publish','open','open','','recommended-resources-for-processing','','','2012-08-28 19:20:57','2012-08-28 19:20:57','',0,'http://thejsj.com/processing/?page_id=65',0,'page','',0),(66,1,'2012-08-22 17:42:48','2012-08-22 17:42:48','<h2>Websites:</h2>\r\nhttp://processing.org/\r\n\r\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\r\n<h2>Books on Learning Processing:</h2>\r\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\r\n\r\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\r\n\r\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\r\n<h2>Websites with Work done on Processing:</h2>\r\nhttp://processing.org/exhibition/\r\n\r\nhttp://www.creativeapplications.net/\r\n<h2>Books with Work done with Processing:</h2>\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\r\n\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\r\n\r\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\r\n\r\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art </a>','Recommended Resources About Processing','','inherit','open','open','','5-revision-3','','','2012-08-22 17:42:48','2012-08-22 17:42:48','',5,'http://thejsj.com/processing/2012/08/22/5-revision-3/',0,'revision','',0),(67,1,'2012-08-28 19:20:36','2012-08-28 19:20:36','','Auto Draft','','inherit','open','open','','65-revision','','','2012-08-28 19:20:36','2012-08-28 19:20:36','',65,'http://thejsj.com/processing/2012/08/28/65-revision/',0,'revision','',0),(75,1,'2012-08-28 19:17:33','2012-08-28 19:17:33','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is the last example. For this example, we will try to simulate the same behavior as before, but with many different instances of the same object. In a way, repeating the object and generating different instances of the same behavior. In this example, we will use what is called an <strong>array</strong>. I am going to repeat that word because it\'s VERY important: <strong>array</strong>. An array is basically a list ( I will explain arrays and the jump into the example).\r\n\r\nFor example, I need to go to the grocery store and buy:\r\n<ul>\r\n	<li>Milk</li>\r\n	<li>Bread</li>\r\n	<li>Ice Cream</li>\r\n	<li>Microwavable Burritos</li>\r\n	<li>Butter</li>\r\n</ul>\r\nIn code this would look the following way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString[] groceryStoreList = {\r\n\r\n\"Milk\",\r\n\r\n\"Bread\",\r\n\r\n\"Ice Cream\",\r\n\r\n\"Microwavable Burritos\",\r\n\r\n\"Butter\"\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf I was going to do this with X and Y positions  for 4 different points in space, it might look something like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[] positionsX = {\r\n\r\n20, // The X position for point 1\r\n\r\n90, // The X position for point 2\r\n\r\n700, // The X position for point 3\r\n\r\n500\r\n\r\n}\r\n\r\nint[] positionsY = {\r\n\r\n560, // The Y position for point 1\r\n\r\n560, // The Y position for point 2\r\n\r\n340, // The Y position for point 3\r\n\r\n243\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nor you could write them using a multi-dimensional array, which is basically, a list of lists:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[][] Positions = {\r\n\r\n{20,560}, //X and Y positions for point 1\r\n\r\n{90,560}, //X and Y positions for point 2\r\n\r\n{700,340}, //X and Y positions for point 3\r\n\r\n{500,243}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nArrays are not always simple. The can turn very complicated very quickly and this is only an introduction to arrays. So, try to plan out for what exactly you will be using the array and keep to it.\r\n\r\nThe final example, Using arrays to create multiple object simultaneously:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 100;\r\n\r\nfloat[] prevX = new float[instances];\r\n\r\nfloat[] prevY = new float[instances];\r\n\r\nfloat[] prevXsize = new float[instances];\r\n\r\nfloat[] prevYsize = new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nprevXsize[i] = 100 + random(-20,20);\r\n\r\nprevYsize[i] = 100 + random(-20,20);\r\n\r\nprevX[i] = random(0,width);\r\n\r\nprevY[i] = random(0,height);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize[i]++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX[i], prevY[i], prevXsize[i], prevYsize[i]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-16','','','2012-08-28 19:17:33','2012-08-28 19:17:33','',43,'http://thejsj.com/processing/2012/08/28/43-revision-16/',0,'revision','',0),(76,1,'2012-08-30 21:23:54','2012-08-30 21:23:54','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is the last example. For this example, we will try to simulate the same behavior as before, but with many different instances of the same object. In a way, repeating the object and generating different instances of the same behavior. In this example, we will use what is called an <strong>array</strong>. I am going to repeat that word because it\'s VERY important: <strong>array</strong>. An array is basically a list ( I will explain arrays and the jump into the example).\r\n\r\nFor example, I need to go to the grocery store and buy:\r\n<ul>\r\n	<li>Milk</li>\r\n	<li>Bread</li>\r\n	<li>Ice Cream</li>\r\n	<li>Microwavable Burritos</li>\r\n	<li>Butter</li>\r\n</ul>\r\nIn code this would look the following way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString[] groceryStoreList = {\r\n\r\n\"Milk\",\r\n\r\n\"Bread\",\r\n\r\n\"Ice Cream\",\r\n\r\n\"Microwavable Burritos\",\r\n\r\n\"Butter\"\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf I was going to do this with X and Y positions  for 4 different points in space, it might look something like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[] positionsX = {\r\n\r\n20, // The X position for point 1\r\n\r\n90, // The X position for point 2\r\n\r\n700, // The X position for point 3\r\n\r\n500\r\n\r\n}\r\n\r\nint[] positionsY = {\r\n\r\n560, // The Y position for point 1\r\n\r\n560, // The Y position for point 2\r\n\r\n340, // The Y position for point 3\r\n\r\n243\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nor you could write them using a multi-dimensional array, which is basically, a list of lists:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[][] Positions = {\r\n\r\n{20,560}, //X and Y positions for point 1\r\n\r\n{90,560}, //X and Y positions for point 2\r\n\r\n{700,340}, //X and Y positions for point 3\r\n\r\n{500,243}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nArrays are not always simple. The can turn very complicated very quickly and this is only an introduction to arrays. So, try to plan out for what exactly you will be using the array and keep to it.\r\n\r\nThe final example, Using arrays to create multiple object simultaneously:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 100;\r\n\r\nfloat[] prevX = new float[instances];\r\n\r\nfloat[] prevY = new float[instances];\r\n\r\nfloat[] prevXsize = new float[instances];\r\n\r\nfloat[] prevYsize = new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nprevXsize[i] = 100 + random(-20,20);\r\n\r\nprevYsize[i] = 100 + random(-20,20);\r\n\r\nprevX[i] = random(0,width);\r\n\r\nprevY[i] = random(0,height);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize[i]++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX[i], prevY[i], prevXsize[i], prevYsize[i]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is another example that explains arrays in a more simple way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 4;\r\n\r\nfloat[] prevX= new float[instances];\r\n\r\nfloat[] prevY= new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(500, 500);\r\n\r\nbackground(255);\r\n\r\nfor(int s = 0; s &lt; instances; s++){\r\n\r\nprevX[s] = random(0,width);\r\n\r\nprevY[s] = random(0,width);\r\n\r\nprintln(\"I\'m setting up \" + s);\r\n\r\nprintln(s + \" / \" + prevX[s] + \" / \" + prevY[s]);\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nprintln(\"-------- DRAW ------\");\r\n\r\nfor(int s = 0; s &lt; instances; s++){\r\n\r\nstroke(0);\r\n\r\nfill(0);\r\n\r\npoint(prevX[s], prevY[s]);\r\n\r\ntext(s + \"-\", prevX[s], prevY[s] + 10, 20, 20);\r\n\r\nprintln(s + \" / \" + prevX[s] + \" / \" + prevY[s]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-17','','','2012-08-30 21:23:54','2012-08-30 21:23:54','',43,'http://thejsj.com/processing/2012/08/30/43-revision-17/',0,'revision','',0),(77,1,'2012-08-30 21:25:27','2012-08-30 21:25:27','Here\'s the example to what some of you were wondering about in the class: How do you get a point to float around the screen?\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint direction = 0;\r\nint x = 0;\r\nint y = 0;\r\n\r\nvoid setup(){\r\nsize(500,500);\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\nbackground(0);\r\n\r\nif(direction == 0){\r\nx++;\r\nif(x == width - 1){\r\ndirection = 1;\r\n}\r\n}\r\nelse if(direction == 1){\r\ny++;\r\nif(y == height - 1){\r\ndirection = 2;\r\n}\r\n}\r\nelse if(direction == 2){\r\nx--;\r\nif(x == 0){\r\ndirection = 3;\r\n}\r\n}\r\nelse if(direction == 3){\r\ny--;\r\nif(y == 0){\r\ndirection = 0;\r\n}\r\n}\r\n\r\nstroke(255);\r\nline(x+5,y, x-5, y);\r\n\r\nline(x, y - 5, x, y+5);\r\n\r\n\r\n}\r\n\r\n[/cc]','Point Going around the Screen','','publish','open','open','','point-going-around-the-screen','','','2012-08-30 21:27:51','2012-08-30 21:27:51','',0,'http://thejsj.com/processing/?p=77',0,'post','',0),(78,1,'2012-08-30 21:25:19','2012-08-30 21:25:19','Here\'s the example to what some of you were wondering about in the class: How do you get a point to float around the screen?\n\n[cc lang=\"processing\"]\n\n&nbsp;\n\n[/cc]','Point Going around the Screen','','inherit','open','open','','77-revision','','','2012-08-30 21:25:19','2012-08-30 21:25:19','',77,'http://thejsj.com/processing/2012/08/30/77-revision/',0,'revision','',0),(79,1,'2012-08-30 21:26:38','2012-08-30 21:26:38','In this examples, lines are drawn in the screen but they can only have a certain width:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nfloat prevX = 500;\r\n\r\nfloat prevY = 5;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\n//rect(0,0,width, height);\r\n\r\nfloat newX = random(prevX - 50,prevX + 50);\r\n\r\nfloat newY = random(prevY - 50,prevY + 50);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\nif(frameCount%100 == 0){\r\n\r\nfill(255, 10);\r\n\r\nrect(0,0,width, height);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Random Short Lines','','publish','open','open','','random-short-lines','','','2012-08-30 21:27:45','2012-08-30 21:27:45','',0,'http://thejsj.com/processing/?p=79',0,'post','',0),(80,1,'2012-08-30 21:26:02','2012-08-30 21:26:02','','Random Short Lines','','inherit','open','open','','79-revision','','','2012-08-30 21:26:02','2012-08-30 21:26:02','',79,'http://thejsj.com/processing/2012/08/30/79-revision/',0,'revision','',0),(81,1,'2012-08-30 21:26:38','2012-08-30 21:26:38','In this examples, lines are drawn in the screen but they can only have a certain width:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nfloat prevX = 500;\r\n\r\nfloat prevY = 5;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\n//rect(0,0,width, height);\r\n\r\nfloat newX = random(prevX - 50,prevX + 50);\r\n\r\nfloat newY = random(prevY - 50,prevY + 50);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\nif(frameCount%100 == 0){\r\n\r\nfill(255, 10);\r\n\r\nrect(0,0,width, height);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Random Short Lines','','inherit','open','open','','79-revision-2','','','2012-08-30 21:26:38','2012-08-30 21:26:38','',79,'http://thejsj.com/processing/2012/08/30/79-revision-2/',0,'revision','',0),(82,1,'2012-08-30 21:27:01','2012-08-30 21:27:01','In this examples, lines are drawn in the screen but they can only have a certain width:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nfloat prevX = 500;\r\n\r\nfloat prevY = 5;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\n//rect(0,0,width, height);\r\n\r\nfloat newX = random(prevX - 50,prevX + 50);\r\n\r\nfloat newY = random(prevY - 50,prevY + 50);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\nif(frameCount%100 == 0){\r\n\r\nfill(255, 10);\r\n\r\nrect(0,0,width, height);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Random Short Lines','','inherit','open','open','','79-revision-3','','','2012-08-30 21:27:01','2012-08-30 21:27:01','',79,'http://thejsj.com/processing/2012/08/30/79-revision-3/',0,'revision','',0),(83,1,'2012-08-30 21:25:27','2012-08-30 21:25:27','Here\'s the example to what some of you were wondering about in the class: How do you get a point to float around the screen?\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint direction = 0;\r\nint x = 0;\r\nint y = 0;\r\n\r\nvoid setup(){\r\nsize(500,500);\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\nbackground(0);\r\n\r\nif(direction == 0){\r\nx++;\r\nif(x == width - 1){\r\ndirection = 1;\r\n}\r\n}\r\nelse if(direction == 1){\r\ny++;\r\nif(y == height - 1){\r\ndirection = 2;\r\n}\r\n}\r\nelse if(direction == 2){\r\nx--;\r\nif(x == 0){\r\ndirection = 3;\r\n}\r\n}\r\nelse if(direction == 3){\r\ny--;\r\nif(y == 0){\r\ndirection = 0;\r\n}\r\n}\r\n\r\nstroke(255);\r\nline(x+5,y, x-5, y);\r\n\r\nline(x, y - 5, x, y+5);\r\n\r\n\r\n}\r\n\r\n[/cc]','Point Going around the Screen','','inherit','open','open','','77-revision-2','','','2012-08-30 21:25:27','2012-08-30 21:25:27','',77,'http://thejsj.com/processing/2012/08/30/77-revision-2/',0,'revision','',0),(84,1,'2012-08-30 21:24:05','2012-08-30 21:24:05','Randomness can be used through out all your sketches to add unexpected elements to it. It also can help to create a rythimg to a particular sketch that feel slightly more \'organic\' than a linear progression:\r\n\r\nRandom variables can be used at any point during the sketch and could be as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(900,900);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(random(0,255));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThis could also be used with color:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\n[/cc]\r\n\r\nIf we were to change last\'s week exercise to include randomness it might look something like this (Altering only the size):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i &lt; 10; i++){\r\n\r\narc(i * howBig, height/2, i * random(0,2) * howBig, i * random(0,2)* howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe could also make them the same proportion every single time, and altering it\'s alpha channel:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat randVar = random(0,2);\r\n\r\nfill( 255, 255, 255, random(0,100)); // Add colorMode(RGB, 255,255,255, 100); at the top!\r\n\r\nnoStroke();\r\n\r\narc(i * howBig, height/2, i * randVar * howBig, i * randVar * howBig, 0 , PI*2);\r\n\r\n[/cc]\r\n\r\nA good way to check how good is your randomness generate is to do the following:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(screen.width, screen.height);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfor(int i = 0; i &lt; width; i++){\r\n\r\nfor(int ii = 0; ii &lt; height; ii++){\r\n\r\nfloat randKey = random(0,100);\r\n\r\nif(randKey &gt; 50){\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(255);\r\n\r\n}\r\n\r\npoint(i, ii);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nTo check if these are correct ( of course they are, I made them), just include a counter in the sketch that print everything out at the end:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint upp = 0;\r\n\r\nint downn = 0;\r\n\r\n//When setting the stroke to 255\r\n\r\ndownn++;\r\n\r\n//When setting the stroke to 0\r\n\r\nupp++;\r\n\r\n//Before ending draw()...\r\n\r\nprintln(\"UP: \" + upp + \" / Downn: \" + downn);\r\n\r\n[/cc]\r\n\r\nWhat you\'ll see is continuous runs of 50.0 something and 49.9 something alternating between the two variables.\r\n\r\nYou can use a similar model with bigger circles to make a more interesting pattern:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nfill(0,50);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor(int i = 0; i &lt;= width / 100; i++){\r\n\r\nfor(int ii = 0; ii &lt;= height /100; ii++){\r\n\r\nfloat randKey = random(0,frameCount);\r\n\r\nstroke(255);\r\n\r\nfill(255, 10);\r\n\r\narc(i * 100, ii * 100, randKey, randKey, 0 , PI*2);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPositions can also be determine randomly:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX = width/2;\r\n\r\nfloat prevY = height/2;\r\n\r\nvoid draw(){\r\n\r\nfill(255, 2);\r\n\r\nrect(0,0,width, height);\r\n\r\nfloat newX = random(0,width);\r\n\r\nfloat newY = random(0,height);\r\n\r\nstroke(0);\r\n\r\nline(prevX, prevY, newX, newY);\r\n\r\nprevX = newX;\r\n\r\nprevY = newY;\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can remember the position and size of an object with a variable and animate it acordingly increasing and decrasing that variable:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nfloat prevX;\r\n\r\nfloat prevY;\r\n\r\nfloat prevXsize;\r\n\r\nfloat prevYsize;\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nprevXsize = 100;\r\n\r\nprevYsize = 100;\r\n\r\nprevX = (width/2) - prevXsize/2;\r\n\r\nprevY = (height/2) - prevYsize/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nprintln(prevX + \" / \" + prevY);\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX, prevY, prevXsize, prevYsize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is the last example. For this example, we will try to simulate the same behavior as before, but with many different instances of the same object. In a way, repeating the object and generating different instances of the same behavior. In this example, we will use what is called an <strong>array</strong>. I am going to repeat that word because it\'s VERY important: <strong>array</strong>. An array is basically a list ( I will explain arrays and the jump into the example).\r\n\r\nFor example, I need to go to the grocery store and buy:\r\n<ul>\r\n	<li>Milk</li>\r\n	<li>Bread</li>\r\n	<li>Ice Cream</li>\r\n	<li>Microwavable Burritos</li>\r\n	<li>Butter</li>\r\n</ul>\r\nIn code this would look the following way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString[] groceryStoreList = {\r\n\r\n\"Milk\",\r\n\r\n\"Bread\",\r\n\r\n\"Ice Cream\",\r\n\r\n\"Microwavable Burritos\",\r\n\r\n\"Butter\"\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf I was going to do this with X and Y positions  for 4 different points in space, it might look something like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[] positionsX = {\r\n\r\n20, // The X position for point 1\r\n\r\n90, // The X position for point 2\r\n\r\n700, // The X position for point 3\r\n\r\n500\r\n\r\n}\r\n\r\nint[] positionsY = {\r\n\r\n560, // The Y position for point 1\r\n\r\n560, // The Y position for point 2\r\n\r\n340, // The Y position for point 3\r\n\r\n243\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nor you could write them using a multi-dimensional array, which is basically, a list of lists:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint[][] Positions = {\r\n\r\n{20,560}, //X and Y positions for point 1\r\n\r\n{90,560}, //X and Y positions for point 2\r\n\r\n{700,340}, //X and Y positions for point 3\r\n\r\n{500,243}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nArrays are not always simple. The can turn very complicated very quickly and this is only an introduction to arrays. So, try to plan out for what exactly you will be using the array and keep to it.\r\n\r\nThe final example, Using arrays to create multiple object simultaneously:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 100;\r\n\r\nfloat[] prevX = new float[instances];\r\n\r\nfloat[] prevY = new float[instances];\r\n\r\nfloat[] prevXsize = new float[instances];\r\n\r\nfloat[] prevYsize = new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(1000, 1000);\r\n\r\nbackground(255);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nprevXsize[i] = 100 + random(-20,20);\r\n\r\nprevYsize[i] = 100 + random(-20,20);\r\n\r\nprevX[i] = random(0,width);\r\n\r\nprevY[i] = random(0,height);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(255, 20);\r\n\r\nrect(0,0,width, height);\r\n\r\nfor( int i = 0; i &lt; instances; i++){\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevX[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevX[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevY[i]--;\r\n\r\n}\r\n\r\nelse {\r\n\r\nprevY[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevXsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevXsize[i]++;\r\n\r\n}\r\n\r\nif(random(0,100) &lt; 50){\r\n\r\nprevYsize[i]--;\r\n\r\n}\r\nelse {\r\n\r\nprevYsize[i]++;\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\nrect(prevX[i], prevY[i], prevXsize[i], prevYsize[i]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nHere is another example that explains arrays in a more simple way:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint instances = 4;\r\n\r\nfloat[] prevX= new float[instances];\r\n\r\nfloat[] prevY= new float[instances];\r\n\r\nvoid setup(){\r\n\r\n//size(screen.width, screen.height);\r\n\r\nsize(500, 500);\r\n\r\nbackground(255);\r\n\r\nfor(int s = 0; s &lt; instances; s++){\r\n\r\nprevX[s] = random(0,width);\r\n\r\nprevY[s] = random(0,width);\r\n\r\nprintln(\"I\'m setting up \" + s);\r\n\r\nprintln(s + \" / \" + prevX[s] + \" / \" + prevY[s]);\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nprintln(\"-------- DRAW ------\");\r\n\r\nfor(int s = 0; s &lt; instances; s++){\r\n\r\nstroke(0);\r\n\r\nfill(0);\r\n\r\npoint(prevX[s], prevY[s]);\r\n\r\ntext(s + \"-\", prevX[s], prevY[s] + 10, 20, 20);\r\n\r\nprintln(s + \" / \" + prevX[s] + \" / \" + prevY[s]);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Class #2 - Randomness','','inherit','open','open','','43-revision-18','','','2012-08-30 21:24:05','2012-08-30 21:24:05','',43,'http://thejsj.com/processing/2012/08/30/43-revision-18/',0,'revision','',0),(85,1,'2012-08-24 18:16:45','2012-08-24 18:16:45','In this class, you\'ll learn some of the basic functions for drawing basic geometry in Processing and starting to create some basic animation.\r\n\r\nFirst, since you\'re new to all this, let\'s learn how to create a Processing sketch.\r\n\r\n1. Open the Processing application and click File -&gt; New ( Command + N on a Mac)\r\n\r\n2. Now let\'s \"set up\" a new sketch with it\'s corresponding size, background color and frame rate\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1200, 900);\r\n\r\nbackground(255,253, 245);\r\n\r\nframeRate(60);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//This will output the number of the current frame in the sketch\r\nprintln(frameCount);\r\n}\r\n\r\n[/cc]\r\n\r\n3. Now, let\'s draw something. How about we draw a circle. For that, we\'ll need a \"Draw();\" function like this:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nrect(10,10,200,200);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\narc(0,0,300,300, 0, PI*2);\r\n\r\n//This will \"Print\" something in the console, for what is called \"debugging\"\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n4. Now you can add some color (fill) and border (stroke) to your geometry.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(10,10,200,200);\r\n\r\nfill(255,0,0);\r\n\r\nline(0,0,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke(); //This makes sure that there is no stroke on any object\r\n\r\narc(width,height,300,300, 0, PI*2);\r\n\r\nprintln(width +\" / \" + height);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo:\r\n<ul>\r\n	<li>Fill set the color of the object in RGB</li>\r\n	<li>noFill() makes the inside of the object be transparent</li>\r\n	<li>Stroke sets the border of the object in RGB</li>\r\n	<li>noStroke() remove all borders from the object</li>\r\n	<li>Once you set a fill() or stroke(), it will continue to be applied until otherwise indicated in the code</li>\r\n</ul>\r\n5. Intrdocing Variables\r\n\r\nThere are 4 main types of variables (for now):\r\n<ul>\r\n	<li>int: An int(teger) is a whole number. 0, 3, 6, 937384593494, -874734, o8345</li>\r\n	<li>float: A float is a number with decimal positions: 0.0, 0.565468, 66.3, 8.0, - 90.0, -783.83</li>\r\n	<li>String: A string is a piece of text to which you cannot do any calculations: \"Hello\", \"Jorge\", \"I\'m in Richmond, Virginia\", \"7\", \"923\", \"I love my 5 cats\"</li>\r\n	<li>boolean: A boolean is used to say if something is true or not: true, false.</li>\r\n	<li>color: This is a type of variable only found in Processing (as far as I know) and is a set of three integers that denote a color. When they consist of only one number, they represent a grayscale color: color(0,0,0), color(255,0,100), color(255)</li>\r\n</ul>\r\n<div>Variables are an intrinsic part of programming. They make everything more simple, since the act as a way to save you time from writing code.</div>\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = 400;\r\n\r\nint hght = 400;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n6. Now we can make this a little more interesting! How about we get thing moving.\r\n\r\nInstead of having a static variable, we can tie it to something else and change the way in which the whole script functions. Here, we will tie it the size of the script to a the number of frames. We can also multiply, divide or add to this to control the speed, or we can change the frameRate().\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw(){\r\n\r\nint wdth = frameCount * 2;\r\n\r\nint hght = frameCount * 2;\r\n\r\nstroke(0,255,0);\r\n\r\nstrokeWeight(5);\r\n\r\nfill(0);\r\n\r\nrect(wdth,hght,wdth,hght);\r\n\r\nfill(255,0,0);\r\n\r\nline(wdth,hght,width, height);\r\n\r\npoint(width/2, height/2);\r\n\r\nfill(0,0,255);\r\n\r\nnoStroke();\r\n\r\narc(wdth,hght,wdth,hght, 0, PI*2);\r\n\r\nprintln(wdth +\" / \" + hght);\r\n\r\nfill(100);\r\n\r\ntext(\"I\'m putting some text on \" + wdth +\", \"+hght, wdth, hght);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also make it fade away slowly by adding the a new background with a reduced opacity:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//After void draw() ...\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\n[/cc]\r\n\r\nI do have to warn you that this is not very pretty right now... I know! But we are only concerned on learning how this works, what can be done with it and what mindset we need to approach it.\r\n\r\n7. Looping\r\n\r\nIf you would like the piece to reLoop, you might want to do something like this\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint frame = 0;\r\n\r\nvoid draw(){\r\n\r\nframe++;\r\n\r\nif(frame == (height/2)){\r\nframe = 0;\r\n}\r\n\r\nfill(0, 1);\r\n\r\nrect(0,0, width, height);\r\n\r\nint wdth = frame * 2;\r\n\r\nint hght = frame * 2;\r\n\r\n[/cc]\r\n\r\n7. Quick, the class is about to start! Another example!\r\n\r\nYes, there\'s 10 minutes left for class and I want to show you one last example. This one using a \"for\" statement or what is typically called a loop.\r\n\r\nThere are actually two loops here: the how big int that increases every draw() and the for loop inside the \"for\" statement that draws multiple circles at differente x positions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nsize(1000,1000);\r\n\r\nbackground(0);\r\n\r\n}\r\n\r\nint howBig = 0;\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nfor(int i = 0; i < 10; i++){\r\n\r\narc(i * howBig, height/2, i * howBig, i * howBig, 0 , PI*2);\r\n\r\n}\r\n\r\nhowBig++;\r\n\r\nif(howBig == 200){\r\n\r\nhowBig = 0;\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #1.2 - Basic Geometry and Animation in Processing','','inherit','open','open','','23-revision-13','','','2012-08-24 18:16:45','2012-08-24 18:16:45','',23,'http://thejsj.com/processing/2012/08/24/23-revision-13/',0,'revision','',0),(86,1,'2012-08-22 19:07:37','2012-08-22 19:07:37','1. Setting Up Processing:\r\n<ol>\r\n	<li>Go to <a href=\"http://processing.org/download/\">http://processing.org/download/</a></li>\r\n	<li>Download the Software</li>\r\n	<li>If on a Mac, put it on your Applications folder</li>\r\n	<li>Choose a Folder where ALL of your sketches (Processing scripts) will be. It is good practice to have them all in the same place, for simplicity and for using Processing libraries.</li>\r\n	<li> Once you choose your sketches folder, go to (on a Mac) Processing -&gt; Preferences  and set this folder as your \"Sketchbook Location\". Again, keep all your sketches in the same place. If you want to do some slight changes on a sketch do a \"Save As\" and change it\'s name.</li>\r\n</ol>\r\n<div>2. Setting Up GitHub</div>\r\n<div>\r\n<ol>\r\n	<li>Go to <a href=\"https://github.com/\">https://github.com/</a> and create your account (you\'re smart, you can do this by yourself).</li>\r\n	<li>Download the GitHub Client (program) for Mac or PC and set up your account accordingly.</li>\r\n	<li>Every time you create a new Sketch on GitHub add as a project... or just have one project on GitHub with all your sketches.</li>\r\n</ol>\r\n</div>\r\n&nbsp;','Class #1.1 - Downloading and Installing Processing / GitHub','','inherit','open','open','','12-revision-10','','','2012-08-22 19:07:37','2012-08-22 19:07:37','',12,'http://thejsj.com/processing/2012/08/22/12-revision-10/',0,'revision','',0),(87,1,'2012-08-28 19:20:22','2012-08-28 19:20:22','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" frameborder=\"0\" width=\"800\" height=\"450\"></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.','Sample Work Realized With Processing','','inherit','open','open','','9-revision-5','','','2012-08-28 19:20:22','2012-08-28 19:20:22','',9,'http://thejsj.com/processing/2012/08/28/9-revision-5/',0,'revision','',0),(88,1,'2012-08-28 19:20:51','2012-08-28 19:20:51','<h2>Websites:</h2>\r\nhttp://processing.org/\r\n\r\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\r\n<h2>Books on Learning Processing:</h2>\r\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\r\n\r\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\r\n\r\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\r\n<h2>Websites with Work done on Processing:</h2>\r\nhttp://processing.org/exhibition/\r\n\r\nhttp://www.creativeapplications.net/\r\n<h2>Books with Work done with Processing:</h2>\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\r\n\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\r\n\r\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\r\n\r\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art </a>','Recommended Resources for Processing','','inherit','open','open','','5-revision-4','','','2012-08-28 19:20:51','2012-08-28 19:20:51','',5,'http://thejsj.com/processing/2012/08/28/5-revision-4/',0,'revision','',0),(89,1,'2012-08-30 21:28:15','2012-08-30 21:28:15','Here are some interesting project realized with Processing. This serves as a small introduction to what can be done with Processing.\r\n\r\n1. unnamed soundsculpture - <a id=\"top\" href=\"http://wearechopchop.com/\">We Are Chopchop</a>\r\n<div id=\"header\">\r\n<div> <iframe src=\"http://player.vimeo.com/video/38840688?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe></div>\r\n</div>\r\n2. <a href=\"http://www.thegreeneyl.com/mit-media-lab-identity-1\">MIT Media Lab Identity</a> - The Green Eyl Sengewald Schumacher\r\n\r\n3. Process Compendium - Casey Reas\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22955812?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"375\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22955812\">Process Compendium (Introduction)</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n<iframe src=\"http://player.vimeo.com/video/22186642?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/22186642\">Signals [Crop 2]</a> from <a href=\"http://vimeo.com/reas\">Casey REAS</a> on <a href=\"http://vimeo.com\">Vimeo</a>.\r\n\r\n4. White Glove Tracking -\r\n\r\n<a href=\"http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov\">http://whiteglovetracking.com/downloads/source_code/yelllow_box_WEB.mov</a>\r\n\r\n5. Strata #3 - Quayola\r\n\r\n<iframe src=\"http://player.vimeo.com/video/11777813?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" frameborder=\"0\" width=\"400\" height=\"300\"></iframe>\r\n\r\n6. Solar Rework - Robert Hodgin\r\n\r\n<iframe src=\"http://player.vimeo.com/video/7578615?color=01AAEA\" frameborder=\"0\" width=\"800\" height=\"450\"></iframe>\r\n\r\n<iframe src=\"http://player.vimeo.com/video/43802125?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe>\r\n\r\n<a href=\"http://vimeo.com/43802125\">Annihilation</a> from <a href=\"http://vimeo.com/flight404\">flight404</a> on <a href=\"http://vimeo.com\">Vimeo</a>.','Sample Work Realized With Processing','','inherit','open','open','','9-revision-6','','','2012-08-30 21:28:15','2012-08-30 21:28:15','',9,'http://thejsj.com/processing/2012/08/30/9-revision-6/',0,'revision','',0),(90,1,'2012-08-30 21:28:23','2012-08-30 21:28:23','<h2>Websites:</h2>\r\nhttp://processing.org/\r\n\r\nhttp://www.learningprocessing.com/ | http://www.learningprocessing.com/exercises/\r\n<h2>Books on Learning Processing:</h2>\r\n<a href=\"http://www.amazon.com/Processing-Programming-Handbook-Designers-Artists/dp/0262182629/ref=sr_1_1?ie=UTF8&amp;qid=1345656706&amp;sr=8-1&amp;keywords=Processing\"> Processing: A Programming Handbook for Visual Designers and Artists</a>\r\n\r\n<a href=\"http://www.amazon.com/Learning-Processing-Beginners-Programming-Interaction/dp/0123736021/ref=sr_1_4?ie=UTF8&amp;qid=1345656706&amp;sr=8-4&amp;keywords=Processing\">Learning Processing: A Beginner\'s Guide to Programming Images, Animation, and Interaction</a>\r\n\r\n<a href=\"http://www.amazon.com/Getting-Started-Processing-Casey-Reas/dp/144937980X/ref=sr_1_3?ie=UTF8&amp;qid=1345656706&amp;sr=8-3&amp;keywords=Processing\">Getting Started with Processing</a>\r\n<h2>Websites with Work done on Processing:</h2>\r\nhttp://processing.org/exhibition/\r\n\r\nhttp://www.creativeapplications.net/\r\n<h2>Books with Work done with Processing:</h2>\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Form+Code in Design, Art, and Architecture</a>\r\n\r\n<a href=\"http://www.amazon.com/Form-Code-Design-Architecture-Briefs/dp/1568989377/ref=sr_1_1?ie=UTF8&amp;qid=1345657105&amp;sr=8-1&amp;keywords=form+code\">Generative Design: Visualize, Program, and Create with Processing</a>\r\n\r\n<a href=\"http://www.amazon.com/Data-Flow-Visualizing-Information-Graphic/dp/3899552784/ref=pd_sim_sbs_b_1\">Data Flow 2: Visualizing Information in Graphic Design</a>\r\n\r\n<a href=\"http://www.amazon.com/Generative-Art-Matt-Pearson/dp/1935182625/ref=pd_rhf_se_s_cp_1\">Generative Art </a>','Recommended Resources for Processing','','inherit','open','open','','5-revision-5','','','2012-08-30 21:28:23','2012-08-30 21:28:23','',5,'http://thejsj.com/processing/2012/08/30/5-revision-5/',0,'revision','',0),(187,1,'2012-09-16 22:55:45','2012-09-16 22:55:45','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>','Work Showcase: Class #4','','inherit','open','open','','174-revision-5','','','2012-09-16 22:55:45','2012-09-16 22:55:45','',174,'http://thejsj.com/processing/2012/09/16/174-revision-5/',0,'revision','',0),(192,1,'2012-10-05 22:36:24','2012-10-05 22:36:24','<h4>Anne Lantz</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/dR_ODebwFFw\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/a5.pde\">http://thejsj.com/processing/sketches/a5.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l5.pde\">http://thejsj.com/processing/sketches/l5.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/Y-UBeyANfA4\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/z5.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #5 (Video)','','publish','open','open','','work-showcase-class-5-video','','','2012-10-06 20:59:28','2012-10-06 20:59:28','',0,'http://thejsj.com/processing/?p=192',0,'post','',0),(193,1,'2012-10-03 00:33:32','2012-10-03 00:33:32','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z4/\">http://thejsj.com/processing/sketches/z4/</a>','Work Showcase: Class #4','','inherit','open','open','','174-revision-6','','','2012-10-03 00:33:32','2012-10-03 00:33:32','',174,'http://thejsj.com/processing/2012/10/03/174-revision-6/',0,'revision','',0),(194,1,'2012-10-05 22:35:54','2012-10-05 22:35:54','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #4','','inherit','open','open','','174-revision-7','','','2012-10-05 22:35:54','2012-10-05 22:35:54','',174,'http://thejsj.com/processing/2012/10/05/174-revision-7/',0,'revision','',0),(195,1,'2012-10-05 22:36:07','2012-10-05 22:36:07','<h4>Anne Lantz</h4>\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\n<h4>Luke Unger</h4>\nSound:\n\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\n\nImage:\n\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\n<h4>Zack Kojoyian</h4>\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #4','','inherit','open','open','','192-revision','','','2012-10-05 22:36:07','2012-10-05 22:36:07','',192,'http://thejsj.com/processing/2012/10/05/192-revision/',0,'revision','',0),(200,1,'2012-10-05 22:38:21','2012-10-05 22:38:21','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a5.pde\">http://thejsj.com/processing/sketches/a5.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l5.pde\">http://thejsj.com/processing/sketches/l5.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z5.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #5 (Video)','','inherit','open','open','','192-revision-3','','','2012-10-05 22:38:21','2012-10-05 22:38:21','',192,'http://thejsj.com/processing/2012/10/05/192-revision-3/',0,'revision','',0),(196,1,'2012-10-05 22:37:26','2012-10-05 22:37:26','<h4>Anne Lantz</h4>\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a5.pde</a> (Source Code)\n<h4>Luke Unger</h4>\n<a href=\"http://thejsj.com/processing/sketches/l5.pde\">http://thejsj.com/processing/sketches/l5.pde</a> (Source Code)\n<h4>Zack Kojoyian</h4>\n<a href=\"http://thejsj.com/processing/sketches/z5.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #5 (Video)','','inherit','open','open','','192-autosave','','','2012-10-05 22:37:26','2012-10-05 22:37:26','',192,'http://thejsj.com/processing/2012/10/05/192-autosave/',0,'revision','',0),(197,1,'2012-10-05 22:38:17','2012-10-05 22:38:17','<h4>Anne Lantz</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/6JgwykvarIM\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/a6.pde\">http://thejsj.com/processing/sketches/a6.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/ACnlAg086vM\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/l6.pde\">http://thejsj.com/processing/sketches/l6.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/j6PRv_o3peM\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/z6.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','publish','open','open','','work-showcase-class-6-final-project','','','2012-10-06 20:58:28','2012-10-06 20:58:28','',0,'http://thejsj.com/processing/?p=197',0,'post','',0),(198,1,'2012-10-05 22:37:51','2012-10-05 22:37:51','<h4>Anne Lantz</h4>\n<a href=\"http://thejsj.com/processing/sketches/a5.pde\">http://thejsj.com/processing/sketches/a5.pde</a> (Source Code)\n<h4>Luke Unger</h4>\n<a href=\"http://thejsj.com/processing/sketches/l5.pde\">http://thejsj.com/processing/sketches/l5.pde</a> (Source Code)\n<h4>Zack Kojoyian</h4>\n<a href=\"http://thejsj.com/processing/sketches/z5.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','inherit','open','open','','197-revision','','','2012-10-05 22:37:51','2012-10-05 22:37:51','',197,'http://thejsj.com/processing/2012/10/05/197-revision/',0,'revision','',0),(199,1,'2012-10-05 22:36:24','2012-10-05 22:36:24','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #5 (Video)','','inherit','open','open','','192-revision-2','','','2012-10-05 22:36:24','2012-10-05 22:36:24','',192,'http://thejsj.com/processing/2012/10/05/192-revision-2/',0,'revision','',0),(201,1,'2012-10-06 20:53:59','2012-10-06 20:53:59','<h4>Anne Lantz</h4>\n<pre>[youtube value=\"http://www.youtube.com/watch?v=6JgwykvarIM\"]</pre>\n<a href=\"http://thejsj.com/processing/sketches/a6.pde\">http://thejsj.com/processing/sketches/a6.pde</a> (Source Code)\n<h4>Luke Unger</h4>\n<a href=\"http://thejsj.com/processing/sketches/l6.pde\">http://thejsj.com/processing/sketches/l6.pde</a> (Source Code)\n<h4>Zack Kojoyian</h4>\n<a href=\"http://thejsj.com/processing/sketches/z6.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','inherit','open','open','','197-autosave','','','2012-10-06 20:53:59','2012-10-06 20:53:59','',197,'http://thejsj.com/processing/2012/10/06/197-autosave/',0,'revision','',0),(202,1,'2012-10-05 22:38:17','2012-10-05 22:38:17','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a6.pde\">http://thejsj.com/processing/sketches/a6.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l6.pde\">http://thejsj.com/processing/sketches/l6.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z6.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','inherit','open','open','','197-revision-2','','','2012-10-05 22:38:17','2012-10-05 22:38:17','',197,'http://thejsj.com/processing/2012/10/05/197-revision-2/',0,'revision','',0),(203,1,'2012-10-06 20:52:56','2012-10-06 20:52:56','<h4>Anne Lantz</h4>\r\n<pre>[youtube value=\"http://www.youtube.com/watch?v=6JgwykvarIM\"]</pre>\r\n<a href=\"http://thejsj.com/processing/sketches/a6.pde\">http://thejsj.com/processing/sketches/a6.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l6.pde\">http://thejsj.com/processing/sketches/l6.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z6.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','inherit','open','open','','197-revision-3','','','2012-10-06 20:52:56','2012-10-06 20:52:56','',197,'http://thejsj.com/processing/2012/10/06/197-revision-3/',0,'revision','',0),(204,1,'2012-10-06 20:57:17','2012-10-06 20:57:17','<h4>Anne Lantz</h4>\r\n<pre>[youtube value=\"http://www.youtube.com/watch?v=6JgwykvarIM\"]</pre>\r\n<a href=\"http://thejsj.com/processing/sketches/a6.pde\">http://thejsj.com/processing/sketches/a6.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l6.pde\">http://thejsj.com/processing/sketches/l6.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z6.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','inherit','open','open','','197-revision-4','','','2012-10-06 20:57:17','2012-10-06 20:57:17','',197,'http://thejsj.com/processing/2012/10/06/197-revision-4/',0,'revision','',0),(205,1,'2012-10-06 20:57:37','2012-10-06 20:57:37','<h4>Anne Lantz</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/6JgwykvarIM\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/a6.pde\">http://thejsj.com/processing/sketches/a6.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l6.pde\">http://thejsj.com/processing/sketches/l6.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z6.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #6 (Final Project)','','inherit','open','open','','197-revision-5','','','2012-10-06 20:57:37','2012-10-06 20:57:37','',197,'http://thejsj.com/processing/2012/10/06/197-revision-5/',0,'revision','',0),(206,1,'2012-10-05 22:38:27','2012-10-05 22:38:27','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a5.pde\">http://thejsj.com/processing/sketches/a5.pde</a> (Source Code)\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l5.pde\">http://thejsj.com/processing/sketches/l5.pde</a> (Source Code)\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z5.pde\">http://thejsj.com/processing/sketches/z5.pde</a> (Source Code)','Work Showcase: Class #5 (Video)','','inherit','open','open','','192-revision-4','','','2012-10-05 22:38:27','2012-10-05 22:38:27','',192,'http://thejsj.com/processing/2012/10/05/192-revision-4/',0,'revision','',0),(207,1,'2012-10-05 22:36:17','2012-10-05 22:36:17','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\r\n<h4>Zack Kojoyian</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #4 (Sound & Image)','','inherit','open','open','','174-revision-8','','','2012-10-05 22:36:17','2012-10-05 22:36:17','',174,'http://thejsj.com/processing/2012/10/05/174-revision-8/',0,'revision','',0),(208,1,'2012-10-06 21:00:34','2012-10-06 21:00:34','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\r\n<h4>Zack Kojoyian</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/06Xgzw1ea-4\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #4 (Sound & Image)','','inherit','open','open','','174-revision-9','','','2012-10-06 21:00:34','2012-10-06 21:00:34','',174,'http://thejsj.com/processing/2012/10/06/174-revision-9/',0,'revision','',0),(107,1,'2012-09-01 21:42:59','2012-09-01 21:42:59','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #1','','publish','open','open','','107','','','2012-09-16 21:54:48','2012-09-16 21:54:48','',0,'http://thejsj.com/processing/?p=107',0,'post','',0),(108,1,'2012-09-01 21:42:34','2012-09-01 21:42:34','','Auto Draft','','inherit','open','open','','107-revision','','','2012-09-01 21:42:34','2012-09-01 21:42:34','',107,'http://thejsj.com/processing/2012/09/01/107-revision/',0,'revision','',0),(109,1,'2012-09-01 21:53:48','2012-09-01 21:53:48','<h4>Anne Lantz</h4>\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Chris Costello</h4>\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Luke Unger</h4>\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Zack Kojoyian</h4>\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','Class 1: Work Showcase','','inherit','open','open','','107-autosave','','','2012-09-01 21:53:48','2012-09-01 21:53:48','',107,'http://thejsj.com/processing/2012/09/01/107-autosave/',0,'revision','',0),(110,1,'2012-09-01 21:42:59','2012-09-01 21:42:59','<a href=\"/hello.html\">hello</a>','','','inherit','open','open','','107-revision-2','','','2012-09-01 21:42:59','2012-09-01 21:42:59','',107,'http://thejsj.com/processing/2012/09/01/107-revision-2/',0,'revision','',0),(112,1,'2012-09-01 21:51:51','2012-09-01 21:51:51','Anne Lantz \r\n\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\r\n\r\nChris Costello\r\n\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\r\n\r\nLuke Unger\r\n\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\r\n\r\nZack Kojoyian\r\n\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','','','inherit','open','open','','107-revision-4','','','2012-09-01 21:51:51','2012-09-01 21:51:51','',107,'http://thejsj.com/processing/2012/09/01/107-revision-4/',0,'revision','',0),(111,1,'2012-09-01 21:49:42','2012-09-01 21:49:42','<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\">\r\n<p>Your browser does not support the canvas tag.</p>\r\n<!-- Note: you can put any alternative content here. -->\r\n</canvas>\r\n\r\nChris\r\n\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\">\r\n<p>Your browser does not support the canvas tag.</p>\r\n<!-- Note: you can put any alternative content here. -->\r\n</canvas>\r\n\r\nLuke\r\n\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\">\r\n<p>Your browser does not support the canvas tag.</p>\r\n<!-- Note: you can put any alternative content here. -->\r\n</canvas>\r\n\r\nZack\r\n\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\">\r\n<p>Your browser does not support the canvas tag.</p>\r\n<!-- Note: you can put any alternative content here. -->\r\n</canvas>','','','inherit','open','open','','107-revision-3','','','2012-09-01 21:49:42','2012-09-01 21:49:42','',107,'http://thejsj.com/processing/2012/09/01/107-revision-3/',0,'revision','',0),(113,1,'2012-09-01 21:52:07','2012-09-01 21:52:07','Anne Lantz \r\n\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\r\n\r\nChris Costello\r\n\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\r\n\r\nLuke Unger\r\n\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\r\n\r\nZack Kojoyian\r\n\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','Class 1: Work Showcase','','inherit','open','open','','107-revision-5','','','2012-09-01 21:52:07','2012-09-01 21:52:07','',107,'http://thejsj.com/processing/2012/09/01/107-revision-5/',0,'revision','',0),(115,1,'2012-09-01 21:52:46','2012-09-01 21:52:46','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','Class 1: Work Showcase','','inherit','open','open','','107-revision-6','','','2012-09-01 21:52:46','2012-09-01 21:52:46','',107,'http://thejsj.com/processing/2012/09/01/107-revision-6/',0,'revision','',0),(116,1,'2012-09-04 16:25:34','2012-09-04 16:25:34','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing itself or in your computer. If you move your mouse outisde the sketch, your sketch won\'t register that.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nprintln(\"MousePressed\");\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\nprintln(\"MouseReleased\");\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nprintln(\"MouseMoved\");\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\nprintln(\"Mouse Dragged\");\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nprintln(\"Key Pressed\");\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that you know the basic interaction functions, you can use them to change and alter what is going on in your sketch. As a basic example, we can say that if you click on the sketch, the background will re-generate and a black dot will show up where you clicked. We\'ll also print the position of the mouse.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\n//we can\'t really see that, so let\'s draw a crosshairs\r\n\r\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\r\n\r\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThe same thing can be done with mouseMoved(). The mouseX position (position along the X axis) and mouseY (position along the Y axis) are universal to all mouse functions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\n//we can\'t really see that, so let\'s draw a crosshairs\r\n\r\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\r\n\r\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nShape can also be altered this way. You can change the size of an element with just the movement of the move. In this example, the Y and X position are used to determine how much of the sketch screen are covered by a rectangle.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nbackground(0);\r\n\r\nnoFill();\r\n\r\nstroke(255);\r\n\r\nint xSize = width -mouseX;\r\n\r\nint ySize = height - mouseY;\r\n\r\nint Xposition = width/2 - xSize/2 ;\r\n\r\nint Yposition = height/2 - ySize/2 ;\r\n\r\nrect(Xpossition, Yposition, xSize, ySize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo, by using the background() function (and maybe the rect() function) you can create a sketch that depends completely on the interaction of the user.\r\n\r\nYou can also turn your sketch into a keyboard, using keyPressed(). That would work something like this.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString theText = \"\";\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(0);\r\n\r\ntext(theText, 20,20, 400, 400);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\ntheText = theText + key;\r\n\r\nprintln(theText);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf we were to include a \"backspace\" function, we would try to recognize that key and the remove the last characther each time that key is presses. More specifically, this is done by getting the length of a string and the getting a substring that is of length string.length() - 1.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString theText = \"\";\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfill(0);\r\n\r\ntext(theText, 20,20, 400, 400);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(keyCode == 8 &amp;&amp; theText.length() &gt; 0){\r\n\r\ntheText = theText.substring( 0, theText.length()-1 );\r\n\r\n}\r\nelse {\r\n\r\ntheText = theText + key;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWith these interaction functions we can all turn processing into a tool for drawing simple lines.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nboolean firstTime = true;\r\n\r\nint xPos;\r\n\r\nint yPos;\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// Nothing here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nif(firstTime){\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\nfirstTime = false;\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(0);\r\n\r\nline(xPos, yPos, mouseX, mouseY);\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class 3.1 - Interaction with Processing (Part 1/2)','','publish','open','open','','class-3-interaction-with-processing','','','2012-09-04 17:02:25','2012-09-04 17:02:25','',0,'http://thejsj.com/processing/?p=116',0,'post','',0),(117,1,'2012-09-04 16:24:55','2012-09-04 16:24:55','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\n//Write your setup here\n\n}\n\nvoid draw(){\n\n//Write your draw here\n\n}\n\nvoid mousePressed(){\n\n//When the mouse is pressed this event is triggered\n\n}\n\nvoid mouseReleased(){\n\n//When any mouse button is released, this event is triggered\n\n}\n\nvoid mouseMoved(){\n\n//When the mouse is moved, this event is triggered\n\n}\n\nvoid mouseDragged(){\n\n// When the mouse is dragged... you get it\n\n}\n\nvoid keyPressed(){\n\n//When any key on the keyboard is pressed this event is triggered\n\n}\n\n[/cc]\n\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing i','Class 3 - Interaction with Processing','','inherit','open','open','','116-revision','','','2012-09-04 16:24:55','2012-09-04 16:24:55','',116,'http://thejsj.com/processing/2012/09/04/116-revision/',0,'revision','',0),(118,1,'2012-09-04 16:59:33','2012-09-04 16:59:33','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\n//Write your setup here\n\n}\n\nvoid draw(){\n\n//Write your draw here\n\n}\n\nvoid mousePressed(){\n\n//When the mouse is pressed this event is triggered\n\n}\n\nvoid mouseReleased(){\n\n//When any mouse button is released, this event is triggered\n\n}\n\nvoid mouseMoved(){\n\n//When the mouse is moved, this event is triggered\n\n}\n\nvoid mouseDragged(){\n\n// When the mouse is dragged... you get it\n\n}\n\nvoid keyPressed(){\n\n//When any key on the keyboard is pressed this event is triggered\n\n}\n\n[/cc]\n\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing itself or in your computer. If you move your mouse outisde the sketch, your sketch won\'t register that.\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\n//Write your setup here\n\n}\n\nvoid draw(){\n\n//Write your draw here\n\n}\n\nvoid mousePressed(){\n\nprintln(\"MousePressed\");\n\n//When the mouse is pressed this event is triggered\n\n}\n\nvoid mouseReleased(){\n\nprintln(\"MouseReleased\");\n\n//When any mouse button is released, this event is triggered\n\n}\n\nvoid mouseMoved(){\n\nprintln(\"MouseMoved\");\n\n//When the mouse is moved, this event is triggered\n\n}\n\nvoid mouseDragged(){\n\nprintln(\"Mouse Dragged\");\n\n// When the mouse is dragged... you get it\n\n}\n\nvoid keyPressed(){\n\nprintln(\"Key Pressed\");\n\n//When any key on the keyboard is pressed this event is triggered\n\n}\n\n[/cc]\n\nNow that you know the basic interaction functions, you can use them to change and alter what is going on in your sketch. As a basic example, we can say that if you click on the sketch, the background will re-generate and a black dot will show up where you clicked. We\'ll also print the position of the mouse.\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mousePressed(){\n\nbackground(random(0,255), random(0,255), random(0,255));\n\nstroke(0);\n\npoint(mouseX, mouseY);\n\n//we can\'t really see that, so let\'s draw a crosshairs\n\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\n\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\n\nprintln(mouseX + \" / \" + mouseY);\n\n}\n\n[/cc]\n\nThe same thing can be done with mouseMoved(). The mouseX position (position along the X axis) and mouseY (position along the Y axis) are universal to all mouse functions.\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mouseMoved(){\n\nbackground(random(0,255), random(0,255), random(0,255));\n\nstroke(0);\n\npoint(mouseX, mouseY);\n\n//we can\'t really see that, so let\'s draw a crosshairs\n\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\n\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\n\nprintln(mouseX + \" / \" + mouseY);\n\n}\n\n[/cc]\n\nShape can also be altered this way. You can change the size of an element with just the movement of the move. In this example, the Y and X position are used to determine how much of the sketch screen are covered by a rectangle.\n\n[cc lang=\"processing\"]\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mouseMoved(){\n\nbackground(0);\n\nnoFill();\n\nstroke(255);\n\nint xSize = width -mouseX;\n\nint ySize = height - mouseY;\n\nint Xposition = width/2 - xSize/2 ;\n\nint Yposition = height/2 - ySize/2 ;\n\nrect(Xpossition, Yposition, xSize, ySize);\n\n}\n\n[/cc]\n\nSo, by using the background() function (and maybe the rect() function) you can create a sketch that depends completely on the interaction of the user.\n\nYou can also turn your sketch into a keyboard, using keyPressed(). That would work something like this.\n\n[cc lang=\"processing\"]\n\nString theText = \"\";\n\nvoid setup(){\n\nsize(400, 400);\n\nbackground(255);\n\n}\n\nvoid draw(){\n\nfill(0);\n\ntext(theText, 20,20, 400, 400);\n\n}\n\nvoid keyPressed(){\n\ntheText = theText + key;\n\nprintln(theText);\n\n}\n\n[/cc]\n\nIf we were to include a \"backspace\" function, we would try to recognize that key and the remove the last characther each time that key is presses. More specifically, this is done by getting the length of a string and the getting a substring that is of length string.length() - 1.\n\n[cc lang=\"processing\"]\n\nString theText = \"\";\n\nvoid setup(){\n\nsize(400, 400);\n\nbackground(255);\n\n}\n\nvoid draw(){\n\nbackground(255);\n\nfill(0);\n\ntext(theText, 20,20, 400, 400);\n\n}\n\nvoid keyPressed(){\n\nif(keyCode == 8 &amp;&amp; theText.length() &gt; 0){\n\ntheText = theText.substring( 0, theText.length()-1 );\n\n}\nelse {\n\ntheText = theText + key;\n\n}\n\n}\n\n[/cc]\n\nWith these interaction functions we can all turn processing into a tool for drawing simple lines.\n\n[cc lang=\"processing\"]\n\nboolean firstTime = true;\n\nint xPos;\n\nint yPos;\n\nvoid setup(){\n\nsize(400, 400);\n\nbackground(255);\n\n}\n\nvoid draw(){\n\n// Nothing here\n\n}\n\nvoid mousePressed(){\n\nif(firstTime){\n\nxPos = mouseX;\n\nyPos = mouseY;\n\nfirstTime = false;\n\n}\n\nelse {\n\nstroke(0);\n\nline(xPos, yPos, mouseX, mouseY);\n\nxPos = mouseX;\n\nyPos = mouseY;\n\n}\n\n}\n\n[/cc]\n\nThis is very useful, but also very simple. We can\'t really do much with it since the last position is always tied to the previous position. Here is were\n\n&nbsp;\n\n&nbsp;','Class 3.1 - Interaction with Processing (Part 1/2)','','inherit','open','open','','116-autosave','','','2012-09-04 16:59:33','2012-09-04 16:59:33','',116,'http://thejsj.com/processing/2012/09/04/116-autosave/',0,'revision','',0),(119,1,'2012-09-04 16:25:34','2012-09-04 16:25:34','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing itself or in your computer. If you move your mouse outisde the sketch, your sketch won\'t register that.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nprintln(\"MousePressed\");\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\nprintln(\"MouseReleased\");\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nprintln(\"MouseMoved\");\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\nprintln(\"Mouse Dragged\");\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nprintln(\"Key Pressed\");\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]','Class 3 - Interaction with Processing','','inherit','open','open','','116-revision-2','','','2012-09-04 16:25:34','2012-09-04 16:25:34','',116,'http://thejsj.com/processing/2012/09/04/116-revision-2/',0,'revision','',0),(120,1,'2012-09-04 16:29:07','2012-09-04 16:29:07','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing itself or in your computer. If you move your mouse outisde the sketch, your sketch won\'t register that.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nprintln(\"MousePressed\");\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\nprintln(\"MouseReleased\");\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nprintln(\"MouseMoved\");\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\nprintln(\"Mouse Dragged\");\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nprintln(\"Key Pressed\");\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that you know the basic interaction functions, you can use them to change and alter what is going on in your sketch. As a basic example, we can say that if you click on the sketch, the background will re-generate and a black dot will show up where you clicked. We\'ll also print the position of the mouse.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class 3 - Interaction with Processing','','inherit','open','open','','116-revision-3','','','2012-09-04 16:29:07','2012-09-04 16:29:07','',116,'http://thejsj.com/processing/2012/09/04/116-revision-3/',0,'revision','',0),(121,1,'2012-09-04 16:56:21','2012-09-04 16:56:21','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing itself or in your computer. If you move your mouse outisde the sketch, your sketch won\'t register that.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nprintln(\"MousePressed\");\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\nprintln(\"MouseReleased\");\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nprintln(\"MouseMoved\");\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\nprintln(\"Mouse Dragged\");\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nprintln(\"Key Pressed\");\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that you know the basic interaction functions, you can use them to change and alter what is going on in your sketch. As a basic example, we can say that if you click on the sketch, the background will re-generate and a black dot will show up where you clicked. We\'ll also print the position of the mouse.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\n//we can\'t really see that, so let\'s draw a crosshairs\r\n\r\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\r\n\r\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThe same thing can be done with mouseMoved(). The mouseX position (position along the X axis) and mouseY (position along the Y axis) are universal to all mouse functions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\n//we can\'t really see that, so let\'s draw a crosshairs\r\n\r\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\r\n\r\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nShape can also be altered this way. You can change the size of an element with just the movement of the move. In this example, the Y and X position are used to determine how much of the sketch screen are covered by a rectangle.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nbackground(0);\r\n\r\nnoFill();\r\n\r\nstroke(255);\r\n\r\nint xSize = width -mouseX;\r\n\r\nint ySize = height - mouseY;\r\n\r\nint Xposition = width/2 - xSize/2 ;\r\n\r\nint Yposition = height/2 - ySize/2 ;\r\n\r\nrect(Xpossition, Yposition, xSize, ySize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo, by using the background() function (and maybe the rect() function) you can create a sketch that depends completely on the interaction of the user.\r\n\r\nYou can also turn your sketch into a keyboard, using keyPressed(). That would work something like this.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString theText = \"\";\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(0);\r\n\r\ntext(theText, 20,20, 400, 400);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\ntheText = theText + key;\r\n\r\nprintln(theText);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf we were to include a \"backspace\" function, we would try to recognize that key and the remove the last characther each time that key is presses. More specifically, this is done by getting the length of a string and the getting a substring that is of length string.length() - 1.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString theText = \"\";\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfill(0);\r\n\r\ntext(theText, 20,20, 400, 400);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(keyCode == 8 &amp;&amp; theText.length() &gt; 0){\r\n\r\ntheText = theText.substring( 0, theText.length()-1 );\r\n\r\n}\r\nelse {\r\n\r\ntheText = theText + key;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWith these interaction functions we can all turn processing into a tool for drawing simple lines.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nboolean firstTime = true;\r\n\r\nint xPos;\r\n\r\nint yPos;\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// Nothing here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nif(firstTime){\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\nfirstTime = false;\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(0);\r\n\r\nline(xPos, yPos, mouseX, mouseY);\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class 3 - Interaction with Processing','','inherit','open','open','','116-revision-4','','','2012-09-04 16:56:21','2012-09-04 16:56:21','',116,'http://thejsj.com/processing/2012/09/04/116-revision-4/',0,'revision','',0),(123,1,'2012-09-05 02:30:05','2012-09-05 02:30:05','Just as two quick examples, I\'ll explain how to use interactions and an array list in a way that shows the possibilities and usefuleness of an array list.\r\n\r\nThe reason array lists can be useful is that it can add, remove and display all nodes on the fly. For example, we can create a arraylist of lines that will be later populated:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nArrayList liness;\r\n\r\nboolean first = true;\r\n\r\nint xPos;\r\n\r\nint yPos;\r\n\r\nvoid setup(){\r\n\r\nsize(400,400);\r\n\r\nbackground(255);\r\n\r\nliness = new ArrayList();\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfor(int i = 0; i &lt; liness.size(); i++){\r\n\r\nint[] arr = (int[]) liness.get(i);\r\n\r\nstroke(0);\r\n\r\nline(arr[0], arr[1], arr[2], arr[3]);\r\n\r\n//println(i + \" // \" + arr[0]);\r\n\r\n}\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nif(first){\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\nfirst = false;\r\n\r\n}\r\n\r\nelse{\r\n\r\nint[] numbers = { xPos, yPos, mouseX, mouseY };\r\n\r\nliness.add( numbers );\r\n\r\nprintln(\"ADDED: \" + numbers[2]);\r\n\r\nfirst = true;\r\n\r\n}\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nif(!first){\r\n\r\nstroke(0,50);\r\n\r\nline(xPos, yPos, mouseX, mouseY);\r\n\r\n}\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(keyCode == 8){\r\n\r\nliness.remove(liness.size() - 1);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThere are several reasons why an arrayList is useful here.\r\n<ol>\r\n	<li>This array is constantlyre-sizing, so it\'s very useful to have an array that adjusts size( .add() and .remove()) than an empty array in which you have to check if it\'s empty or not or something similar.</li>\r\n	<li>Through drawing a background and then drawing all the stored lines, we are able to then create a \"in between\" state that automatically disappears and we are able to easily delete lines. This is much more effective than the previous approach which just \"drew the line\". This one stores the lines and is always drawing the whole array, so you only have to change the array and the draw functions takes care of everything else.</li>\r\n	<li>Array list, because everything is re-drawn, gives us the possibility of creating a \"hover\" state that draw a line between the 1st point and the current mouse position.</li>\r\n</ol>\r\nThe other example that I wanted to show is extending keyPressed() interactions a bit more. In this example we will create a simple cross-hairs that can be move around the screen. Use the arrows to move it across the screen.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint xPos;\r\n\r\nint yPos;\r\n\r\nvoid setup(){\r\n\r\nsize(400,400);\r\n\r\nbackground(255);\r\n\r\nxPos = width/2;\r\n\r\nyPos = height/2;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nstroke(0);\r\n\r\nline(xPos - 5, yPos, xPos + 5, yPos);\r\n\r\nline(xPos, yPos - 5, xPos, yPos + 5);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nprintln(keyCode);\r\n\r\nif(keyCode == 37){\r\n\r\nxPos--;\r\n\r\n}\r\n\r\nelse if(keyCode == 39){\r\n\r\nxPos++;\r\n\r\n}\r\n\r\nelse if(keyCode == 38){\r\n\r\nyPos--;\r\n\r\n}\r\n\r\nelse if(keyCode == 40){\r\n\r\nyPos++;\r\n\r\n}\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class 3.2 - Array Lists and other keyPressed interactions','','publish','open','open','','class-3-2-array-lists-and-other-keypressed-interactions','','','2012-09-05 02:30:05','2012-09-05 02:30:05','',0,'http://thejsj.com/processing/?p=123',0,'post','',0),(122,1,'2012-09-04 16:56:45','2012-09-04 16:56:45','When talking about interaction in Processing, we are referring to ways in which users can somehow change what is going on in the sketch. This is done mainly(at least for now) with two types of interaction: mouse and keyboard. Here are all the relevant functions related to interaction (note that the are functions separate from void draw() and void setup):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf you don\'t believe me, you can test it out using the following code. Keep in  mind that these functions only track what is happening in the sketch. Not what is happening in Processing itself or in your computer. If you move your mouse outisde the sketch, your sketch won\'t register that.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\n//Write your setup here\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n//Write your draw here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nprintln(\"MousePressed\");\r\n\r\n//When the mouse is pressed this event is triggered\r\n\r\n}\r\n\r\nvoid mouseReleased(){\r\n\r\nprintln(\"MouseReleased\");\r\n\r\n//When any mouse button is released, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nprintln(\"MouseMoved\");\r\n\r\n//When the mouse is moved, this event is triggered\r\n\r\n}\r\n\r\nvoid mouseDragged(){\r\n\r\nprintln(\"Mouse Dragged\");\r\n\r\n// When the mouse is dragged... you get it\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nprintln(\"Key Pressed\");\r\n\r\n//When any key on the keyboard is pressed this event is triggered\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that you know the basic interaction functions, you can use them to change and alter what is going on in your sketch. As a basic example, we can say that if you click on the sketch, the background will re-generate and a black dot will show up where you clicked. We\'ll also print the position of the mouse.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\n//we can\'t really see that, so let\'s draw a crosshairs\r\n\r\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\r\n\r\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThe same thing can be done with mouseMoved(). The mouseX position (position along the X axis) and mouseY (position along the Y axis) are universal to all mouse functions.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nbackground(random(0,255), random(0,255), random(0,255));\r\n\r\nstroke(0);\r\n\r\npoint(mouseX, mouseY);\r\n\r\n//we can\'t really see that, so let\'s draw a crosshairs\r\n\r\nline(mouseX - 5, mouseY, mouseX+ 5, mouseY);\r\n\r\nline(mouseX, mouseY + 5, mouseX, mouseY - 5);\r\n\r\nprintln(mouseX + \" / \" + mouseY);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nShape can also be altered this way. You can change the size of an element with just the movement of the move. In this example, the Y and X position are used to determine how much of the sketch screen are covered by a rectangle.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nbackground(0);\r\n\r\nnoFill();\r\n\r\nstroke(255);\r\n\r\nint xSize = width -mouseX;\r\n\r\nint ySize = height - mouseY;\r\n\r\nint Xposition = width/2 - xSize/2 ;\r\n\r\nint Yposition = height/2 - ySize/2 ;\r\n\r\nrect(Xpossition, Yposition, xSize, ySize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nSo, by using the background() function (and maybe the rect() function) you can create a sketch that depends completely on the interaction of the user.\r\n\r\nYou can also turn your sketch into a keyboard, using keyPressed(). That would work something like this.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString theText = \"\";\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nfill(0);\r\n\r\ntext(theText, 20,20, 400, 400);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\ntheText = theText + key;\r\n\r\nprintln(theText);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nIf we were to include a \"backspace\" function, we would try to recognize that key and the remove the last characther each time that key is presses. More specifically, this is done by getting the length of a string and the getting a substring that is of length string.length() - 1.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nString theText = \"\";\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfill(0);\r\n\r\ntext(theText, 20,20, 400, 400);\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(keyCode == 8 &amp;&amp; theText.length() &gt; 0){\r\n\r\ntheText = theText.substring( 0, theText.length()-1 );\r\n\r\n}\r\nelse {\r\n\r\ntheText = theText + key;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWith these interaction functions we can all turn processing into a tool for drawing simple lines.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nboolean firstTime = true;\r\n\r\nint xPos;\r\n\r\nint yPos;\r\n\r\nvoid setup(){\r\n\r\nsize(400, 400);\r\n\r\nbackground(255);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// Nothing here\r\n\r\n}\r\n\r\nvoid mousePressed(){\r\n\r\nif(firstTime){\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\nfirstTime = false;\r\n\r\n}\r\n\r\nelse {\r\n\r\nstroke(0);\r\n\r\nline(xPos, yPos, mouseX, mouseY);\r\n\r\nxPos = mouseX;\r\n\r\nyPos = mouseY;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class 3.1 - Interaction with Processing (Part 1/2)','','inherit','open','open','','116-revision-5','','','2012-09-04 16:56:45','2012-09-04 16:56:45','',116,'http://thejsj.com/processing/2012/09/04/116-revision-5/',0,'revision','',0),(124,1,'2012-09-05 02:25:17','2012-09-05 02:25:17','Just as two quick examples, I\'ll explain how to use interactions and an array list in a way that shows the possibilities and usefuleness of an array list.\n\nThe reason array lists can be useful is that it can add, remove and display all nodes on the fly. For example, we can create a arraylist of lines that will be later populated:\n\n[cc lang=\"processing\"]\n\nArrayList liness;\n\nboolean first = true;\n\nint xPos;\n\nint yPos;\n\nvoid setup(){\n\nsize(400,400);\n\nbackground(255);\n\nliness = new ArrayList();\n\n}\n\nvoid draw(){\n\nbackground(255);\n\nfor(int i = 0; i &lt; liness.size(); i++){\n\nint[] arr = (int[]) liness.get(i);\n\nstroke(0);\n\nline(arr[0], arr[1], arr[2], arr[3]);\n\n//println(i + \" // \" + arr[0]);\n\n}\n\n}\n\nvoid mousePressed(){\n\nif(first){\n\nxPos = mouseX;\n\nyPos = mouseY;\n\nfirst = false;\n\n}\n\nelse{\n\nint[] numbers = { xPos, yPos, mouseX, mouseY };\n\nliness.add( numbers );\n\nprintln(\"ADDED: \" + numbers[2]);\n\nfirst = true;\n\n}\n\n}\n\nvoid mouseMoved(){\n\nif(!first){\n\nstroke(0,50);\n\nline(xPos, yPos, mouseX, mouseY);\n\n}\n\n}\n\nvoid keyPressed(){\n\nif(keyCode == 8){\n\nliness.remove(liness.size() - 1);\n\n}\n\n}\n\n[/cc]\n\nThere are several reasons why an arrayList is useful here.\n<ol>\n	<li>This array is constantlyre-sizing, so it\'s very useful to have an array that adjusts size( .add() and .remove()) than an empty array in which you have to check if it\'s empty or not or something similar.</li>\n	<li>Through drawing a background and then drawing all the stored lines, we are able to then create a \"in between\" state that automatically disappears and we are able to easily delete lines. This is much more effective than the previous approach which just \"drew the line\". This one stores the lines and is always drawing the whole array, so you only have to change the array and the draw functions takes care of everything else.</li>\n	<li>Array list, because everything is re-drawn, gives us the possibility of creating a \"hover\" state that draw a line between the 1st point and the current mouse position.</li>\n</ol>\nThe other example that I wanted to show is extending keyPressed() interactions a bit more. In this example we will create a simple cross-hairs that can be move around the screen.\n\n&nbsp;','Class 3.2 - Array Lists and other keyPressed interactions','','inherit','open','open','','123-revision','','','2012-09-05 02:25:17','2012-09-05 02:25:17','',123,'http://thejsj.com/processing/2012/09/05/123-revision/',0,'revision','',0),(125,1,'2012-09-08 18:44:19','2012-09-08 18:44:19','For working with images there are several things that need to be done first. First of all, you need to have the actual file for the image. This file should be saved in a new directory called \"data\" that has to be created in the same directory(\"folder\") as the sketch.\r\n\r\nHere is a zip with an example sketch and some images that we will be using on this lesson.\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample-2.zip\">photoExample.zip</a>\r\n\r\nAfter this you actually have to load the Image in the sketch. Here\'s and example that loads the image and then displays it with the appropriate proportion.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nPImage img;\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400,400);\r\n\r\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nimage(img, 0, 0, width, width * (img.width/img.height));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAfter this you can mess around with images in multiple ways. Here the image grows and shrinks in a loop:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nPImage img;\r\n\r\nboolean shrink;\r\n\r\nint imgW;\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400,400);\r\n\r\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\r\n\r\nshrink = false;\r\n\r\nimgW = 0;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nif(shrink){\r\n\r\nimgW--;\r\n\r\nif(imgW &lt;= 0){\r\n\r\nimgW = 0;\r\n\r\nshrink = false;\r\n\r\n}\r\n\r\n}\r\n\r\nelse {\r\n\r\nimgW++;\r\n\r\nif(imgW &gt;= width){\r\n\r\nimgW = width;\r\n\r\nshrink = true;\r\n\r\n}\r\n\r\n}\r\n\r\nint imgH = imgW * (img.width/img.height);\r\n\r\nimage(img, width/2 - imgW/2, height/2 - imgH/2, imgW, imgH);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAs you can see, the previous image stays on the sketch creating an instresting visual effect. This can me eliminated with a simple background() function.\r\n\r\nYou can alter the size of the image as you wish. Many aspects of the image can even respond to the mouse position. Using an example from the previous lesson (changing only three lines), we can do something like:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nPImage img;\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nfill(0,3);\r\n\r\nrect(0,0,width,height);\r\n\r\n//background(0);\r\n\r\nnoFill();\r\n\r\nstroke(255);\r\n\r\nint xSize = width -mouseX;\r\n\r\nint ySize = height - mouseY;\r\n\r\nint Xposition = width/2 - xSize/2 ;\r\n\r\nint Yposition = height/2 - ySize/2 ;\r\n\r\nimage(img, Xposition, Yposition, xSize, ySize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can also create an array of images, in order to deal with many images more easily. Here we\'ll create an array of images and then create a simple animation with them. As you can see, the frameCount is divided by the number of images, so there is a new image every frame. Also, all the images are loaded at the beginning in the setup(), so that they are always available later on.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint numImgs = 12;\r\n\r\nPImage[] img = new PImage[numImgs];\r\n\r\nvoid setup(){\r\n\r\nsize(400,400);\r\n\r\nfor(int i = 0; i &lt; numImgs; i++){\r\n\r\nframeRate(10);\r\n\r\nimg[i] = loadImage( i + \".jpg\");\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(0);\r\n\r\nimage(img[frameCount%numImgs], 0, 0);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could also, move all the image from the left to the right as if to create a slider effect of sorts.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint numImgs = 12;\r\n\r\nint xPos;\r\n\r\nint yPos;\r\n\r\nint currentImg;\r\n\r\nPImage[] img = new PImage[numImgs];\r\n\r\nvoid setup(){\r\n\r\nsize(400,400);\r\n\r\nfor(int i = 0; i &lt; numImgs; i++){\r\n\r\nframeRate(999);\r\n\r\nimg[i] = loadImage( i + \".jpg\");\r\n\r\nprintln(i);\r\n\r\n}\r\n\r\nxPos = 0;\r\n\r\nyPos = 100;\r\n\r\ncurrentImg = 0;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nxPos++;\r\n\r\nif(xPos &gt;= width){\r\n\r\ncurrentImg++;\r\n\r\nif(currentImg &gt;= numImgs){\r\n\r\ncurrentImg = 0;\r\n\r\n}\r\n\r\nprintln(currentImg);\r\n\r\nxPos = -(img[currentImg].width/4);\r\n\r\n}\r\n\r\nbackground(0);\r\n\r\nimage(img[currentImg], xPos, yPos, img[currentImg].width/4, img[currentImg].height/4);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWhen the X positions is reached, a new image is loaded and the x position slowly increases. When the last image is reached, the current image variable is re-set to 0.\r\n\r\nWe can also make some interesting interactions between the mouse movement, mouse position and the images.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nint numImgs = 12;\r\n\r\nint currentImg;\r\n\r\nPImage[] img = new PImage[numImgs];\r\n\r\nvoid setup(){\r\n\r\nsize(400,400);\r\n\r\nfor(int i = 0; i &lt; numImgs; i++){\r\n\r\nframeRate(999);\r\n\r\nimg[i] = loadImage( i + \".jpg\");\r\n\r\n}\r\n\r\ncurrentImg = 0;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\ncurrentImg++;\r\n\r\nif(currentImg &gt;= numImgs){\r\n\r\ncurrentImg = 0;\r\n\r\n}\r\n\r\nbackground(0);\r\n\r\nimage(img[currentImg], mouseX - img[currentImg].width/4, mouseY - img[currentImg].height/4, img[currentImg].width/4, img[currentImg].height/4);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThe code is quite similar to the previous example, but the position is tied to mouseX/mouseY and the image changes every time the mouse is moved.','Class 4.1 - Images','','publish','open','open','','class-4-1-images','','','2012-09-08 18:44:19','2012-09-08 18:44:19','',0,'http://thejsj.com/processing/?p=125',0,'post','',0),(126,1,'2012-09-07 12:26:39','2012-09-07 12:26:39','','photoExample','','inherit','open','open','','photoexample','','','2012-09-07 12:26:39','2012-09-07 12:26:39','',125,'http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample.zip',0,'attachment','application/zip',0),(127,1,'2012-09-07 12:46:30','2012-09-07 12:46:30','For working with images there are several things that need to be done first. First of all, you need to have the actual file for the image. This file should be saved in a new directory called \"data\" that has to be created in the same directory(\"folder\") as the sketch.\n\nHere is a zip with an example sketch and some images that we will be using on this lesson.\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample.zip\">Lesson 4 ZIP</a>\n\nAfter this you actually have to load the Image in the sketch. Here\'s and example that loads the image and then displays it with the appropriate proportion.\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\nimage(img, 0, 0, width, width * (img.width/img.height));\n\n}\n\n[/cc]\n\nAfter this you can mess around with images in multiple ways. Here the image grows and shrinks in a loop:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nboolean shrink;\n\nint imgW;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\nshrink = false;\n\nimgW = 0;\n\n}\n\nvoid draw(){\n\nif(shrink){\n\nimgW--;\n\nif(imgW &lt;= 0){\n\nimgW = 0;\n\nshrink = false;\n\n}\n\n}\n\nelse {\n\nimgW++;\n\nif(imgW &gt;= width){\n\nimgW = width;\n\nshrink = true;\n\n}\n\n}\n\nint imgH = imgW * (img.width/img.height);\n\nimage(img, width/2 - imgW/2, height/2 - imgH/2, imgW, imgH);\n\n}\n\n[/cc]\n\nAs you can see, the previous image stays on the sketch creating an instresting visual effect. This can me eliminated with a simple background() function.\n\nYou can alter the size of the image as you wish. Many aspects of the image can even respond to the mouse position. Using an example from the previous lesson (changing only three lines), we can do something like:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mouseMoved(){\n\nfill(0,3);\n\nrect(0,0,width,height);\n\n//background(0);\n\nnoFill();\n\nstroke(255);\n\nint xSize = width -mouseX;\n\nint ySize = height - mouseY;\n\nint Xposition = width/2 - xSize/2 ;\n\nint Yposition = height/2 - ySize/2 ;\n\nimage(img, Xposition, Yposition, xSize, ySize);\n\n}\n\n[/cc]\n\nWe can also create an array of images, in order to deal with many images more easily. Here we\'ll create an array of images and then create a simple animation with them.\n\n&nbsp;','Class 4 - Images','','inherit','open','open','','125-revision','','','2012-09-07 12:46:30','2012-09-07 12:46:30','',125,'http://thejsj.com/processing/2012/09/07/125-revision/',0,'revision','',0),(130,1,'2012-09-08 18:04:37','2012-09-08 18:04:37','','photoExample 2','','inherit','open','open','','photoexample-2','','','2012-09-08 18:04:37','2012-09-08 18:04:37','',125,'http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample-2.zip',0,'attachment','application/zip',0),(128,1,'2012-09-07 12:54:47','2012-09-07 12:54:47','For working with images there are several things that need to be done first. First of all, you need to have the actual file for the image. This file should be saved in a new directory called \"data\" that has to be created in the same directory(\"folder\") as the sketch.\r\n\r\nHere is a zip with an example sketch and some images that we will be using on this lesson.\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample.zip\">Lesson 4 ZIP</a>\r\n\r\nAfter this you actually have to load the Image in the sketch. Here\'s and example that loads the image and then displays it with the appropriate proportion.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nPImage img;\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400,400);\r\n\r\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nimage(img, 0, 0, width, width * (img.width/img.height));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAfter this you can mess around with images in multiple ways. Here the image grows and shrinks in a loop:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nPImage img;\r\n\r\nboolean shrink;\r\n\r\nint imgW;\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400,400);\r\n\r\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\r\n\r\nshrink = false;\r\n\r\nimgW = 0;\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nif(shrink){\r\n\r\nimgW--;\r\n\r\nif(imgW &lt;= 0){\r\n\r\nimgW = 0;\r\n\r\nshrink = false;\r\n\r\n}\r\n\r\n}\r\n\r\nelse {\r\n\r\nimgW++;\r\n\r\nif(imgW &gt;= width){\r\n\r\nimgW = width;\r\n\r\nshrink = true;\r\n\r\n}\r\n\r\n}\r\n\r\nint imgH = imgW * (img.width/img.height);\r\n\r\nimage(img, width/2 - imgW/2, height/2 - imgH/2, imgW, imgH);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAs you can see, the previous image stays on the sketch creating an instresting visual effect. This can me eliminated with a simple background() function.\r\n\r\nYou can alter the size of the image as you wish. Many aspects of the image can even respond to the mouse position. Using an example from the previous lesson (changing only three lines), we can do something like:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nPImage img;\r\n\r\nvoid setup(){\r\n\r\nbackground(0);\r\n\r\nsize(400, 400);\r\n\r\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n// This is empty\r\n\r\n}\r\n\r\nvoid mouseMoved(){\r\n\r\nfill(0,3);\r\n\r\nrect(0,0,width,height);\r\n\r\n//background(0);\r\n\r\nnoFill();\r\n\r\nstroke(255);\r\n\r\nint xSize = width -mouseX;\r\n\r\nint ySize = height - mouseY;\r\n\r\nint Xposition = width/2 - xSize/2 ;\r\n\r\nint Yposition = height/2 - ySize/2 ;\r\n\r\nimage(img, Xposition, Yposition, xSize, ySize);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nWe can also create an array of images, in order to deal with many images more easily. Here we\'ll create an array of images and then create a simple animation with them.\r\n\r\n&nbsp;','Class 4 - Images','','inherit','open','open','','125-revision-2','','','2012-09-07 12:54:47','2012-09-07 12:54:47','',125,'http://thejsj.com/processing/2012/09/07/125-revision-2/',0,'revision','',0),(131,1,'2012-09-08 17:48:48','2012-09-08 17:48:48','For working with images there are several things that need to be done first. First of all, you need to have the actual file for the image. This file should be saved in a new directory called \"data\" that has to be created in the same directory(\"folder\") as the sketch.\n\nHere is a zip with an example sketch and some images that we will be using on this lesson.\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample.zip\">Lesson 4 ZIP</a>\n\nAfter this you actually have to load the Image in the sketch. Here\'s and example that loads the image and then displays it with the appropriate proportion.\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\nimage(img, 0, 0, width, width * (img.width/img.height));\n\n}\n\n[/cc]\n\nAfter this you can mess around with images in multiple ways. Here the image grows and shrinks in a loop:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nboolean shrink;\n\nint imgW;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\nshrink = false;\n\nimgW = 0;\n\n}\n\nvoid draw(){\n\nif(shrink){\n\nimgW--;\n\nif(imgW &lt;= 0){\n\nimgW = 0;\n\nshrink = false;\n\n}\n\n}\n\nelse {\n\nimgW++;\n\nif(imgW &gt;= width){\n\nimgW = width;\n\nshrink = true;\n\n}\n\n}\n\nint imgH = imgW * (img.width/img.height);\n\nimage(img, width/2 - imgW/2, height/2 - imgH/2, imgW, imgH);\n\n}\n\n[/cc]\n\nAs you can see, the previous image stays on the sketch creating an instresting visual effect. This can me eliminated with a simple background() function.\n\nYou can alter the size of the image as you wish. Many aspects of the image can even respond to the mouse position. Using an example from the previous lesson (changing only three lines), we can do something like:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mouseMoved(){\n\nfill(0,3);\n\nrect(0,0,width,height);\n\n//background(0);\n\nnoFill();\n\nstroke(255);\n\nint xSize = width -mouseX;\n\nint ySize = height - mouseY;\n\nint Xposition = width/2 - xSize/2 ;\n\nint Yposition = height/2 - ySize/2 ;\n\nimage(img, Xposition, Yposition, xSize, ySize);\n\n}\n\n[/cc]\n\nWe can also create an array of images, in order to deal with many images more easily. Here we\'ll create an array of images and then create a simple animation with them.\n\n&nbsp;','Class 4 - Images','','inherit','open','open','','125-revision-3','','','2012-09-08 17:48:48','2012-09-08 17:48:48','',125,'http://thejsj.com/processing/2012/09/08/125-revision-3/',0,'revision','',0),(132,1,'2012-09-08 18:44:11','2012-09-08 18:44:11','For working with images there are several things that need to be done first. First of all, you need to have the actual file for the image. This file should be saved in a new directory called \"data\" that has to be created in the same directory(\"folder\") as the sketch.\n\nHere is a zip with an example sketch and some images that we will be using on this lesson.\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample-2.zip\">photoExample.zip</a>\n\nAfter this you actually have to load the Image in the sketch. Here\'s and example that loads the image and then displays it with the appropriate proportion.\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\nimage(img, 0, 0, width, width * (img.width/img.height));\n\n}\n\n[/cc]\n\nAfter this you can mess around with images in multiple ways. Here the image grows and shrinks in a loop:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nboolean shrink;\n\nint imgW;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\nshrink = false;\n\nimgW = 0;\n\n}\n\nvoid draw(){\n\nif(shrink){\n\nimgW--;\n\nif(imgW &lt;= 0){\n\nimgW = 0;\n\nshrink = false;\n\n}\n\n}\n\nelse {\n\nimgW++;\n\nif(imgW &gt;= width){\n\nimgW = width;\n\nshrink = true;\n\n}\n\n}\n\nint imgH = imgW * (img.width/img.height);\n\nimage(img, width/2 - imgW/2, height/2 - imgH/2, imgW, imgH);\n\n}\n\n[/cc]\n\nAs you can see, the previous image stays on the sketch creating an instresting visual effect. This can me eliminated with a simple background() function.\n\nYou can alter the size of the image as you wish. Many aspects of the image can even respond to the mouse position. Using an example from the previous lesson (changing only three lines), we can do something like:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mouseMoved(){\n\nfill(0,3);\n\nrect(0,0,width,height);\n\n//background(0);\n\nnoFill();\n\nstroke(255);\n\nint xSize = width -mouseX;\n\nint ySize = height - mouseY;\n\nint Xposition = width/2 - xSize/2 ;\n\nint Yposition = height/2 - ySize/2 ;\n\nimage(img, Xposition, Yposition, xSize, ySize);\n\n}\n\n[/cc]\n\nWe can also create an array of images, in order to deal with many images more easily. Here we\'ll create an array of images and then create a simple animation with them. As you can see, the frameCount is divided by the number of images, so there is a new image every frame. Also, all the images are loaded at the beginning in the setup(), so that they are always available later on.\n\n[cc lang=\"processing\"]\n\nint numImgs = 12;\n\nPImage[] img = new PImage[numImgs];\n\nvoid setup(){\n\nsize(400,400);\n\nfor(int i = 0; i &lt; numImgs; i++){\n\nframeRate(10);\n\nimg[i] = loadImage( i + \".jpg\");\n\n}\n\n}\n\nvoid draw(){\n\nbackground(0);\n\nimage(img[frameCount%numImgs], 0, 0);\n\n}\n\n[/cc]\n\nYou could also, move all the image from the left to the right as if to create a slider effect of sorts.\n\n[cc lang=\"processing\"]\n\nint numImgs = 12;\n\nint xPos;\n\nint yPos;\n\nint currentImg;\n\nPImage[] img = new PImage[numImgs];\n\nvoid setup(){\n\nsize(400,400);\n\nfor(int i = 0; i &lt; numImgs; i++){\n\nframeRate(999);\n\nimg[i] = loadImage( i + \".jpg\");\n\nprintln(i);\n\n}\n\nxPos = 0;\n\nyPos = 100;\n\ncurrentImg = 0;\n\n}\n\nvoid draw(){\n\nxPos++;\n\nif(xPos &gt;= width){\n\ncurrentImg++;\n\nif(currentImg &gt;= numImgs){\n\ncurrentImg = 0;\n\n}\n\nprintln(currentImg);\n\nxPos = -(img[currentImg].width/4);\n\n}\n\nbackground(0);\n\nimage(img[currentImg], xPos, yPos, img[currentImg].width/4, img[currentImg].height/4);\n\n}\n\n[/cc]\n\nWhen the X positions is reached, a new image is loaded and the x position slowly increases. When the last image is reached, the current image variable is re-set to 0.\n\nWe can also make some interesting interactions between the mouse movement, mouse position and the images.\n\n[cc lang=\"processing\"]\n\nint numImgs = 12;\n\nint currentImg;\n\nPImage[] img = new PImage[numImgs];\n\nvoid setup(){\n\nsize(400,400);\n\nfor(int i = 0; i &lt; numImgs; i++){\n\nframeRate(999);\n\nimg[i] = loadImage( i + \".jpg\");\n\n}\n\ncurrentImg = 0;\n\n}\n\nvoid draw(){\n\n}\n\nvoid mouseMoved(){\n\ncurrentImg++;\n\nif(currentImg &gt;= numImgs){\n\ncurrentImg = 0;\n\n}\n\nbackground(0);\n\nimage(img[currentImg], mouseX - img[currentImg].width/4, mouseY - img[currentImg].height/4, img[currentImg].width/4, img[currentImg].height/4);\n\n}\n\n[/cc]\n\nThe code is quite similar to the previous example, but the position is tied to mouseX/mouseY and the image changes everytime th','Class 4.1 - Images','','inherit','open','open','','125-revision-4','','','2012-09-08 18:44:11','2012-09-08 18:44:11','',125,'http://thejsj.com/processing/2012/09/08/125-revision-4/',0,'revision','',0),(133,1,'2012-09-08 18:45:21','2012-09-08 18:45:21','For working with images there are several things that need to be done first. First of all, you need to have the actual file for the image. This file should be saved in a new directory called \"data\" that has to be created in the same directory(\"folder\") as the sketch.\n\nHere is a zip with an example sketch and some images that we will be using on this lesson.\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/photoExample-2.zip\">photoExample.zip</a>\n\nAfter this you actually have to load the Image in the sketch. Here\'s and example that loads the image and then displays it with the appropriate proportion.\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\nimage(img, 0, 0, width, width * (img.width/img.height));\n\n}\n\n[/cc]\n\nAfter this you can mess around with images in multiple ways. Here the image grows and shrinks in a loop:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nboolean shrink;\n\nint imgW;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400,400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\nshrink = false;\n\nimgW = 0;\n\n}\n\nvoid draw(){\n\nif(shrink){\n\nimgW--;\n\nif(imgW &lt;= 0){\n\nimgW = 0;\n\nshrink = false;\n\n}\n\n}\n\nelse {\n\nimgW++;\n\nif(imgW &gt;= width){\n\nimgW = width;\n\nshrink = true;\n\n}\n\n}\n\nint imgH = imgW * (img.width/img.height);\n\nimage(img, width/2 - imgW/2, height/2 - imgH/2, imgW, imgH);\n\n}\n\n[/cc]\n\nAs you can see, the previous image stays on the sketch creating an instresting visual effect. This can me eliminated with a simple background() function.\n\nYou can alter the size of the image as you wish. Many aspects of the image can even respond to the mouse position. Using an example from the previous lesson (changing only three lines), we can do something like:\n\n[cc lang=\"processing\"]\n\nPImage img;\n\nvoid setup(){\n\nbackground(0);\n\nsize(400, 400);\n\nimg = loadImage(\"1.jpg\"); //This is the Filename in the \'data\' direcotry\n\n}\n\nvoid draw(){\n\n// This is empty\n\n}\n\nvoid mouseMoved(){\n\nfill(0,3);\n\nrect(0,0,width,height);\n\n//background(0);\n\nnoFill();\n\nstroke(255);\n\nint xSize = width -mouseX;\n\nint ySize = height - mouseY;\n\nint Xposition = width/2 - xSize/2 ;\n\nint Yposition = height/2 - ySize/2 ;\n\nimage(img, Xposition, Yposition, xSize, ySize);\n\n}\n\n[/cc]\n\nWe can also create an array of images, in order to deal with many images more easily. Here we\'ll create an array of images and then create a simple animation with them. As you can see, the frameCount is divided by the number of images, so there is a new image every frame. Also, all the images are loaded at the beginning in the setup(), so that they are always available later on.\n\n[cc lang=\"processing\"]\n\nint numImgs = 12;\n\nPImage[] img = new PImage[numImgs];\n\nvoid setup(){\n\nsize(400,400);\n\nfor(int i = 0; i &lt; numImgs; i++){\n\nframeRate(10);\n\nimg[i] = loadImage( i + \".jpg\");\n\n}\n\n}\n\nvoid draw(){\n\nbackground(0);\n\nimage(img[frameCount%numImgs], 0, 0);\n\n}\n\n[/cc]\n\nYou could also, move all the image from the left to the right as if to create a slider effect of sorts.\n\n[cc lang=\"processing\"]\n\nint numImgs = 12;\n\nint xPos;\n\nint yPos;\n\nint currentImg;\n\nPImage[] img = new PImage[numImgs];\n\nvoid setup(){\n\nsize(400,400);\n\nfor(int i = 0; i &lt; numImgs; i++){\n\nframeRate(999);\n\nimg[i] = loadImage( i + \".jpg\");\n\nprintln(i);\n\n}\n\nxPos = 0;\n\nyPos = 100;\n\ncurrentImg = 0;\n\n}\n\nvoid draw(){\n\nxPos++;\n\nif(xPos &gt;= width){\n\ncurrentImg++;\n\nif(currentImg &gt;= numImgs){\n\ncurrentImg = 0;\n\n}\n\nprintln(currentImg);\n\nxPos = -(img[currentImg].width/4);\n\n}\n\nbackground(0);\n\nimage(img[currentImg], xPos, yPos, img[currentImg].width/4, img[currentImg].height/4);\n\n}\n\n[/cc]\n\nWhen the X positions is reached, a new image is loaded and the x position slowly increases. When the last image is reached, the current image variable is re-set to 0.\n\nWe can also make some interesting interactions between the mouse movement, mouse position and the images.\n\n[cc lang=\"processing\"]\n\nint numImgs = 12;\n\nint currentImg;\n\nPImage[] img = new PImage[numImgs];\n\nvoid setup(){\n\nsize(400,400);\n\nfor(int i = 0; i &lt; numImgs; i++){\n\nframeRate(999);\n\nimg[i] = loadImage( i + \".jpg\");\n\n}\n\ncurrentImg = 0;\n\n}\n\nvoid draw(){\n\n}\n\nvoid mouseMoved(){\n\ncurrentImg++;\n\nif(currentImg &gt;= numImgs){\n\ncurrentImg = 0;\n\n}\n\nbackground(0);\n\nimage(img[currentImg], mouseX - img[currentImg].width/4, mouseY - img[currentImg].height/4, img[currentImg].width/4, img[currentImg].height/4);\n\n}\n\n[/cc]\n\nThe code is quite similar to the previous example, but the position is tied to mouseX/mouseY and the image changes every time the mouse is moved.','Class 4.1 - Images','','inherit','open','open','','125-autosave','','','2012-09-08 18:45:21','2012-09-08 18:45:21','',125,'http://thejsj.com/processing/2012/09/08/125-autosave/',0,'revision','',0),(134,1,'2012-09-08 23:12:30','2012-09-08 23:12:30','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\r\n\r\nTo install a library:\r\n<ol>\r\n	<li>Delete the default installation of Minim that comes with processing.</li>\r\n</ol>\r\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\r\n<div>\"</div>\r\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\r\n<ol>\r\n	<li>Open Processing</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\r\n	<li>Look for \"Minim\" and press \"Install\"</li>\r\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\r\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\r\nimport ddf.minim.signals.*;\r\nimport ddf.minim.analysis.*;\r\nimport ddf.minim.effects.*;\"</li>\r\n</ol>\r\nAfter that, you\'re ready to start using the library.\r\n\r\nWe are going to be using the following sketch folder:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\r\n\r\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\r\n\r\nAs a first example, we can just play a sounds file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport ddf.minim.*;\r\n\r\n/*\r\n\r\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\r\n\r\n*/\r\n\r\nMinim minim;\r\nAudioPlayer song;\r\n\r\nvoid setup()\r\n{\r\nsize(100, 100);\r\nminim = new Minim(this);\r\n// this loads Mozart.mp3 from the data folder\r\nsong = minim.loadFile(\"Mozart.mp3\");\r\nsong.play();\r\n}\r\n\r\nvoid draw()\r\n{\r\nbackground(0);\r\n}\r\n\r\nvoid stop()\r\n{\r\nsong.close();\r\nminim.stop();\r\n\r\nsuper.stop();\r\n}\r\n\r\n[/cc]\r\n\r\nUsing this library, you can also Pause, Resume and Stop the audio file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top of the sketch\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(paused){\r\n\r\nsong.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\nelse {\r\n\r\nsong.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(key == ENTER){\r\n\r\nstop();\r\n\r\nprintln(\"Closed\");\r\n\r\n}\r\n\r\n}\r\n\r\nvoid stop()\r\n\r\n{\r\n\r\nsong.close();\r\n\r\nminim.stop();\r\n\r\nsuper.stop();\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\r\n\r\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//Add these 2 floats\r\n\r\nfloat gain;\r\n\r\nfloat pan;\r\n\r\n//Remove the Background() function\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\n//Add this mouseMoved function\r\n\r\nvoid mouseMoved() {\r\n\r\nif ( song.hasControl(Controller.PAN) ){\r\n\r\npan = map(mouseX, 0, width, 1, -1);\r\n\r\nprintln(\"Moved - \" + pan);\r\n\r\nsong.setPan(pan);\r\n\r\n}\r\n\r\nif ( song.hasControl(Controller.GAIN) ){\r\n\r\ngain = map(mouseY, 0, height, 20, -20);\r\n\r\nsong.setGain(gain);\r\n\r\nprintln(gain);\r\n\r\n}\r\n\r\nbackground(0);\r\n\r\nstroke(255);\r\n\r\nfill(255);\r\n\r\nline(mouseX +5, mouseY, mouseX -5, mouseY);\r\n\r\nline(mouseX, mouseY +5, mouseX, mouseY -5);\r\n\r\ntext(\"Gain: \" + gain, 20, 20);\r\n\r\ntext(\"Pan: \" + pan, 20, 50);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nprintln(\"You are currently in:\" + + ( float(song.position() )/ float(song.length()) );\r\n\r\nfloat position = map(mouseX, 0, width, 0, song.length());\r\n\r\nsong.cue(int(position));\r\n\r\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThere are also <a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioEffect.html\">numerous effects</a> that can be added to the audio:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nMinim minim;\r\n\r\nAudioPlayer song;\r\n\r\nBandPass bpf;\r\n\r\nvoid setup() {\r\n\r\nsize(200, 200);\r\n\r\nminim = new Minim(this);\r\n\r\n// this loads Mozart.mp3 from the data folder\r\n\r\nsong = minim.loadFile(\"samba1.mp3\", 512);\r\n\r\nsong.play();\r\n\r\nbpf = new BandPass(440, 20, song.sampleRate());\r\n\r\nsong.addEffect(bpf);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\nvoid mouseMoved() {\r\n\r\n// map the mouse position to the range [100, 10000], an arbitrary range of passBand frequencies\r\n\r\nfloat passBand = map(mouseX, 0, width, 100, 2000);\r\n\r\nbpf.setFreq(passBand);\r\n\r\nfloat bandWidth = map(mouseY, 0, height, 50, 500);\r\n\r\nbpf.setBandWidth(bandWidth);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can find more about Minim and its functions here:\r\n\r\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class 4.2 - Sound','','publish','open','open','','class-4-2-sound','','http://code.compartmental.net/tools/minim/\nhttp://code.compartmental.net/tools/minim/','2012-09-09 00:11:12','2012-09-09 00:11:12','',0,'http://thejsj.com/processing/?p=134',0,'post','',0),(135,1,'2012-09-08 19:23:34','2012-09-08 19:23:34','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing</li>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\n\n\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision','','','2012-09-08 19:23:34','2012-09-08 19:23:34','',134,'http://thejsj.com/processing/2012/09/08/134-revision/',0,'revision','',0),(136,1,'2012-09-08 19:26:46','2012-09-08 19:26:46','','soundExample','','inherit','open','open','','soundexample','','','2012-09-08 19:26:46','2012-09-08 19:26:46','',134,'http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip',0,'attachment','application/zip',0),(138,1,'2012-09-08 19:30:22','2012-09-08 19:30:22','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\r\n\r\nTo install a library:\r\n<ol>\r\n	<li>Delete the default installation of Minim that comes with processing.</li>\r\n</ol>\r\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.\r\n\r\nFinally, <strong>restart Processing</strong>.\r\n\r\n</div>\r\n<div>\"</div>\r\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\r\n<ol>\r\n	<li>Open Processing</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\r\n	<li>Look for \"Minim\" and press \"Install\"</li>\r\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\r\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\r\nimport ddf.minim.signals.*;\r\nimport ddf.minim.analysis.*;\r\nimport ddf.minim.effects.*;\"</li>\r\n</ol>\r\nAfter that, you\'re ready to start using the library.\r\n\r\nWe are going to be using the following sketch folder:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\r\n\r\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\r\n\r\nAs a first example, we can just play a sounds file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-3','','','2012-09-08 19:30:22','2012-09-08 19:30:22','',134,'http://thejsj.com/processing/2012/09/08/134-revision-3/',0,'revision','',0),(137,1,'2012-09-08 19:28:33','2012-09-08 19:28:33','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.\n\nFinally, <strong>restart Processing</strong>.\n\n</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-2','','','2012-09-08 19:28:33','2012-09-08 19:28:33','',134,'http://thejsj.com/processing/2012/09/08/134-revision-2/',0,'revision','',0),(139,1,'2012-09-08 19:32:00','2012-09-08 19:32:00','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-4','','','2012-09-08 19:32:00','2012-09-08 19:32:00','',134,'http://thejsj.com/processing/2012/09/08/134-revision-4/',0,'revision','',0),(140,1,'2012-09-08 21:37:29','2012-09-08 21:37:29','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-5','','','2012-09-08 21:37:29','2012-09-08 21:37:29','',134,'http://thejsj.com/processing/2012/09/08/134-revision-5/',0,'revision','',0),(141,1,'2012-09-08 22:40:29','2012-09-08 22:40:29','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\nUsing this library, you can also Pause, Resume and Stop the audio file:\n\n[cc lang=\"processing\"]\n\n//At the top of the sketch\n\nboolean paused = false;\n\n//At the bottom\n\nvoid mousePressed(){\n\nif(paused){\n\nsong.play();\n\npaused = false;\n\n}\n\nelse {\n\nsong.pause();\n\npaused = true;\n\n}\n\n}\n\nvoid keyPressed(){\n\nif(key == ENTER){\n\nstop();\n\nprintln(\"Closed\");\n\n}\n\n}\n\nvoid stop()\n\n{\n\nsong.close();\n\nminim.stop();\n\nsuper.stop();\n\n}\n\n[/cc]\n\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\n\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\n\n[cc lang=\"processing\"]\n\n//Add these 2 floats\n\nfloat gain;\n\nfloat pan;\n\n//Remove the Background() function\n\nvoid draw(){\n\n}\n\n//Add this mouseMoved function\n\nvoid mouseMoved() {\n\nif ( song.hasControl(Controller.PAN) ){\n\npan = map(mouseX, 0, width, 1, -1);\n\nprintln(\"Moved - \" + pan);\n\nsong.setPan(pan);\n\n}\n\nif ( song.hasControl(Controller.GAIN) ){\n\ngain = map(mouseY, 0, height, 20, -20);\n\nsong.setGain(gain);\n\nprintln(gain);\n\n}\n\nbackground(0);\n\nstroke(255);\n\nfill(255);\n\nline(mouseX +5, mouseY, mouseX -5, mouseY);\n\nline(mouseX, mouseY +5, mouseX, mouseY -5);\n\ntext(\"Gain: \" + gain, 20, 20);\n\ntext(\"Pan: \" + pan, 20, 50);\n\n}\n\n[/cc]\n\nYou can find more about Minim and its functions here:\n\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-6','','','2012-09-08 22:40:29','2012-09-08 22:40:29','',134,'http://thejsj.com/processing/2012/09/08/134-revision-6/',0,'revision','',0),(142,1,'2012-09-08 22:49:57','2012-09-08 22:49:57','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\nUsing this library, you can also Pause, Resume and Stop the audio file:\n\n[cc lang=\"processing\"]\n\n//At the top of the sketch\n\nboolean paused = false;\n\n//At the bottom\n\nvoid mousePressed(){\n\nif(paused){\n\nsong.play();\n\npaused = false;\n\n}\n\nelse {\n\nsong.pause();\n\npaused = true;\n\n}\n\n}\n\nvoid keyPressed(){\n\nif(key == ENTER){\n\nstop();\n\nprintln(\"Closed\");\n\n}\n\n}\n\nvoid stop()\n\n{\n\nsong.close();\n\nminim.stop();\n\nsuper.stop();\n\n}\n\n[/cc]\n\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\n\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\n\n[cc lang=\"processing\"]\n\n//Add these 2 floats\n\nfloat gain;\n\nfloat pan;\n\n//Remove the Background() function\n\nvoid draw(){\n\n}\n\n//Add this mouseMoved function\n\nvoid mouseMoved() {\n\nif ( song.hasControl(Controller.PAN) ){\n\npan = map(mouseX, 0, width, 1, -1);\n\nprintln(\"Moved - \" + pan);\n\nsong.setPan(pan);\n\n}\n\nif ( song.hasControl(Controller.GAIN) ){\n\ngain = map(mouseY, 0, height, 20, -20);\n\nsong.setGain(gain);\n\nprintln(gain);\n\n}\n\nbackground(0);\n\nstroke(255);\n\nfill(255);\n\nline(mouseX +5, mouseY, mouseX -5, mouseY);\n\nline(mouseX, mouseY +5, mouseX, mouseY -5);\n\ntext(\"Gain: \" + gain, 20, 20);\n\ntext(\"Pan: \" + pan, 20, 50);\n\n}\n\n[/cc]\n\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\n\n[cc lang=\"processing\"]\n\nvoid mousePressed() {\n\nprintln(\"You are currently\"\n\nfloat position = map(mouseX, 0, width, 0, song.length());\n\nsong.cue(int(position));\n\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\n\n}\n\n[/cc]\n\nYou can find more about Minim and its functions here:\n\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\n\n&nbsp;\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-7','','','2012-09-08 22:49:57','2012-09-08 22:49:57','',134,'http://thejsj.com/processing/2012/09/08/134-revision-7/',0,'revision','',0),(143,1,'2012-09-08 23:08:29','2012-09-08 23:08:29','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\nUsing this library, you can also Pause, Resume and Stop the audio file:\n\n[cc lang=\"processing\"]\n\n//At the top of the sketch\n\nboolean paused = false;\n\n//At the bottom\n\nvoid mousePressed(){\n\nif(paused){\n\nsong.play();\n\npaused = false;\n\n}\n\nelse {\n\nsong.pause();\n\npaused = true;\n\n}\n\n}\n\nvoid keyPressed(){\n\nif(key == ENTER){\n\nstop();\n\nprintln(\"Closed\");\n\n}\n\n}\n\nvoid stop()\n\n{\n\nsong.close();\n\nminim.stop();\n\nsuper.stop();\n\n}\n\n[/cc]\n\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\n\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\n\n[cc lang=\"processing\"]\n\n//Add these 2 floats\n\nfloat gain;\n\nfloat pan;\n\n//Remove the Background() function\n\nvoid draw(){\n\n}\n\n//Add this mouseMoved function\n\nvoid mouseMoved() {\n\nif ( song.hasControl(Controller.PAN) ){\n\npan = map(mouseX, 0, width, 1, -1);\n\nprintln(\"Moved - \" + pan);\n\nsong.setPan(pan);\n\n}\n\nif ( song.hasControl(Controller.GAIN) ){\n\ngain = map(mouseY, 0, height, 20, -20);\n\nsong.setGain(gain);\n\nprintln(gain);\n\n}\n\nbackground(0);\n\nstroke(255);\n\nfill(255);\n\nline(mouseX +5, mouseY, mouseX -5, mouseY);\n\nline(mouseX, mouseY +5, mouseX, mouseY -5);\n\ntext(\"Gain: \" + gain, 20, 20);\n\ntext(\"Pan: \" + pan, 20, 50);\n\n}\n\n[/cc]\n\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\n\n[cc lang=\"processing\"]\n\nvoid mousePressed() {\n\nprintln(\"You are currently in:\" + + ( float(song.position() )/ float(song.length()) );\n\nfloat position = map(mouseX, 0, width, 0, song.length());\n\nsong.cue(int(position));\n\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\n\n}\n\n[/cc]\n\nThere are also numberous effects that can be added to the audio:\n\n[cc lang\n\nYou can find more about Minim and its functions here:\n\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\n\n&nbsp;\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-8','','','2012-09-08 23:08:29','2012-09-08 23:08:29','',134,'http://thejsj.com/processing/2012/09/08/134-revision-8/',0,'revision','',0),(144,1,'2012-09-08 23:12:12','2012-09-08 23:12:12','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\nUsing this library, you can also Pause, Resume and Stop the audio file:\n\n[cc lang=\"processing\"]\n\n//At the top of the sketch\n\nboolean paused = false;\n\n//At the bottom\n\nvoid mousePressed(){\n\nif(paused){\n\nsong.play();\n\npaused = false;\n\n}\n\nelse {\n\nsong.pause();\n\npaused = true;\n\n}\n\n}\n\nvoid keyPressed(){\n\nif(key == ENTER){\n\nstop();\n\nprintln(\"Closed\");\n\n}\n\n}\n\nvoid stop()\n\n{\n\nsong.close();\n\nminim.stop();\n\nsuper.stop();\n\n}\n\n[/cc]\n\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\n\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\n\n[cc lang=\"processing\"]\n\n//Add these 2 floats\n\nfloat gain;\n\nfloat pan;\n\n//Remove the Background() function\n\nvoid draw(){\n\n}\n\n//Add this mouseMoved function\n\nvoid mouseMoved() {\n\nif ( song.hasControl(Controller.PAN) ){\n\npan = map(mouseX, 0, width, 1, -1);\n\nprintln(\"Moved - \" + pan);\n\nsong.setPan(pan);\n\n}\n\nif ( song.hasControl(Controller.GAIN) ){\n\ngain = map(mouseY, 0, height, 20, -20);\n\nsong.setGain(gain);\n\nprintln(gain);\n\n}\n\nbackground(0);\n\nstroke(255);\n\nfill(255);\n\nline(mouseX +5, mouseY, mouseX -5, mouseY);\n\nline(mouseX, mouseY +5, mouseX, mouseY -5);\n\ntext(\"Gain: \" + gain, 20, 20);\n\ntext(\"Pan: \" + pan, 20, 50);\n\n}\n\n[/cc]\n\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\n\n[cc lang=\"processing\"]\n\nvoid mousePressed() {\n\nprintln(\"You are currently in:\" + + ( float(song.position() )/ float(song.length()) );\n\nfloat position = map(mouseX, 0, width, 0, song.length());\n\nsong.cue(int(position));\n\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\n\n}\n\n[/cc]\n\nThere are also numerous effects that can be added to the audio:\n\n[cc lang=\"processing\"]\n\nMinim minim;\n\nAudioPlayer song;\n\nBandPass bpf;\n\nvoid setup() {\n\nsize(200, 200);\n\nminim = new Minim(this);\n\n// this loads Mozart.mp3 from the data folder\n\nsong = minim.loadFile(\"samba1.mp3\", 512);\n\nsong.play();\n\nbpf = new BandPass(440, 20, song.sampleRate());\n\nsong.addEffect(bpf);\n\n}\n\nvoid draw(){\n\n}\n\nvoid mouseMoved() {\n\n// map the mouse position to the range [100, 10000], an arbitrary range of passBand frequencies\n\nfloat passBand = map(mouseX, 0, width, 100, 2000);\n\nbpf.setFreq(passBand);\n\nfloat bandWidth = map(mouseY, 0, height, 50, 500);\n\nbpf.setBandWidth(bandWidth);\n\n}\n\n[/cc]\n\nYou can find more about Minim and its functions here:\n\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\n\n&nbsp;\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-9','','','2012-09-08 23:12:12','2012-09-08 23:12:12','',134,'http://thejsj.com/processing/2012/09/08/134-revision-9/',0,'revision','',0),(145,1,'2012-09-08 23:12:30','2012-09-08 23:12:30','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\r\n\r\nTo install a library:\r\n<ol>\r\n	<li>Delete the default installation of Minim that comes with processing.</li>\r\n</ol>\r\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\r\n<div>\"</div>\r\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\r\n<ol>\r\n	<li>Open Processing</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\r\n	<li>Look for \"Minim\" and press \"Install\"</li>\r\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\r\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\r\nimport ddf.minim.signals.*;\r\nimport ddf.minim.analysis.*;\r\nimport ddf.minim.effects.*;\"</li>\r\n</ol>\r\nAfter that, you\'re ready to start using the library.\r\n\r\nWe are going to be using the following sketch folder:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\r\n\r\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\r\n\r\nAs a first example, we can just play a sounds file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport ddf.minim.*;\r\n\r\n/*\r\n\r\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\r\n\r\n*/\r\n\r\nMinim minim;\r\nAudioPlayer song;\r\n\r\nvoid setup()\r\n{\r\nsize(100, 100);\r\nminim = new Minim(this);\r\n// this loads Mozart.mp3 from the data folder\r\nsong = minim.loadFile(\"Mozart.mp3\");\r\nsong.play();\r\n}\r\n\r\nvoid draw()\r\n{\r\nbackground(0);\r\n}\r\n\r\nvoid stop()\r\n{\r\nsong.close();\r\nminim.stop();\r\n\r\nsuper.stop();\r\n}\r\n\r\n[/cc]\r\n\r\nUsing this library, you can also Pause, Resume and Stop the audio file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top of the sketch\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(paused){\r\n\r\nsong.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\nelse {\r\n\r\nsong.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(key == ENTER){\r\n\r\nstop();\r\n\r\nprintln(\"Closed\");\r\n\r\n}\r\n\r\n}\r\n\r\nvoid stop()\r\n\r\n{\r\n\r\nsong.close();\r\n\r\nminim.stop();\r\n\r\nsuper.stop();\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\r\n\r\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//Add these 2 floats\r\n\r\nfloat gain;\r\n\r\nfloat pan;\r\n\r\n//Remove the Background() function\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\n//Add this mouseMoved function\r\n\r\nvoid mouseMoved() {\r\n\r\nif ( song.hasControl(Controller.PAN) ){\r\n\r\npan = map(mouseX, 0, width, 1, -1);\r\n\r\nprintln(\"Moved - \" + pan);\r\n\r\nsong.setPan(pan);\r\n\r\n}\r\n\r\nif ( song.hasControl(Controller.GAIN) ){\r\n\r\ngain = map(mouseY, 0, height, 20, -20);\r\n\r\nsong.setGain(gain);\r\n\r\nprintln(gain);\r\n\r\n}\r\n\r\nbackground(0);\r\n\r\nstroke(255);\r\n\r\nfill(255);\r\n\r\nline(mouseX +5, mouseY, mouseX -5, mouseY);\r\n\r\nline(mouseX, mouseY +5, mouseX, mouseY -5);\r\n\r\ntext(\"Gain: \" + gain, 20, 20);\r\n\r\ntext(\"Pan: \" + pan, 20, 50);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nprintln(\"You are currently in:\" + + ( float(song.position() )/ float(song.length()) );\r\n\r\nfloat position = map(mouseX, 0, width, 0, song.length());\r\n\r\nsong.cue(int(position));\r\n\r\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThere are also <a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioEffect.html\">numerous effects</a> that can be added to the audio:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nMinim minim;\r\n\r\nAudioPlayer song;\r\n\r\nBandPass bpf;\r\n\r\nvoid setup() {\r\n\r\nsize(200, 200);\r\n\r\nminim = new Minim(this);\r\n\r\n// this loads Mozart.mp3 from the data folder\r\n\r\nsong = minim.loadFile(\"samba1.mp3\", 512);\r\n\r\nsong.play();\r\n\r\nbpf = new BandPass(440, 20, song.sampleRate());\r\n\r\nsong.addEffect(bpf);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\nvoid mouseMoved() {\r\n\r\n// map the mouse position to the range [100, 10000], an arbitrary range of passBand frequencies\r\n\r\nfloat passBand = map(mouseX, 0, width, 100, 2000);\r\n\r\nbpf.setFreq(passBand);\r\n\r\nfloat bandWidth = map(mouseY, 0, height, 50, 500);\r\n\r\nbpf.setBandWidth(bandWidth);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can find more about Minim and its functions here:\r\n\r\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-10','','','2012-09-08 23:12:30','2012-09-08 23:12:30','',134,'http://thejsj.com/processing/2012/09/08/134-revision-10/',0,'revision','',0),(146,1,'2012-09-08 23:14:36','2012-09-08 23:14:36','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\n\nTo install a library:\n<ol>\n	<li>Delete the default installation of Minim that comes with processing.</li>\n</ol>\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\n<div>\"</div>\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\n<ol>\n	<li>Open Processing</li>\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\n	<li>Look for \"Minim\" and press \"Install\"</li>\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\nimport ddf.minim.signals.*;\nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\"</li>\n</ol>\nAfter that, you\'re ready to start using the library.\n\nWe are going to be using the following sketch folder:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\n\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\n\nAs a first example, we can just play a sounds file:\n\n[cc lang=\"processing\"]\n\nimport ddf.minim.*;\n\n/*\n\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\n\n*/\n\nMinim minim;\nAudioPlayer song;\n\nvoid setup()\n{\nsize(100, 100);\nminim = new Minim(this);\n// this loads Mozart.mp3 from the data folder\nsong = minim.loadFile(\"Mozart.mp3\");\nsong.play();\n}\n\nvoid draw()\n{\nbackground(0);\n}\n\nvoid stop()\n{\nsong.close();\nminim.stop();\n\nsuper.stop();\n}\n\n[/cc]\n\nUsing this library, you can also Pause, Resume and Stop the audio file:\n\n[cc lang=\"processing\"]\n\n//At the top of the sketch\n\nboolean paused = false;\n\n//At the bottom\n\nvoid mousePressed(){\n\nif(paused){\n\nsong.play();\n\npaused = false;\n\n}\n\nelse {\n\nsong.pause();\n\npaused = true;\n\n}\n\n}\n\nvoid keyPressed(){\n\nif(key == ENTER){\n\nstop();\n\nprintln(\"Closed\");\n\n}\n\n}\n\nvoid stop()\n\n{\n\nsong.close();\n\nminim.stop();\n\nsuper.stop();\n\n}\n\n[/cc]\n\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\n\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\n\n[cc lang=\"processing\"]\n\n//Add these 2 floats\n\nfloat gain;\n\nfloat pan;\n\n//Remove the Background() function\n\nvoid draw(){\n\n}\n\n//Add this mouseMoved function\n\nvoid mouseMoved() {\n\nif ( song.hasControl(Controller.PAN) ){\n\npan = map(mouseX, 0, width, 1, -1);\n\nprintln(\"Moved - \" + pan);\n\nsong.setPan(pan);\n\n}\n\nif ( song.hasControl(Controller.GAIN) ){\n\ngain = map(mouseY, 0, height, 20, -20);\n\nsong.setGain(gain);\n\nprintln(gain);\n\n}\n\nbackground(0);\n\nstroke(255);\n\nfill(255);\n\nline(mouseX +5, mouseY, mouseX -5, mouseY);\n\nline(mouseX, mouseY +5, mouseX, mouseY -5);\n\ntext(\"Gain: \" + gain, 20, 20);\n\ntext(\"Pan: \" + pan, 20, 50);\n\n}\n\n[/cc]\n\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\n\n[cc lang=\"processing\"]\n\nvoid mousePressed() {\n\nprintln(\"You are currently in:\" + + ( float(song.position() )/ float(song.length()) );\n\nfloat position = map(mouseX, 0, width, 0, song.length());\n\nsong.cue(int(position));\n\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\n\n}\n\n[/cc]\n\nThere are also <a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioEffect.html\">numerous effects</a> that can be added to the audio:\n\n[cc lang=\"processing\"]\n\nMinim minim;\n\nAudioPlayer song;\n\nBandPass bpf;\n\nvoid setup() {\n\nsize(200, 200);\n\nminim = new Minim(this);\n\n// this loads Mozart.mp3 from the data folder\n\nsong = minim.loadFile(\"samba1.mp3\", 512);\n\nsong.play();\n\nbpf = new BandPass(440, 20, song.sampleRate());\n\nsong.addEffect(bpf);\n\n}\n\nvoid draw(){\n\n}\n\nvoid mouseMoved() {\n\n// map the mouse position to the range [100, 10000], an arbitrary range of passBand frequencies\n\nfloat passBand = map(mouseX, 0, width, 100, 2000);\n\nbpf.setFreq(passBand);\n\nfloat bandWidth = map(mouseY, 0, height, 50, 500);\n\nbpf.setBandWidth(bandWidth);\n\n}\n\n[/cc]\n\nYou can find more about Minim and its functions here:\n\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\n\n&nbsp;\n\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-autosave','','','2012-09-08 23:14:36','2012-09-08 23:14:36','',134,'http://thejsj.com/processing/2012/09/08/134-autosave/',0,'revision','',0),(147,1,'2012-09-08 23:13:33','2012-09-08 23:13:33','For using sounds, you need to used a Processing library. Libraries extend the basic functionality of Processing for things like sounds, video, electronics, Arduino, PDF...\r\n\r\nTo install a library:\r\n<ol>\r\n	<li>Delete the default installation of Minim that comes with processing.</li>\r\n</ol>\r\n<div>\"<strong>On OSX:</strong> Find your Processing.app and right click, choose “Show Package Contents”. Then dig down to Contents/Resources/Java/modes/java/libraries and delete the minim folder in there.<strong>On Windows:</strong> From the directory that contains Processing.exe, dig down to modes/java/libraries and delete the minim folder there.Finally, <strong>restart Processing</strong>.</div>\r\n<div>\"</div>\r\n<div>Source: <a href=\"http://code.compartmental.net/tools/minim/\">http://code.compartmental.net/tools/minim/</a></div>\r\n<ol>\r\n	<li>Open Processing</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Add Library...</li>\r\n	<li>Look for \"Minim\" and press \"Install\"</li>\r\n	<li>Go to the sketch where you want to use the library (or start a new one)</li>\r\n	<li>Go to Sketch &gt; Import Library &gt; Minim</li>\r\n	<li>This should appear at the top of your sketch \"import ddf.minim.*;\r\nimport ddf.minim.signals.*;\r\nimport ddf.minim.analysis.*;\r\nimport ddf.minim.effects.*;\"</li>\r\n</ol>\r\nAfter that, you\'re ready to start using the library.\r\n\r\nWe are going to be using the following sketch folder:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/soundExample.zip\">soundExample</a> (Sound files taken from <a href=\"http://commons.wikimedia.org/wiki/Main_Page\">wikiCommons</a>)\r\n\r\nAll audio files must be in a \"data\" directory (like images) and must be in .mp3, .wav, .aiff, ,au, .snd.\r\n\r\nAs a first example, we can just play a sounds file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport ddf.minim.*;\r\n\r\n/*\r\n\r\nExample taken from: http://code.compartmental.net/tools/minim/quickstart/\r\n\r\n*/\r\n\r\nMinim minim;\r\nAudioPlayer song;\r\n\r\nvoid setup()\r\n{\r\nsize(100, 100);\r\nminim = new Minim(this);\r\n// this loads Mozart.mp3 from the data folder\r\nsong = minim.loadFile(\"Mozart.mp3\");\r\nsong.play();\r\n}\r\n\r\nvoid draw()\r\n{\r\nbackground(0);\r\n}\r\n\r\nvoid stop()\r\n{\r\nsong.close();\r\nminim.stop();\r\n\r\nsuper.stop();\r\n}\r\n\r\n[/cc]\r\n\r\nUsing this library, you can also Pause, Resume and Stop the audio file:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top of the sketch\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(paused){\r\n\r\nsong.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\nelse {\r\n\r\nsong.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\n}\r\n\r\nvoid keyPressed(){\r\n\r\nif(key == ENTER){\r\n\r\nstop();\r\n\r\nprintln(\"Closed\");\r\n\r\n}\r\n\r\n}\r\n\r\nvoid stop()\r\n\r\n{\r\n\r\nsong.close();\r\n\r\nminim.stop();\r\n\r\nsuper.stop();\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nPressing the mouse Pause/Resumes the audio. Pressing ENTER stops it.\r\n\r\nYou can also  determine the pan(left/right balance) and gain(similar to volume) of the file (amongst other things). In this example, we set them by mouse position and the go on to display the current pan and gain in the sketch.\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//Add these 2 floats\r\n\r\nfloat gain;\r\n\r\nfloat pan;\r\n\r\n//Remove the Background() function\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\n//Add this mouseMoved function\r\n\r\nvoid mouseMoved() {\r\n\r\nif ( song.hasControl(Controller.PAN) ){\r\n\r\npan = map(mouseX, 0, width, 1, -1);\r\n\r\nprintln(\"Moved - \" + pan);\r\n\r\nsong.setPan(pan);\r\n\r\n}\r\n\r\nif ( song.hasControl(Controller.GAIN) ){\r\n\r\ngain = map(mouseY, 0, height, 20, -20);\r\n\r\nsong.setGain(gain);\r\n\r\nprintln(gain);\r\n\r\n}\r\n\r\nbackground(0);\r\n\r\nstroke(255);\r\n\r\nfill(255);\r\n\r\nline(mouseX +5, mouseY, mouseX -5, mouseY);\r\n\r\nline(mouseX, mouseY +5, mouseX, mouseY -5);\r\n\r\ntext(\"Gain: \" + gain, 20, 20);\r\n\r\ntext(\"Pan: \" + pan, 20, 50);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nUsing the position and cue functions you can also get the position of what is currently being played and also jump to specific points in the song:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nprintln(\"You are currently in:\" + + ( float(song.position() )/ float(song.length()) );\r\n\r\nfloat position = map(mouseX, 0, width, 0, song.length());\r\n\r\nsong.cue(int(position));\r\n\r\nprintln(\"Jump to this % in the song:\" + (position/ float(song.length())));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nThere are also <a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioEffect.html\">numerous effects</a> that can be added to the audio:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nMinim minim;\r\n\r\nAudioPlayer song;\r\n\r\nBandPass bpf;\r\n\r\nvoid setup() {\r\n\r\nsize(200, 200);\r\n\r\nminim = new Minim(this);\r\n\r\n// this loads Mozart.mp3 from the data folder\r\n\r\nsong = minim.loadFile(\"samba1.mp3\", 512);\r\n\r\nsong.play();\r\n\r\nbpf = new BandPass(440, 20, song.sampleRate());\r\n\r\nsong.addEffect(bpf);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\n}\r\n\r\nvoid mouseMoved() {\r\n\r\n// map the mouse position to the range [100, 10000], an arbitrary range of passBand frequencies\r\n\r\nfloat passBand = map(mouseX, 0, width, 100, 2000);\r\n\r\nbpf.setFreq(passBand);\r\n\r\nfloat bandWidth = map(mouseY, 0, height, 50, 500);\r\n\r\nbpf.setBandWidth(bandWidth);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can find more about Minim and its functions here:\r\n\r\n<a href=\"http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html\">http://code.compartmental.net/minim/javadoc/ddf/minim/AudioPlayer.html</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;','Class 4.2 - Sound','','inherit','open','open','','134-revision-11','','','2012-09-08 23:13:33','2012-09-08 23:13:33','',134,'http://thejsj.com/processing/2012/09/08/134-revision-11/',0,'revision','',0),(148,1,'2012-09-11 03:31:38','2012-09-11 03:31:38','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\n\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\n\r\nsize(640, 480);\r\n\r\nframeRate(30);\r\n\r\nmyMovie = new Movie(this, \"video.mov\");\r\n\r\nmyMovie.loop();\r\n\r\n}\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\n\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAlso, as with images, you can use Processing to display a video many times in a grid. This is a lot easier than doing it with typical video editing program.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\n\r\nfor(int i = 0; i &lt; width/32; i++){\r\n\r\nfor(int ii = 0; ii &lt; height/24; ii++){\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also alter these images all at once. In this case we\'ll make the alpha changed according to frameCount and column:\r\n\r\n[cc lang=\"processing\"]\r\n\r\ntint(255, (frameCount * i)%255);\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n[/cc]\r\n\r\nMaybe, you want to find out what what percentage of the video file has ellapsed. Since Processing knows the duration and current time of your video you can do something like this:\r\n\r\n[cc lang=\"Processing\"]\r\n\r\nfloat perEllapsed = map(myMovie.time(), 0, myMovie.duration(), 0, float(width));\r\n\r\nstroke(255);\r\n\r\nline(0,height/2, perEllapsed, height/2);\r\n\r\n[/cc]\r\n\r\nOne very interesting feature about processing is that it can also capture video and you can make things happen depending of what\'s going on your webcam.\r\n\r\n[cc lang=\"processing\"]\r\n\r\n// This is not mine!\r\n\r\n//Copy Paste from Processing examples\r\n\r\n/**\r\n* Getting Started with Capture.\r\n*\r\n* Reading and displaying an image from an attached Capture device.\r\n*/\r\n\r\nimport processing.video.*;\r\n\r\nCapture cam;\r\n\r\nvoid setup() {\r\n\r\nsize(640, 480, P2D);\r\n\r\nString[] cameras = Capture.list();\r\n\r\nif (cameras.length == 0) {\r\n\r\nprintln(\"There are no cameras available for capture.\");\r\n\r\nexit();\r\n\r\n} else {\r\n\r\nprintln(\"Available cameras:\");\r\n\r\nfor (int i = 0; i &lt; cameras.length; i++) {\r\n\r\nprintln(cameras[i]);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\ncam = new Capture(this, 320, 240, cameras[0]);\r\n\r\ncam.start();\r\n\r\n// You can get the list of resolutions (width x height x fps)\r\n\r\n// supported capture device by calling the resolutions()\r\n\r\n// method. It must be called after creating the capture\r\n\r\n// object.\r\n\r\nResolution[] res = cam.resolutions();\r\n\r\nprintln(\"Supported resolutions:\");\r\n\r\nfor (int i = 0; i &lt; res.length; i++) {\r\n\r\nprintln(res[i].width + \"x\" + res[i].height + \", \" + res[i].fps + \" fps (\" + res[i].fpsString +\")\");\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw() {\r\n\r\nif (cam.available() == true) {\r\n\r\ncam.read();\r\n\r\n}\r\n\r\nimage(cam, 0, 0);\r\n\r\n// The following does the same, and is faster when just drawing the image\r\n\r\n// without any additional resizing, transformations, or tint.\r\n\r\n//set(0, 0, cam);\r\n}\r\n\r\n[/cc]\r\n\r\nYou can do all the same things to this image as you did the previous one, since you are calling the same \"image()\" function.\r\n\r\nIn terms of video, this is beyond my expertise, so pretty much everything you see here is hacking away at other people\'s code ( in this case, Shiffman\'s examples in Learning Processing):\r\n\r\n[cc lang=\"processing\"]\r\n\r\n&nbsp;\r\n\r\n/**\r\n* Getting Started with Capture.\r\n*\r\n* Reading and displaying an image from an attached Capture device.\r\n*/\r\n\r\nimport processing.video.*;\r\n\r\nCapture cam;\r\n\r\n// Previous Frame\r\n\r\nPImage prevFrame;\r\n\r\n// How different must a pixel be to be a \"motion\" pixel\r\n\r\nfloat threshold = 50;\r\n\r\nvoid setup() {\r\n\r\nsize(640, 480, P2D);\r\n\r\nString[] cameras = Capture.list();\r\n\r\nif (cameras.length == 0) {\r\n\r\nprintln(\"There are no cameras available for capture.\");\r\n\r\nexit();\r\n\r\n} else {\r\n\r\nprintln(\"Available cameras:\");\r\n\r\nfor (int i = 0; i &lt; cameras.length; i++) {\r\n\r\nprintln(cameras[i]);\r\n\r\n}\r\n\r\ncam = new Capture(this, 320, 240, cameras[0]);\r\n\r\ncam.start();\r\n\r\nprevFrame = createImage(cam.width,cam.height,RGB);\r\n\r\n// You can get the list of resolutions (width x height x fps)\r\n\r\n// supported capture device by calling the resolutions()\r\n\r\n// method. It must be called after creating the capture\r\n\r\n// object.\r\n\r\nResolution[] res = cam.resolutions();\r\n\r\nprintln(\"Supported resolutions:\");\r\n\r\nfor (int i = 0; i &lt; res.length; i++) {\r\n\r\nprintln(res[i].width + \"x\" + res[i].height + \", \" + res[i].fps + \" fps (\" + res[i].fpsString +\")\");\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw() {\r\n\r\nfloat overAlldif = 0;\r\n\r\n// Capture video\r\n\r\nif (cam.available()) {\r\n\r\n// Save previous frame for motion detection!!\r\n\r\nprevFrame.copy(cam,0,0,cam.width,cam.height,0,0,cam.width,cam.height); // Before we read the new frame, we always save the previous frame for comparison!\r\n\r\nprevFrame.updatePixels();\r\n\r\ncam.read();\r\n\r\nloadPixels();\r\n\r\ncam.loadPixels();\r\n\r\nprevFrame.loadPixels();\r\n\r\n// Begin loop to walk through every pixel\r\n\r\nfor (int x = 0; x &lt; cam.width; x ++ ) {\r\n\r\nfor (int y = 0; y &lt; cam.height; y ++ ) {\r\n\r\nint loc = x + y*cam.width; // Step 1, what is the 1D pixel location\r\n\r\ncolor current = cam.pixels[loc]; // Step 2, what is the current color\r\n\r\ncolor previous = prevFrame.pixels[loc]; // Step 3, what is the previous color\r\n\r\n// Step 4, compare colors (previous vs. current)\r\n\r\nfloat r1 = red(current); float g1 = green(current); float b1 = blue(current);\r\n\r\nfloat r2 = red(previous); float g2 = green(previous); float b2 = blue(previous);\r\n\r\nfloat diff = dist(r1,g1,b1,r2,g2,b2);\r\n\r\noverAlldif = overAlldif + diff;\r\n\r\n// Step 5, How different are the colors?\r\n\r\n// If the color at that pixel has changed, then there is motion at that pixel.\r\n\r\nif (diff &gt; threshold) {\r\n\r\n// If motion, display black\r\n\r\npixels[loc] = color(0);\r\n\r\n} else {\r\n\r\n// If not, display white\r\n\r\npixels[loc] = color(255);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nupdatePixels();\r\n}\r\n\r\nprintln(overAlldif);\r\n\r\n}\r\n\r\n[/cc]','Class #5: Video','','publish','open','open','','class-5-video','','','2012-09-13 20:27:21','2012-09-13 20:27:21','',0,'http://thejsj.com/processing/?p=148',0,'post','',0),(149,1,'2012-09-11 03:15:25','2012-09-11 03:15:25','','video','','inherit','open','open','','video','','','2012-09-11 03:15:25','2012-09-11 03:15:25','',148,'http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip',0,'attachment','application/zip',0),(150,1,'2012-09-11 03:22:48','2012-09-11 03:22:48','For this class, you will need to use Processing 2.0. The video libraries are very different.\n\nSo let\'s get right to it:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\n\nThis is your first example. A simple video (This is a video I made, btw :) ).\n\n[cc lang=\"processing\"]\n\nimport processing.video.*;\nMovie myMovie;\n\nvoid setup() {\nsize(640, 480);\nframeRate(30);\nmyMovie = new Movie(this, \"video.mov\");\nmyMovie.loop();\n}\n\nvoid draw() {\nbackground(0);\nif (myMovie.available()) {\nmyMovie.read();\n}\nimage(myMovie,0,0, 640, 480);\n\n}\n\n[/cc]\n\nYou could make it more interactive with something as simple as:\n\n[cc lang=\"processing\"]\n\nimage(myMovie,mouseX,mouseY, 640, 480);\n\n[/cc]\n\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch.\n\n[cc lang=\"processing\"]\n\nvoid draw() {\n\nbackground(0);\n\nif (myMovie.available()) {\n\nmyMovie.read();\n\n}\n\nstroke(255);\n\nline(0,0,mouseX,mouseY);\n\nline(0,0,mouseX,mouseY + 640/2);\n\nline(0,0,mouseX + 480/2,mouseY + 640/2);\n\nline(0,0,mouseX + 480/2,mouseY);\n\nstrokeWeight(1);\n\nrect(mouseX,mouseY, 640/2, 480/2);\n\nimage(myMovie,mouseX,mouseY, 640/2, 480/2);\n\n}\n\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision','','','2012-09-11 03:22:48','2012-09-11 03:22:48','',148,'http://thejsj.com/processing/2012/09/11/148-revision/',0,'revision','',0),(151,1,'2012-09-13 20:27:19','2012-09-13 20:27:19','For this class, you will need to use Processing 2.0. The video libraries are very different.\n\nSo let\'s get right to it:\n\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\n\nThis is your first example. A simple video (This is a video I made, btw :) ).\n\n[cc lang=\"processing\"]\n\nimport processing.video.*;\n\nMovie myMovie;\n\nvoid setup() {\n\nsize(640, 480);\n\nframeRate(30);\n\nmyMovie = new Movie(this, \"video.mov\");\n\nmyMovie.loop();\n\n}\n\nvoid draw() {\n\nbackground(0);\n\nif (myMovie.available()) {\n\nmyMovie.read();\n\n}\n\nimage(myMovie,0,0, 640, 480);\n\n}\n\n[/cc]\n\nYou could make it more interactive with something as simple as:\n\n[cc lang=\"processing\"]\n\nimage(myMovie,mouseX,mouseY, 640, 480);\n\n[/cc]\n\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\n\n[cc lang=\"processing\"]\n\nvoid draw() {\n\nbackground(0);\n\nif (myMovie.available()) {\n\nmyMovie.read();\n\n}\nstroke(255);\n\nstrokeWeight(1);\n\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\n\nfor(int i = 0; i &lt; 4; i++){\n\nline(points[i][0],points[i][1],mouseX,mouseY);\n\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\n\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\n\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\n\n}\n\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\n\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\n\n}\n\n[/cc]\n\nYou can pause and play the movie too:\n\n[cc lang=\"processing\"]\n\n//At the top\n\nboolean paused = false;\n\n//At the bottom\n\nvoid mousePressed(){\n\nif(!paused){\n\nmyMovie.pause();\n\npaused = true;\n\n}\n\nelse {\n\nmyMovie.play();\n\npaused = false;\n\n}\n\n}\n\n[/cc]\n\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\n\n[cc lang=\"processing\"]\n\nvoid mousePressed() {\n\nmyMovie.jump(random(myMovie.duration()));\n\n}\n\n[/cc]\n\nAlso, as with images, you can use Processing to display a video many times in a grid. This is a lot easier than doing it with typical video editing program.\n\n[cc lang=\"processing\"]\n\nvoid draw() {\n\nbackground(0);\n\nif (myMovie.available()) {\n\nmyMovie.read();\n\n}\n\nfor(int i = 0; i &lt; width/32; i++){\n\nfor(int ii = 0; ii &lt; height/24; ii++){\n\nimage(myMovie,32 * i,24 * ii, 32, 24);\n\n}\n\n}\n\n}\n\n[/cc]\n\nYou can also alter these images all at once. In this case we\'ll make the alpha changed according to frameCount and column:\n\n[cc lang=\"processing\"]\n\ntint(255, (frameCount * i)%255);\n\nimage(myMovie,32 * i,24 * ii, 32, 24);\n\n[/cc]\n\nMaybe, you want to find out what what percentage of the video file has ellapsed. Since Processing knows the duration and current time of your video you can do something like this:\n\n[cc lang=\"Processing\"]\n\nfloat perEllapsed = map(myMovie.time(), 0, myMovie.duration(), 0, float(width));\n\nstroke(255);\n\nline(0,height/2, perEllapsed, height/2);\n\n[/cc]\n\nOne very interesting feature about processing is that it can also capture video and you can make things happen depending of what\'s going on your webcam.\n\n[cc lang=\"processing\"]\n\n// This is not mine!\n\n//Copy Paste from Processing examples\n\n/**\n* Getting Started with Capture.\n*\n* Reading and displaying an image from an attached Capture device.\n*/\n\nimport processing.video.*;\n\nCapture cam;\n\nvoid setup() {\n\nsize(640, 480, P2D);\n\nString[] cameras = Capture.list();\n\nif (cameras.length == 0) {\n\nprintln(\"There are no cameras available for capture.\");\n\nexit();\n\n} else {\n\nprintln(\"Available cameras:\");\n\nfor (int i = 0; i &lt; cameras.length; i++) {\n\nprintln(cameras[i]);\n\n}\n\n&nbsp;\n\ncam = new Capture(this, 320, 240, cameras[0]);\n\ncam.start();\n\n// You can get the list of resolutions (width x height x fps)\n\n// supported capture device by calling the resolutions()\n\n// method. It must be called after creating the capture\n\n// object.\n\nResolution[] res = cam.resolutions();\n\nprintln(\"Supported resolutions:\");\n\nfor (int i = 0; i &lt; res.length; i++) {\n\nprintln(res[i].width + \"x\" + res[i].height + \", \" + res[i].fps + \" fps (\" + res[i].fpsString +\")\");\n\n}\n\n}\n\n}\n\nvoid draw() {\n\nif (cam.available() == true) {\n\ncam.read();\n\n}\n\nimage(cam, 0, 0);\n\n// The following does the same, and is faster when just drawing the image\n\n// without any additional resizing, transformations, or tint.\n\n//set(0, 0, cam);\n}\n\n[/cc]\n\nYou can do all the same things to this image as you did the previous one, since you are calling the same \"image()\" function.\n\nIn terms of video, this is beyond my expertise, so pretty much everything you see here is hacking away at other people\'s code ( in this case, Shiffman\'s examples in Learning Processing):\n\n[cc lang=\"processing\"]\n\n&nbsp;\n\n/**\n* Getting Started with Capture.\n*\n* Reading and displaying an image from an attached Capture device.\n*/\n\nimport processing.video.*;\n\nCapture cam;\n\n// Previous Frame\n\nPImage prevFrame;\n\n// How different must a pixel be to be a \"motion\" pixel\n\nfloat threshold = 50;\n\nvoid setup() {\n\nsize(640, 480, P2D);\n\nString[] cameras = Capture.list();\n\nif (cameras.length == 0) {\n\nprintln(\"There are no cameras available for capture.\");\n\nexit();\n\n} else {\n\nprintln(\"Available cameras:\");\n\nfor (int i = 0; i &lt; cameras.length; i++) {\n\nprintln(cameras[i]);\n\n}\n\ncam = new Capture(this, 320, 240, cameras[0]);\n\ncam.start();\n\nprevFrame = createImage(cam.width,cam.height,RGB);\n\n// You can get the list of resolutions (width x height x fps)\n\n// supported capture device by calling the resolutions()\n\n// method. It must be called after creating the capture\n\n// object.\n\nResolution[] res = cam.resolutions();\n\nprintln(\"Supported resolutions:\");\n\nfor (int i = 0; i &lt; res.length; i++) {\n\nprintln(res[i].width + \"x\" + res[i].height + \", \" + res[i].fps + \" fps (\" + res[i].fpsString +\")\");\n\n}\n\n}\n\n}\n\nvoid draw() {\n\nfloat overAlldif = 0;\n\n// Capture video\n\nif (cam.available()) {\n\n// Save previous frame for motion detection!!\n\nprevFrame.copy(cam,0,0,cam.width,cam.height,0,0,cam.width,cam.height); // Before we read the new frame, we always save the previous frame for comparison!\n\nprevFrame.updatePixels();\n\ncam.read();\n\nloadPixels();\n\ncam.loadPixels();\n\nprevFrame.loadPixels();\n\n// Begin loop to walk through every pixel\n\nfor (int x = 0; x &lt; cam.width; x ++ ) {\n\nfor (int y = 0; y &lt; cam.height; y ++ ) {\n\nint loc = x + y*cam.width; // Step 1, what is the 1D pixel location\n\ncolor current = cam.pixels[loc]; // Step 2, what is the current color\n\ncolor previous = prevFrame.pixels[loc]; // Step 3, what is the previous color\n\n// Step 4, compare colors (previous vs. current)\n\nfloat r1 = red(current); float g1 = green(current); float b1 = blue(current);\n\nfloat r2 = red(previous); float g2 = green(previous); float b2 = blue(previous);\n\nfloat diff = dist(r1,g1,b1,r2,g2,b2);\n\noverAlldif = overAlldif + diff;\n\n// Step 5, How different are the colors?\n\n// If the color at that pixel has changed, then there is motion at that pixel.\n\nif (diff &gt; threshold) {\n\n// If motion, display black\n\npixels[loc] = color(0);\n\n} else {\n\n// If not, display white\n\npixels[loc] = color(255);\n\n}\n\n}\n\n}\n\nupdatePixels();\n}\n\nprintln(overAlldif);\n\n}\n\n[/cc]','Class #5: Video','','inherit','open','open','','148-autosave','','','2012-09-13 20:27:19','2012-09-13 20:27:19','',148,'http://thejsj.com/processing/2012/09/11/148-autosave/',0,'revision','',0),(152,1,'2012-09-11 03:31:38','2012-09-11 03:31:38','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-2','','','2012-09-11 03:31:38','2012-09-11 03:31:38','',148,'http://thejsj.com/processing/2012/09/11/148-revision-2/',0,'revision','',0),(153,1,'2012-09-11 03:34:50','2012-09-11 03:34:50','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-3','','','2012-09-11 03:34:50','2012-09-11 03:34:50','',148,'http://thejsj.com/processing/2012/09/11/148-revision-3/',0,'revision','',0),(154,1,'2012-09-11 03:37:19','2012-09-11 03:37:19','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-4','','','2012-09-11 03:37:19','2012-09-11 03:37:19','',148,'http://thejsj.com/processing/2012/09/11/148-revision-4/',0,'revision','',0),(155,1,'2012-09-11 03:53:10','2012-09-11 03:53:10','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-5','','','2012-09-11 03:53:10','2012-09-11 03:53:10','',148,'http://thejsj.com/processing/2012/09/11/148-revision-5/',0,'revision','',0),(156,1,'2012-09-11 04:00:12','2012-09-11 04:00:12','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;','Class #5: Video','','inherit','open','open','','148-revision-6','','','2012-09-11 04:00:12','2012-09-11 04:00:12','',148,'http://thejsj.com/processing/2012/09/11/148-revision-6/',0,'revision','',0),(157,1,'2012-09-11 17:20:17','2012-09-11 17:20:17','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAlso, as with images, you can use Processing to display a video many times in a grid. This is a lot easier than doing it with typical video editing program.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\n\r\nfor(int i = 0; i &lt; width/32; i++){\r\n\r\nfor(int ii = 0; ii &lt; height/24; ii++){\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also alter these images all at once. In this case we\'ll make the alpha changed according to frameCount and column:\r\n\r\n[cc lang=\"processing\"]\r\n\r\ntint(255, (frameCount * i)%255);\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-7','','','2012-09-11 17:20:17','2012-09-11 17:20:17','',148,'http://thejsj.com/processing/2012/09/11/148-revision-7/',0,'revision','',0),(158,1,'2012-09-11 17:24:29','2012-09-11 17:24:29','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAlso, as with images, you can use Processing to display a video many times in a grid. This is a lot easier than doing it with typical video editing program.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\n\r\nfor(int i = 0; i &lt; width/32; i++){\r\n\r\nfor(int ii = 0; ii &lt; height/24; ii++){\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also alter these images all at once. In this case we\'ll make the alpha changed according to frameCount and column:\r\n\r\n[cc lang=\"processing\"]\r\n\r\ntint(255, (frameCount * i)%255);\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n[/cc]\r\n\r\nMaybe, you want to find out what what percentage of the video file has ellapsed. Since Processing knows the duration and current time of your video you can do something like this:\r\n\r\n[cc lang=\"Processing\"]\r\n\r\nfloat perEllapsed = map(myMovie.time(), 0, myMovie.duration(), 0, float(width));\r\n\r\nstroke(255);\r\n\r\nline(0,height/2, perEllapsed, height/2);\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-8','','','2012-09-11 17:24:29','2012-09-11 17:24:29','',148,'http://thejsj.com/processing/2012/09/11/148-revision-8/',0,'revision','',0),(159,1,'2012-09-11 17:55:54','2012-09-11 17:55:54','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAlso, as with images, you can use Processing to display a video many times in a grid. This is a lot easier than doing it with typical video editing program.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\n\r\nfor(int i = 0; i &lt; width/32; i++){\r\n\r\nfor(int ii = 0; ii &lt; height/24; ii++){\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also alter these images all at once. In this case we\'ll make the alpha changed according to frameCount and column:\r\n\r\n[cc lang=\"processing\"]\r\n\r\ntint(255, (frameCount * i)%255);\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n[/cc]\r\n\r\nMaybe, you want to find out what what percentage of the video file has ellapsed. Since Processing knows the duration and current time of your video you can do something like this:\r\n\r\n[cc lang=\"Processing\"]\r\n\r\nfloat perEllapsed = map(myMovie.time(), 0, myMovie.duration(), 0, float(width));\r\n\r\nstroke(255);\r\n\r\nline(0,height/2, perEllapsed, height/2);\r\n\r\n[/cc]\r\n\r\nOne very interesting feature about processing is that it can also capture video and you can make things happen depending of what\'s going on your webcam.\r\n\r\n[cc lang=\"processing\"]\r\n\r\n// This is not mine!\r\n\r\n//Copy Paste from Processing examples\r\n\r\n/**\r\n* Getting Started with Capture.\r\n*\r\n* Reading and displaying an image from an attached Capture device.\r\n*/\r\n\r\nimport processing.video.*;\r\n\r\nCapture cam;\r\n\r\nvoid setup() {\r\n\r\nsize(640, 480, P2D);\r\n\r\nString[] cameras = Capture.list();\r\nif (cameras.length == 0) {\r\n\r\nprintln(\"There are no cameras available for capture.\");\r\n\r\nexit();\r\n\r\n} else {\r\n\r\nprintln(\"Available cameras:\");\r\n\r\nfor (int i = 0; i &lt; cameras.length; i++) {\r\n\r\nprintln(cameras[i]);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\ncam = new Capture(this, 320, 240, cameras[0]);\r\n\r\ncam.start();\r\n\r\n// You can get the list of resolutions (width x height x fps)\r\n\r\n// supported capture device by calling the resolutions()\r\n\r\n// method. It must be called after creating the capture\r\n\r\n// object.\r\n\r\nResolution[] res = cam.resolutions();\r\n\r\nprintln(\"Supported resolutions:\");\r\n\r\nfor (int i = 0; i &lt; res.length; i++) {\r\n\r\nprintln(res[i].width + \"x\" + res[i].height + \", \" + res[i].fps + \" fps (\" + res[i].fpsString +\")\");\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw() {\r\n\r\nif (cam.available() == true) {\r\n\r\ncam.read();\r\n\r\n}\r\n\r\nimage(cam, 0, 0);\r\n\r\n// The following does the same, and is faster when just drawing the image\r\n\r\n// without any additional resizing, transformations, or tint.\r\n\r\n//set(0, 0, cam);\r\n}\r\n\r\n[/cc]\r\n\r\nYou can do all the same things to this image as you did the previous one, since you are calling the same \"image()\" function.\r\n\r\nIn terms of video, this is beyond my expertise, so pretty much everything you see here is hacking away at other people\'s code ( in this case, Shiffman\'s examples in Learning Processing):\r\n\r\n[cc lang=\"processing\"]\r\n\r\n&nbsp;\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-9','','','2012-09-11 17:55:54','2012-09-11 17:55:54','',148,'http://thejsj.com/processing/2012/09/11/148-revision-9/',0,'revision','',0),(160,1,'2012-09-11 18:19:25','2012-09-11 18:19:25','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>-->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z2.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase Class #2','','publish','open','open','','work-showcase-class-2','','','2012-09-13 18:26:43','2012-09-13 18:26:43','',0,'http://thejsj.com/processing/?p=160',0,'post','',0),(161,1,'2012-09-11 18:19:09','2012-09-11 18:19:09','<h4>Anne Lantz</h4>\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Chris Costello</h4>\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Luke Unger</h4>\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Zack Kojoyian</h4>\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase Class #2','','inherit','open','open','','160-revision','','','2012-09-11 18:19:09','2012-09-11 18:19:09','',160,'http://thejsj.com/processing/2012/09/11/160-revision/',0,'revision','',0),(169,1,'2012-09-11 18:21:27','2012-09-11 18:21:27','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>-->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z2.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase Class #2','','inherit','open','open','','160-revision-3','','','2012-09-11 18:21:27','2012-09-11 18:21:27','',160,'http://thejsj.com/processing/2012/09/11/160-revision-3/',0,'revision','',0),(162,1,'2012-09-11 18:19:43','2012-09-11 18:19:43','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4> \r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z3.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #3','','publish','open','open','','work-showcase-class-3','','','2012-09-11 18:21:14','2012-09-11 18:21:14','',0,'http://thejsj.com/processing/?p=162',0,'post','',0),(163,1,'2012-09-11 18:19:41','2012-09-11 18:19:41','<h4>Anne Lantz</h4>\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a2.pde\" width=\"475\" height=\"475\"></canvas>\n<!--<h4>Chris Costello</h4>\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c2.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Luke Unger</h4>-->\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l2.pde\" width=\"475\" height=\"475\"></canvas>\n<h4>Zack Kojoyian</h4>\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z2.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #3','','inherit','open','open','','162-revision','','','2012-09-11 18:19:41','2012-09-11 18:19:41','',162,'http://thejsj.com/processing/2012/09/11/162-revision/',0,'revision','',0),(168,1,'2012-09-11 18:19:25','2012-09-11 18:19:25','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<!--<h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>-->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z2.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase Class #2','','inherit','open','open','','160-revision-2','','','2012-09-11 18:19:25','2012-09-11 18:19:25','',160,'http://thejsj.com/processing/2012/09/11/160-revision-2/',0,'revision','',0),(164,1,'2012-09-11 18:19:43','2012-09-11 18:19:43','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<!--<h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>-->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z2.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #3','','inherit','open','open','','162-revision-2','','','2012-09-11 18:19:43','2012-09-11 18:19:43','',162,'http://thejsj.com/processing/2012/09/11/162-revision-2/',0,'revision','',0),(165,1,'2012-09-11 18:19:55','2012-09-11 18:19:55','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<!--<h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>-->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z3.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #3','','inherit','open','open','','162-revision-3','','','2012-09-11 18:19:55','2012-09-11 18:19:55','',162,'http://thejsj.com/processing/2012/09/11/162-revision-3/',0,'revision','',0),(166,1,'2012-09-11 18:20:29','2012-09-11 18:20:29','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<!-- <h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4> -->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z3.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #3','','inherit','open','open','','162-revision-4','','','2012-09-11 18:20:29','2012-09-11 18:20:29','',162,'http://thejsj.com/processing/2012/09/11/162-revision-4/',0,'revision','',0),(167,1,'2012-09-11 18:20:51','2012-09-11 18:20:51','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<!-- <h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c3.pde\" width=\"475\" height=\"475\"></canvas>-->\r\n<h4>Luke Unger</h4> \r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l3.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z3.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase: Class #3','','inherit','open','open','','162-revision-5','','','2012-09-11 18:20:51','2012-09-11 18:20:51','',162,'http://thejsj.com/processing/2012/09/11/162-revision-5/',0,'revision','',0),(170,1,'2012-09-11 18:37:34','2012-09-11 18:37:34','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>-->\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l2.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z2.pde\" width=\"475\" height=\"475\"></canvas>','Work Showcase Class #2','','inherit','open','open','','160-revision-4','','','2012-09-11 18:37:34','2012-09-11 18:37:34','',160,'http://thejsj.com/processing/2012/09/11/160-revision-4/',0,'revision','',0),(171,1,'2012-09-11 18:18:26','2012-09-11 18:18:26','For this class, you will need to use Processing 2.0. The video libraries are very different.\r\n\r\nSo let\'s get right to it:\r\n\r\n<a href=\"http://thejsj.com/processing/wp-content/uploads/2012/09/video.zip\">This is the zip</a>\r\n\r\nThis is your first example. A simple video (This is a video I made, btw :) ).\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimport processing.video.*;\r\nMovie myMovie;\r\n\r\nvoid setup() {\r\nsize(640, 480);\r\nframeRate(30);\r\nmyMovie = new Movie(this, \"video.mov\");\r\nmyMovie.loop();\r\n}\r\n\r\nvoid draw() {\r\nbackground(0);\r\nif (myMovie.available()) {\r\nmyMovie.read();\r\n}\r\nimage(myMovie,0,0, 640, 480);\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou could make it more interactive with something as simple as:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nimage(myMovie,mouseX,mouseY, 640, 480);\r\n\r\n[/cc]\r\n\r\nThe thing that set Processing apart form all the video editing software is the fact that you can interact with it (There is probably some piece of software that probes me wrong!). But we can also draw on this thing as with any other Processing sketch. This example draws a line from every corner of the sketch to every corner of the video, as a way to accentuate the interaction.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\nstroke(255);\r\n\r\nstrokeWeight(1);\r\n\r\nint[][] points = { {0,0}, {width,0}, {width,height}, {0,height} };\r\n\r\nfor(int i = 0; i &lt; 4; i++){\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY);\r\n\r\nline(points[i][0],points[i][1],mouseX,mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY + (height/2));\r\n\r\nline(points[i][0],points[i][1],mouseX + (width/2),mouseY);\r\n\r\n}\r\n\r\nrect(mouseX-1,mouseY-1, (width/2) + 1, height/2 + 1);\r\n\r\nimage(myMovie,mouseX,mouseY, (width/2), (height/2));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can pause and play the movie too:\r\n\r\n[cc lang=\"processing\"]\r\n\r\n//At the top\r\n\r\nboolean paused = false;\r\n\r\n//At the bottom\r\n\r\nvoid mousePressed(){\r\n\r\nif(!paused){\r\n\r\nmyMovie.pause();\r\n\r\npaused = true;\r\n\r\n}\r\n\r\nelse {\r\n\r\nmyMovie.play();\r\n\r\npaused = false;\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also jump to anywhere on the video (through knowing it\'s duration and jumping to a specific time):\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed() {\r\n\r\nmyMovie.jump(random(myMovie.duration()));\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAlso, as with images, you can use Processing to display a video many times in a grid. This is a lot easier than doing it with typical video editing program.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid draw() {\r\n\r\nbackground(0);\r\n\r\nif (myMovie.available()) {\r\n\r\nmyMovie.read();\r\n\r\n}\r\n\r\nfor(int i = 0; i &lt; width/32; i++){\r\n\r\nfor(int ii = 0; ii &lt; height/24; ii++){\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also alter these images all at once. In this case we\'ll make the alpha changed according to frameCount and column:\r\n\r\n[cc lang=\"processing\"]\r\n\r\ntint(255, (frameCount * i)%255);\r\n\r\nimage(myMovie,32 * i,24 * ii, 32, 24);\r\n\r\n[/cc]\r\n\r\nMaybe, you want to find out what what percentage of the video file has ellapsed. Since Processing knows the duration and current time of your video you can do something like this:\r\n\r\n[cc lang=\"Processing\"]\r\n\r\nfloat perEllapsed = map(myMovie.time(), 0, myMovie.duration(), 0, float(width));\r\n\r\nstroke(255);\r\n\r\nline(0,height/2, perEllapsed, height/2);\r\n\r\n[/cc]\r\n\r\nOne very interesting feature about processing is that it can also capture video and you can make things happen depending of what\'s going on your webcam.\r\n\r\n[cc lang=\"processing\"]\r\n\r\n// This is not mine!\r\n\r\n//Copy Paste from Processing examples\r\n\r\n/**\r\n* Getting Started with Capture.\r\n*\r\n* Reading and displaying an image from an attached Capture device.\r\n*/\r\n\r\nimport processing.video.*;\r\n\r\nCapture cam;\r\n\r\nvoid setup() {\r\n\r\nsize(640, 480, P2D);\r\n\r\nString[] cameras = Capture.list();\r\nif (cameras.length == 0) {\r\n\r\nprintln(\"There are no cameras available for capture.\");\r\n\r\nexit();\r\n\r\n} else {\r\n\r\nprintln(\"Available cameras:\");\r\n\r\nfor (int i = 0; i &lt; cameras.length; i++) {\r\n\r\nprintln(cameras[i]);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\ncam = new Capture(this, 320, 240, cameras[0]);\r\n\r\ncam.start();\r\n\r\n// You can get the list of resolutions (width x height x fps)\r\n\r\n// supported capture device by calling the resolutions()\r\n\r\n// method. It must be called after creating the capture\r\n\r\n// object.\r\n\r\nResolution[] res = cam.resolutions();\r\n\r\nprintln(\"Supported resolutions:\");\r\n\r\nfor (int i = 0; i &lt; res.length; i++) {\r\n\r\nprintln(res[i].width + \"x\" + res[i].height + \", \" + res[i].fps + \" fps (\" + res[i].fpsString +\")\");\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nvoid draw() {\r\n\r\nif (cam.available() == true) {\r\n\r\ncam.read();\r\n\r\n}\r\n\r\nimage(cam, 0, 0);\r\n\r\n// The following does the same, and is faster when just drawing the image\r\n\r\n// without any additional resizing, transformations, or tint.\r\n\r\n//set(0, 0, cam);\r\n}\r\n\r\n[/cc]\r\n\r\nYou can do all the same things to this image as you did the previous one, since you are calling the same \"image()\" function.\r\n\r\nIn terms of video, this is beyond my expertise, so pretty much everything you see here is hacking away at other people\'s code ( in this case, Shiffman\'s examples in Learning Processing):\r\n\r\n[cc lang=\"processing\"]\r\n\r\n&nbsp;\r\n\r\n/**\r\n* Getting Started with Capture.\r\n*\r\n* Reading and displaying an image from an attached Capture device.\r\n*/\r\n\r\nimport processing.video.*;\r\n\r\nCapture cam;\r\n\r\n// Previous Frame\r\nPImage prevFrame;\r\n// How different must a pixel be to be a \"motion\" pixel\r\nfloat threshold = 50;\r\n\r\nvoid setup() {\r\nsize(640, 480, P2D);\r\n\r\nString[] cameras = Capture.list();\r\n\r\nif (cameras.length == 0) {\r\nprintln(\"There are no cameras available for capture.\");\r\nexit();\r\n} else {\r\nprintln(\"Available cameras:\");\r\nfor (int i = 0; i &lt; cameras.length; i++) {\r\nprintln(cameras[i]);\r\n}\r\n\r\ncam = new Capture(this, 320, 240, cameras[0]);\r\ncam.start();\r\n\r\nprevFrame = createImage(cam.width,cam.height,RGB);\r\n\r\n// You can get the list of resolutions (width x height x fps)\r\n// supported capture device by calling the resolutions()\r\n// method. It must be called after creating the capture\r\n// object.\r\nResolution[] res = cam.resolutions();\r\nprintln(\"Supported resolutions:\");\r\nfor (int i = 0; i &lt; res.length; i++) {\r\nprintln(res[i].width + \"x\" + res[i].height + \", \" +\r\nres[i].fps + \" fps (\" + res[i].fpsString +\")\");\r\n}\r\n}\r\n}\r\nvoid draw() {\r\n\r\nfloat overAlldif = 0;\r\n\r\n// Capture video\r\nif (cam.available()) {\r\n// Save previous frame for motion detection!!\r\nprevFrame.copy(cam,0,0,cam.width,cam.height,0,0,cam.width,cam.height); // Before we read the new frame, we always save the previous frame for comparison!\r\nprevFrame.updatePixels();\r\ncam.read();\r\nloadPixels();\r\ncam.loadPixels();\r\nprevFrame.loadPixels();\r\n\r\n// Begin loop to walk through every pixel\r\nfor (int x = 0; x &lt; cam.width; x ++ ) {\r\nfor (int y = 0; y &lt; cam.height; y ++ ) {\r\n\r\nint loc = x + y*cam.width; // Step 1, what is the 1D pixel location\r\ncolor current = cam.pixels[loc]; // Step 2, what is the current color\r\ncolor previous = prevFrame.pixels[loc]; // Step 3, what is the previous color\r\n\r\n// Step 4, compare colors (previous vs. current)\r\nfloat r1 = red(current); float g1 = green(current); float b1 = blue(current);\r\nfloat r2 = red(previous); float g2 = green(previous); float b2 = blue(previous);\r\nfloat diff = dist(r1,g1,b1,r2,g2,b2);\r\noverAlldif = overAlldif + diff;\r\n\r\n// Step 5, How different are the colors?\r\n// If the color at that pixel has changed, then there is motion at that pixel.\r\nif (diff &gt; threshold) {\r\n// If motion, display black\r\npixels[loc] = color(0);\r\n} else {\r\n// If not, display white\r\npixels[loc] = color(255);\r\n}\r\n}\r\n}\r\nupdatePixels();\r\n}\r\n\r\nprintln(overAlldif);\r\n}\r\n\r\n[/cc]','Class #5: Video','','inherit','open','open','','148-revision-10','','','2012-09-11 18:18:26','2012-09-11 18:18:26','',148,'http://thejsj.com/processing/2012/09/11/148-revision-10/',0,'revision','',0),(173,1,'2012-09-01 22:05:53','2012-09-01 22:05:53','<h4>Anne Lantz</h4>\r\n<canvas id=\"a1\" data-processing-sources=\"/processing/sketches/a1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Chris Costello</h4>\r\n<canvas id=\"c1\" data-processing-sources=\"/processing/sketches/c1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Luke Unger</h4>\r\n<canvas id=\"l1\" data-processing-sources=\"/processing/sketches/l1.pde\" width=\"475\" height=\"475\"></canvas>\r\n<h4>Zack Kojoyian</h4>\r\n<canvas id=\"z1\" data-processing-sources=\"/processing/sketches/z1.pde\" width=\"475\" height=\"475\"></canvas>','Class 1: Work Showcase','','inherit','open','open','','107-revision-7','','','2012-09-01 22:05:53','2012-09-01 22:05:53','',107,'http://thejsj.com/processing/2012/09/01/107-revision-7/',0,'revision','',0),(174,1,'2012-09-16 22:46:39','2012-09-16 22:46:39','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\r\n<h4>Zack Kojoyian</h4>\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/06Xgzw1ea-4\" frameborder=\"0\" allowfullscreen></iframe>\r\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #4 (Sound & Image)','','publish','open','open','','work-showcase-class-4','','','2012-10-06 21:12:14','2012-10-06 21:12:14','',0,'http://thejsj.com/processing/?p=174',0,'post','',0),(175,1,'2012-09-16 22:46:15','2012-09-16 22:46:15','<h4>Anne Lantz</h4>\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\n\nLuke Ungee','Work Showcase: Class #4','','inherit','open','open','','174-revision','','','2012-09-16 22:46:15','2012-09-16 22:46:15','',174,'http://thejsj.com/processing/2012/09/16/174-revision/',0,'revision','',0),(176,1,'2012-10-05 22:37:20','2012-10-05 22:37:20','<h4>Anne Lantz</h4>\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\n<h4>Luke Unger</h4>\nSound:\n\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\n\nImage:\n\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>\n<h4>Zack Kojoyian</h4>\n<a href=\"http://thejsj.com/processing/sketches/z4.pde\">http://thejsj.com/processing/sketches/z4.pde</a> (Source Code)','Work Showcase: Class #4 (Sound & Image)','','inherit','open','open','','174-autosave','','','2012-10-05 22:37:20','2012-10-05 22:37:20','',174,'http://thejsj.com/processing/2012/09/16/174-autosave/',0,'revision','',0),(177,1,'2012-09-16 22:46:39','2012-09-16 22:46:39','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/l4/\">http://thejsj.com/processing/sketches/l4/</a>','Work Showcase: Class #4','','inherit','open','open','','174-revision-2','','','2012-09-16 22:46:39','2012-09-16 22:46:39','',174,'http://thejsj.com/processing/2012/09/16/174-revision-2/',0,'revision','',0),(178,1,'2012-09-16 22:52:20','2012-09-16 22:52:20','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>','Work Showcase: Class #4','','inherit','open','open','','174-revision-3','','','2012-09-16 22:52:20','2012-09-16 22:52:20','',174,'http://thejsj.com/processing/2012/09/16/174-revision-3/',0,'revision','',0),(179,1,'2012-09-16 22:55:25','2012-09-16 22:55:25','<h4>Anne Lantz</h4>\r\n<a href=\"http://thejsj.com/processing/sketches/a4/\">http://thejsj.com/processing/sketches/a4/</a>\r\n<h4>Luke Unger</h4>\r\nSound:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l41/\">http://thejsj.com/processing/sketches/l41/</a>\r\n\r\nImage:\r\n\r\n<a href=\"http://thejsj.com/processing/sketches/l42/\">http://thejsj.com/processing/sketches/l42/</a>','Work Showcase: Class #4','','inherit','open','open','','174-revision-4','','','2012-09-16 22:55:25','2012-09-16 22:55:25','',174,'http://thejsj.com/processing/2012/09/16/174-revision-4/',0,'revision','',0),(180,1,'2012-09-18 18:12:37','2012-09-18 18:12:37','Object-oriented programming is a way in which to program your sketches:\r\n\r\n\"<strong>Object-oriented programming</strong> (<strong>OOP</strong>) is a <a title=\"Programming paradigm\" href=\"http://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a> using \"<a title=\"Object (computer science)\" href=\"http://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\" – usually <a title=\"Instance (computer science)\" href=\"http://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a> of a <a title=\"Class (computer science)\" href=\"http://en.wikipedia.org/wiki/Class_(computer_science)\">class</a> – consisting of <a title=\"Field (computer science)\" href=\"http://en.wikipedia.org/wiki/Field_(computer_science)\">data fields</a> and<a title=\"Method (computer science)\" href=\"http://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a> together with their interactions – to design applications and computer programs.\" - Wikipedia\r\n\r\nIn this type of programming, all aspects of an object are organized through a class, which makes building more complex systems easier.\r\n\r\nThe most basic example could be something like:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj mrDot;\r\n\r\nvoid setup(){\r\n\r\nmrDot = new Obj();\r\n\r\nstroke(0);\r\n\r\nsize(200,200);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nmrDot.display();\r\n\r\n}\r\n\r\nclass Obj{\r\n\r\nfloat x;\r\n\r\nfloat y;\r\n\r\nObj(){\r\n\r\nx = random(width);\r\n\r\ny = random(height);\r\n\r\n}\r\n\r\nvoid display(){\r\n\r\nellipseMode(CENTER);\r\n\r\nellipse(x,y, 10, 10);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that the object has been created, it is very easy to replicate it:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj[] mrDot = new Obj[100];\r\n\r\nvoid setup(){\r\n\r\nsize(200,200);\r\n\r\nfor(int i = 0; i &lt; mrDot.length; i++){\r\n\r\nmrDot[i] = new Obj();\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfor(int i = 0; i &lt; mrDot.length; i++){\r\n\r\nmrDot[i].display();\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also use an ArrayList, to dynamically add and remove thing from the list. We\'ll convert everything to work with the ArrayList and then make it more dynamic.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nArrayList mrDot;\r\n\r\nvoid setup(){\r\n\r\nsize(200,200);\r\n\r\nmrDot = new ArrayList();\r\n\r\nfor(int i = 0; i &lt; 100; i++){\r\n\r\nmrDot.add(new Obj());\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfor(int i = 0; i &lt; mrDot.size(); i++){\r\n\r\nObj oneDot = (Obj) mrDot.get(i);\r\n\r\noneDot.display();\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow, you can make is so that every time you make a click, a new object is created.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed(){\r\n\r\nmrDot.add(new Obj());\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAs simple as that! If you did this without an ArrayList, you would have to re-declare the array and set a new range and the populate it.\r\n\r\nYou can also remove objects:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid keyPressed(){\r\n\r\nif(mrDot.size() &gt; 0){\r\n\r\nmrDot.remove(mrDot.size() - 1);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','An very short introduction to Object-Oriented Programming','','publish','open','open','','an-very-short-introduction-to-object-oriented-programming','','','2012-09-18 18:41:49','2012-09-18 18:41:49','',0,'http://thejsj.com/processing/?p=180',0,'post','',0),(181,1,'2012-09-18 18:12:09','2012-09-18 18:12:09','Object-oriented programming is a way in which to program your sketches:\n\n\"<strong>Object-oriented programming</strong> (<strong>OOP</strong>) is a <a title=\"Programming paradigm\" href=\"http://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a> using \"<a title=\"Object (computer science)\" href=\"http://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\" – usually <a title=\"Instance (computer science)\" href=\"http://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a> of a <a title=\"Class (computer science)\" href=\"http://en.wikipedia.org/wiki/Class_(computer_science)\">class</a> – consisting of <a title=\"Field (computer science)\" href=\"http://en.wikipedia.org/wiki/Field_(computer_science)\">data fields</a> and<a title=\"Method (computer science)\" href=\"http://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a> together with their interactions – to design applications and computer programs.\" - Wikipedia\n\nIn this type of programming, all aspects of an object are organized through a class, which makes building more complex systems easier.\n\nThe most basic example','An very short introduction to Object-Oriented Programming','','inherit','open','open','','180-revision','','','2012-09-18 18:12:09','2012-09-18 18:12:09','',180,'http://thejsj.com/processing/2012/09/18/180-revision/',0,'revision','',0),(182,1,'2012-09-18 18:41:01','2012-09-18 18:41:01','Object-oriented programming is a way in which to program your sketches:\n\n\"<strong>Object-oriented programming</strong> (<strong>OOP</strong>) is a <a title=\"Programming paradigm\" href=\"http://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a> using \"<a title=\"Object (computer science)\" href=\"http://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\" – usually <a title=\"Instance (computer science)\" href=\"http://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a> of a <a title=\"Class (computer science)\" href=\"http://en.wikipedia.org/wiki/Class_(computer_science)\">class</a> – consisting of <a title=\"Field (computer science)\" href=\"http://en.wikipedia.org/wiki/Field_(computer_science)\">data fields</a> and<a title=\"Method (computer science)\" href=\"http://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a> together with their interactions – to design applications and computer programs.\" - Wikipedia\n\nIn this type of programming, all aspects of an object are organized through a class, which makes building more complex systems easier.\n\nThe most basic example could be something like:\n\n[cc lang=\"processing\"]\n\nObj mrDot;\n\nvoid setup(){\n\nmrDot = new Obj();\n\nstroke(0);\n\nsize(200,200);\n\n}\n\nvoid draw(){\n\nbackground(255);\n\nmrDot.display();\n\n}\n\nclass Obj{\n\nfloat x;\n\nfloat y;\n\nObj(){\n\nx = random(width);\n\ny = random(height);\n\n}\n\nvoid display(){\n\nellipseMode(CENTER);\n\nellipse(x,y, 10, 10);\n\n}\n\n}\n\n[/cc]\n\nNow that the object has been created, it is very easy to replicate it:\n\n[cc lang=\"processing\"]\n\nObj[] mrDot = new Obj[100];\n\nvoid setup(){\n\nsize(200,200);\n\nfor(int i = 0; i &lt; mrDot.length; i++){\n\nmrDot[i] = new Obj();\n\n}\n\nstroke(0);\n\n}\n\nvoid draw(){\n\nbackground(255);\n\nfor(int i = 0; i &lt; mrDot.length; i++){\n\nmrDot[i].display();\n\n}\n\n}\n\n[/cc]\n\nYou can also use an ArrayList, to dynamically add and remove thing from the list. We\'ll convert everything to work with the ArrayList and then make it more dynamic.\n\n[cc lang=\"processing\"]\n\nArrayList mrDot;\n\nvoid setup(){\n\nsize(200,200);\n\nmrDot = new ArrayList();\n\nfor(int i = 0; i &lt; 100; i++){\n\nmrDot.add(new Obj());\n\n}\n\nstroke(0);\n\n}\n\nvoid draw(){\n\nbackground(255);\n\nfor(int i = 0; i &lt; mrDot.size(); i++){\n\nObj oneDot = (Obj) mrDot.get(i);\n\noneDot.display();\n\n}\n\n}\n\n[/cc]\n\nNow, you can make is so that every time you make a click, a new object is created.\n\n[cc lang=\"processing\"]\n\nvoid mousePressed(){\n\nmrDot.add(new Obj());\n\n}\n\n[/cc]\n\nAs simple as that! If you did this without an ArrayList, you would have to re-declare the array and set a new range and the populate it.\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','An very short introduction to Object-Oriented Programming','','inherit','open','open','','180-autosave','','','2012-09-18 18:41:01','2012-09-18 18:41:01','',180,'http://thejsj.com/processing/2012/09/18/180-autosave/',0,'revision','',0),(183,1,'2012-09-18 18:12:37','2012-09-18 18:12:37','Object-oriented programming is a way in which to program your sketches:\r\n\r\n\"<strong>Object-oriented programming</strong> (<strong>OOP</strong>) is a <a title=\"Programming paradigm\" href=\"http://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a> using \"<a title=\"Object (computer science)\" href=\"http://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\" – usually <a title=\"Instance (computer science)\" href=\"http://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a> of a <a title=\"Class (computer science)\" href=\"http://en.wikipedia.org/wiki/Class_(computer_science)\">class</a> – consisting of <a title=\"Field (computer science)\" href=\"http://en.wikipedia.org/wiki/Field_(computer_science)\">data fields</a> and<a title=\"Method (computer science)\" href=\"http://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a> together with their interactions – to design applications and computer programs.\" - Wikipedia\r\n\r\nIn this type of programming, all aspects of an object are organized through a class, which makes building more complex systems easier.\r\n\r\nThe most basic example could be something like:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj mrDot;\r\n\r\nvoid setup(){\r\n\r\nmrDot = new Obj();\r\n\r\nstroke(0);\r\n\r\nsize(200,200);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nmrDot.display();\r\n\r\n}\r\n\r\nclass Obj{\r\n\r\nfloat x;\r\n\r\nfloat y;\r\n\r\nObj(){\r\n\r\nx = random(width);\r\n\r\ny = random(height);\r\n\r\n}\r\n\r\nvoid display(){\r\n\r\nellipseMode(CENTER);\r\n\r\nellipse(x,y, 10, 10);\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n[/cc]','An very short introduction to Object-Oriented Programming','','inherit','open','open','','180-revision-2','','','2012-09-18 18:12:37','2012-09-18 18:12:37','',180,'http://thejsj.com/processing/2012/09/18/180-revision-2/',0,'revision','',0),(184,1,'2012-09-18 18:21:56','2012-09-18 18:21:56','Object-oriented programming is a way in which to program your sketches:\r\n\r\n\"<strong>Object-oriented programming</strong> (<strong>OOP</strong>) is a <a title=\"Programming paradigm\" href=\"http://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a> using \"<a title=\"Object (computer science)\" href=\"http://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\" – usually <a title=\"Instance (computer science)\" href=\"http://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a> of a <a title=\"Class (computer science)\" href=\"http://en.wikipedia.org/wiki/Class_(computer_science)\">class</a> – consisting of <a title=\"Field (computer science)\" href=\"http://en.wikipedia.org/wiki/Field_(computer_science)\">data fields</a> and<a title=\"Method (computer science)\" href=\"http://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a> together with their interactions – to design applications and computer programs.\" - Wikipedia\r\n\r\nIn this type of programming, all aspects of an object are organized through a class, which makes building more complex systems easier.\r\n\r\nThe most basic example could be something like:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj mrDot;\r\n\r\nvoid setup(){\r\n\r\nmrDot = new Obj();\r\n\r\nstroke(0);\r\n\r\nsize(200,200);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nmrDot.display();\r\n\r\n}\r\n\r\nclass Obj{\r\n\r\nfloat x;\r\n\r\nfloat y;\r\n\r\nObj(){\r\n\r\nx = random(width);\r\n\r\ny = random(height);\r\n\r\n}\r\n\r\nvoid display(){\r\n\r\nellipseMode(CENTER);\r\n\r\nellipse(x,y, 10, 10);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that the object has been created, it is very easy to replicate it:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj[] mrDot = new Obj[100];\r\n\r\nvoid setup(){\r\n\r\nsize(200,200);\r\n\r\nfor(int i = 0; i &lt; mrDot.length; i++){\r\n\r\nmrDot[i] = new Obj();\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfor(int i = 0; i &lt; mrDot.length; i++){\r\n\r\nmrDot[i].display();\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]','An very short introduction to Object-Oriented Programming','','inherit','open','open','','180-revision-3','','','2012-09-18 18:21:56','2012-09-18 18:21:56','',180,'http://thejsj.com/processing/2012/09/18/180-revision-3/',0,'revision','',0),(185,1,'2012-09-18 18:41:34','2012-09-18 18:41:34','Object-oriented programming is a way in which to program your sketches:\r\n\r\n\"<strong>Object-oriented programming</strong> (<strong>OOP</strong>) is a <a title=\"Programming paradigm\" href=\"http://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a> using \"<a title=\"Object (computer science)\" href=\"http://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\" – usually <a title=\"Instance (computer science)\" href=\"http://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a> of a <a title=\"Class (computer science)\" href=\"http://en.wikipedia.org/wiki/Class_(computer_science)\">class</a> – consisting of <a title=\"Field (computer science)\" href=\"http://en.wikipedia.org/wiki/Field_(computer_science)\">data fields</a> and<a title=\"Method (computer science)\" href=\"http://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a> together with their interactions – to design applications and computer programs.\" - Wikipedia\r\n\r\nIn this type of programming, all aspects of an object are organized through a class, which makes building more complex systems easier.\r\n\r\nThe most basic example could be something like:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj mrDot;\r\n\r\nvoid setup(){\r\n\r\nmrDot = new Obj();\r\n\r\nstroke(0);\r\n\r\nsize(200,200);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nmrDot.display();\r\n\r\n}\r\n\r\nclass Obj{\r\n\r\nfloat x;\r\n\r\nfloat y;\r\n\r\nObj(){\r\n\r\nx = random(width);\r\n\r\ny = random(height);\r\n\r\n}\r\n\r\nvoid display(){\r\n\r\nellipseMode(CENTER);\r\n\r\nellipse(x,y, 10, 10);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow that the object has been created, it is very easy to replicate it:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nObj[] mrDot = new Obj[100];\r\n\r\nvoid setup(){\r\n\r\nsize(200,200);\r\n\r\nfor(int i = 0; i &lt; mrDot.length; i++){\r\n\r\nmrDot[i] = new Obj();\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfor(int i = 0; i &lt; mrDot.length; i++){\r\n\r\nmrDot[i].display();\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nYou can also use an ArrayList, to dynamically add and remove thing from the list. We\'ll convert everything to work with the ArrayList and then make it more dynamic.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nArrayList mrDot;\r\n\r\nvoid setup(){\r\n\r\nsize(200,200);\r\n\r\nmrDot = new ArrayList();\r\n\r\nfor(int i = 0; i &lt; 100; i++){\r\n\r\nmrDot.add(new Obj());\r\n\r\n}\r\n\r\nstroke(0);\r\n\r\n}\r\n\r\nvoid draw(){\r\n\r\nbackground(255);\r\n\r\nfor(int i = 0; i &lt; mrDot.size(); i++){\r\n\r\nObj oneDot = (Obj) mrDot.get(i);\r\n\r\noneDot.display();\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nNow, you can make is so that every time you make a click, a new object is created.\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid mousePressed(){\r\n\r\nmrDot.add(new Obj());\r\n\r\n}\r\n\r\n[/cc]\r\n\r\nAs simple as that! If you did this without an ArrayList, you would have to re-declare the array and set a new range and the populate it.\r\n\r\nYou can also remove objects:\r\n\r\n[cc lang=\"processing\"]\r\n\r\nvoid keyPressed(){\r\n\r\nif(mrDot.size() &gt; 0){\r\n\r\nmrDot.remove(mrDot.size() - 1);\r\n\r\n}\r\n\r\n}\r\n\r\n[/cc]\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;','An very short introduction to Object-Oriented Programming','','inherit','open','open','','180-revision-4','','','2012-09-18 18:41:34','2012-09-18 18:41:34','',180,'http://thejsj.com/processing/2012/09/18/180-revision-4/',0,'revision','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` (`object_id`, `term_taxonomy_id`, `term_order`) VALUES (1,2,0),(2,2,0),(3,2,0),(4,2,0),(5,2,0),(6,2,0),(7,2,0),(192,6,0),(5,5,0),(9,5,0),(12,3,0),(23,3,0),(43,3,0),(77,4,0),(79,4,0),(123,3,0),(107,6,0),(116,3,0),(125,3,0),(180,4,0),(134,3,0),(148,3,0),(162,6,0),(160,6,0),(174,6,0),(197,6,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` (`term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES (1,1,'category','',0,0),(2,2,'link_category','',0,7),(3,3,'category','',0,8),(4,4,'category','',0,3),(5,5,'category','',0,2),(6,6,'category','',0,6);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` (`term_id`, `name`, `slug`, `term_group`) VALUES (1,'Uncategorized','uncategorized',0),(2,'Blogroll','blogroll',0),(3,'Class','class',0),(4,'Examples','examples',0),(5,'Resources','resources',0),(6,'Work Showcase','work-showcase',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`) VALUES (1,1,'first_name',''),(2,1,'last_name',''),(3,1,'nickname','admin'),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'comment_shortcuts','false'),(7,1,'admin_color','fresh'),(8,1,'use_ssl','0'),(9,1,'show_admin_bar_front','false'),(10,1,'wp_capabilities','a:1:{s:13:\"administrator\";s:1:\"1\";}'),(11,1,'wp_user_level','10'),(12,1,'dismissed_wp_pointers','wp330_toolbar,wp330_media_uploader,wp330_saving_widgets,wp340_choose_image_from_library,wp340_customize_current_theme_link'),(13,1,'show_welcome_panel','1'),(14,1,'wp_dashboard_quick_press_last_post_id','209'),(15,1,'aim',''),(16,1,'yim',''),(17,1,'jabber',''),(18,1,'wp_user-settings','hidetb=1&editor=html&urlbutton=file'),(19,1,'wp_user-settings-time','1349557054'),(21,1,'login-security-solution-last-active','1366074613');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` (`ID`, `user_login`, `user_pass`, `user_nicename`, `user_email`, `user_url`, `user_registered`, `user_activation_key`, `user_status`, `display_name`) VALUES (1,'jorge.silva','$P$BB4SmYEvnP9WYsZKvIl.EJFgfVw2tt0','jorge.silva','silvajr@vcu.edu','','2012-08-22 17:15:29','',0,'admin');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'thejsj_processing'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-01-12 23:31:54
